<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top value ' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
      <column caption='Bottom' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='25.0'>
        <calculation class='tableau' formula='25.0' />
      </column>
    </datasource>
    <datasource caption='COVID-19 Cases _27.03' inline='true' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID-19 Cases _27.03' name='textscan.0tngg2d1y9dqqi17cf7d70960o8o'>
            <connection class='textscan' directory='F:/portfolio/Tableau-portfolio/COVID-19 Cases_updated/dataset' filename='COVID-19 Cases _27.03.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0tngg2d1y9dqqi17cf7d70960o8o' name='COVID-19 Cases _27.03.csv' table='[COVID-19 Cases _27.03#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Case_Type' ordinal='0' />
            <column datatype='integer' name='Cases' ordinal='1' />
            <column datatype='integer' name='Difference' ordinal='2' />
            <column datatype='string' name='Table Names' ordinal='3' />
            <column datatype='string' name='Combined_Key' ordinal='4' />
            <column datatype='string' name='Admin2' ordinal='5' />
            <column datatype='string' name='FIPS' ordinal='6' />
            <column datatype='string' name='Prep_Flow_Runtime' ordinal='7' />
            <column datatype='date' name='Latest_Date' ordinal='8' />
            <column datatype='real' name='Long' ordinal='9' />
            <column datatype='string' name='Country_Region' ordinal='10' />
            <column datatype='date' name='Date' ordinal='11' />
            <column datatype='string' name='Province_State' ordinal='12' />
            <column datatype='real' name='Lat' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Case_Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Case_Type]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Case_Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cases]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Difference</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Difference]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Difference</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Names]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Table Names</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Combined_Key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Combined_Key]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Combined_Key</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Admin2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Admin2]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Admin2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prep_Flow_Runtime</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Prep_Flow_Runtime]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Prep_Flow_Runtime</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latest_Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Latest_Date]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Latest_Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Region]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Country_Region</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province_State]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Province_State</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[COVID-19 Cases _27.03.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' hidden='true' name='[Admin2]' role='dimension' type='nominal' />
      <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Combined_Key]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' hidden='true' name='[FIPS]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[Table Names]' role='dimension' type='nominal' />
      <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country_Region, Province_State'>
          <field>[Country_Region]</field>
          <field>[Province_State]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.430595' measure-ordering='alphabetic' measure-percentage='0.369688' parameter-percentage='0.199717' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country_Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Province_State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guangxi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jiangsu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ningxia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guangdong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fujian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Xinjiang&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;N/A&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qinghai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australian Capital Territory&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tasmania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gansu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Inner Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Australia&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Shandong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liaoning&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western Australia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hebei&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hunan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New South Wales&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yunnan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guizhou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tibet&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zhejiang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hainan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Queensland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Heilongjiang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hubei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jilin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northwest Territories&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shanxi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Anhui&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Yukon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Territory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Jiangxi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sichuan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Case_Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Confirmed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deaths&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bottom COVID countries comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tahoma'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Cases _27.03' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bottom' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='25.0'>
              <calculation class='tableau' formula='25.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09noa6q1bwuxu3120up8a0j1ea6b'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Deaths&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='bottom' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' included-values='in-range'>
            <min>#2020-01-22#</min>
            <max>#2020-03-26#</max>
          </filter>
          <slices>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' value='Country'>
              <formatted-text>
                <run>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Cases:qk]</rows>
        <cols>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{5FD8E723-DB3E-47BB-8A0C-82A16592825E}' />
    </worksheet>
    <worksheet name='Bottom COVID state comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Cases _27.03' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bottom' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='25.0'>
              <calculation class='tableau' formula='25.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09noa6q1bwuxu3120up8a0j1ea6b'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Deaths&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='bottom' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Province_State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Cases:qk]</rows>
        <cols>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{AD940DC6-9F1E-4AD0-82CF-FE693EB51838}' />
    </worksheet>
    <worksheet name='Country specifc COVID Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Cases _27.03' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09noa6q1bwuxu3120up8a0j1ea6b'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Difference]' role='measure' type='quantitative' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference]' derivation='Sum' name='[sum:Difference:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Case_Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country_Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' filter-group='5' included-values='in-range'>
            <min>#2020-02-02#</min>
            <max>#2020-03-26#</max>
          </filter>
          <slices>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[Longitude (generated)]' field-type='quantitative' max='24343150.947885614' min='-24487185.965488393' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[Latitude (generated)]' field-type='quantitative' max='13201743.800211582' min='-13100311.457059052' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Difference:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='3' />
            <format attr='border-style' data-class='total' value='dotted' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Difference:qk]' />
              <size column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Difference:qk]' />
              <lod column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' />
              <lod column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' />
              <lod column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Difference:qk]' />
              <geometry column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Case_Type:&#9;</run>
                <run bold='true'>&lt;[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases: &#9;</run>
                <run bold='true'>&lt;[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Difference:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>Country:&#9;&lt;[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-color' value='#b07aa1' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='185' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[Latitude (generated)]</rows>
        <cols>([federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk] * [federated.09noa6q1bwuxu3120up8a0j1ea6b].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{59868AF0-141D-4A45-B9A4-B672163553E5}' />
    </worksheet>
    <worksheet name='Country specific COVID  cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Cases _27.03' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' />
          </datasources>
          <datasource-dependencies datasource='federated.09noa6q1bwuxu3120up8a0j1ea6b'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Case_Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country_Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' filter-group='5' included-values='in-range'>
            <min>#2020-02-02#</min>
            <max>#2020-03-26#</max>
          </filter>
          <slices>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Cases:qk]</rows>
        <cols>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{D109B9FE-E61F-4CB7-921D-1B3E3B13532C}' />
    </worksheet>
    <worksheet name='Top 5 COVID countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Cases _27.03' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' />
          </datasources>
          <datasource-dependencies datasource='federated.09noa6q1bwuxu3120up8a0j1ea6b'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]'>
            <groupfilter function='level-members' level='[none:Case_Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' included-values='in-range'>
            <min>#2020-01-22#</min>
            <max>#2020-03-24#</max>
          </filter>
          <slices>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk] * [federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Cases:qk])</rows>
        <cols>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{73F4227F-BFF7-43A6-91E4-843D5D69CCB6}' />
    </worksheet>
    <worksheet name='Top COVID countries comparsion'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tahoma'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Cases _27.03' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top value ' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09noa6q1bwuxu3120up8a0j1ea6b'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Deaths&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' included-values='in-range'>
            <min>#2020-01-22#</min>
            <max>#2020-03-24#</max>
          </filter>
          <slices>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' value='Country'>
              <formatted-text>
                <run>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' value='Case Type'>
              <formatted-text>
                <run fontname='Tahoma'>Case Type</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' value='Date'>
              <formatted-text>
                <run fontname='Tahoma'>Date</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Top'>
              <formatted-text>
                <run>Top</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Cases:qk]</rows>
        <cols>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{A8BEF046-BE90-4639-A02B-F09EDFF551C5}' />
    </worksheet>
    <worksheet name='Top COVID state comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Cases _27.03' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top value ' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09noa6q1bwuxu3120up8a0j1ea6b'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Deaths&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' included-values='in-range'>
            <min>#2020-01-22#</min>
            <max>#2020-03-26#</max>
          </filter>
          <filter class='categorical' column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Province_State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</column>
            <column>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]' value='State'>
              <formatted-text>
                <run>State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Cases:qk]</rows>
        <cols>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{5593DD96-E628-4D88-A205-EC2532E07B42}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='COVID Story 1 ' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Country specifc COVID cases' captured-sheet='Country Specific COVID' id='1' />
                  <story-point caption='Top 5 COVID affected countries' captured-sheet='Top 5 COVID countries' id='2' />
                  <story-point caption='Top / Bottom COVID affected countries' captured-sheet='Top &amp; Bottom COVID countries' id='3' />
                  <story-point caption='Top / Bottom COVID  affected States' captured-sheet='Top &amp; Bottom COVID States' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{A97E6BA4-C3A2-4E6B-8AC9-7895BA306C1C}' />
    </dashboard>
    <dashboard name='Country Specific COVID'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='COVID-19 Cases _27.03' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' />
      </datasources>
      <datasource-dependencies datasource='federated.09noa6q1bwuxu3120up8a0j1ea6b'>
        <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
        <column aggregation='None' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='80900' x='800' y='1000'>
              <zone h='49000' id='3' name='Country specific COVID  cases' w='80900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Country specifc COVID Map' w='80900' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='175' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='17500' x='81700' y='1000'>
              <zone h='9125' id='8' name='Country specific COVID  cases' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='17500' x='81700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7625' id='9' mode='checkdropdown' name='Country specific COVID  cases' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' w='17500' x='81700' y='10125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7625' id='10' mode='dropdown' name='Country specific COVID  cases' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' type='filter' values='cascading' w='17500' x='81700' y='17750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9000' id='11' name='Country specific COVID  cases' pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='color' w='17500' x='81700' y='25375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='11000' id='14' name='Country specifc COVID Map' pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Difference:qk]' type='color' w='14000' x='83300' y='61750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='31' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9125' id='8' name='Country specific COVID  cases' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='17500' x='81700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='9' mode='checkdropdown' name='Country specific COVID  cases' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' w='17500' x='81700' y='10125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='10' mode='dropdown' name='Country specific COVID  cases' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' type='filter' values='cascading' w='17500' x='81700' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Country specific COVID  cases' w='80900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9000' id='11' name='Country specific COVID  cases' pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='color' w='17500' x='81700' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Country specifc COVID Map' w='80900' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='14' name='Country specifc COVID Map' pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Difference:qk]' type='color' w='14000' x='83300' y='61750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A219331C-655F-48DE-9883-EE1BF75681EF}' />
    </dashboard>
    <dashboard name='Top &amp; Bottom COVID States'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='COVID-19 Cases _27.03' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top value ' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
        <column caption='Bottom' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='25.0'>
          <calculation class='tableau' formula='25.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.09noa6q1bwuxu3120up8a0j1ea6b'>
        <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Top COVID state comparison' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Bottom COVID state comparison' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7625' id='8' mode='checkdropdown' name='Top COVID state comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='9' name='Top COVID state comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='8625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16875' id='10' name='Top COVID state comparison' pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]' type='color' w='16000' x='83200' y='17750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7000' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='34625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7625' id='13' mode='checkdropdown' name='Bottom COVID state comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' w='16800' x='83200' y='53500' />
        <zone h='9125' id='14' name='Bottom COVID state comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16800' x='83200' y='60875' />
        <zone h='6000' id='15' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='83700' y='69000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='32' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='7625' id='8' mode='checkdropdown' name='Top COVID state comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='9' name='Top COVID state comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Top COVID state comparison' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16875' id='10' name='Top COVID state comparison' pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]' type='color' w='16000' x='83200' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='34625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='13' mode='checkdropdown' name='Bottom COVID state comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' w='16800' x='83200' y='53500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='14' name='Bottom COVID state comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16800' x='83200' y='60875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Bottom COVID state comparison' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6000' id='15' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='83700' y='69000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8213C452-AB96-41C4-AFFB-78FFD75CF7C9}' />
    </dashboard>
    <dashboard name='Top &amp; Bottom COVID countries'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='COVID-19 Cases _27.03' name='federated.09noa6q1bwuxu3120up8a0j1ea6b' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top value ' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
        <column caption='Bottom' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='25.0'>
          <calculation class='tableau' formula='25.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.09noa6q1bwuxu3120up8a0j1ea6b'>
        <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Top COVID countries comparsion' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Bottom COVID countries comparison' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7625' id='8' mode='checkdropdown' name='Top COVID countries comparsion' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='9' name='Top COVID countries comparsion' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='8625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16875' id='10' name='Top COVID countries comparsion' pane-specification-id='2' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' type='color' w='16000' x='83200' y='17750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' h='7000' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='34625'>
                <formatted-text>
                  <run>Top</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7625' id='13' mode='checkdropdown' name='Bottom COVID countries comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' w='16800' x='83000' y='58750' />
        <zone h='6000' id='15' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='83600' y='76125' />
        <zone h='9125' id='14' name='Bottom COVID countries comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16800' x='83100' y='66500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='32' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='7625' id='8' mode='checkdropdown' name='Top COVID countries comparsion' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='9' name='Top COVID countries comparsion' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Top COVID countries comparsion' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16875' id='10' name='Top COVID countries comparsion' pane-specification-id='2' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' type='color' w='16000' x='83200' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7000' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='34625'>
                  <formatted-text>
                    <run>Top</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='13' mode='checkdropdown' name='Bottom COVID countries comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' w='16800' x='83000' y='58750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='14' name='Bottom COVID countries comparison' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16800' x='83100' y='66500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Bottom COVID countries comparison' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6000' id='15' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='83600' y='76125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FFAC7542-5939-41F1-8FF9-77B2565C91CA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Country specific COVID  cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' />
            <card mode='dropdown' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66A2DB04-BD70-484C-B37F-94D2D44CC6C2}' />
    </window>
    <window class='worksheet' name='Country specifc COVID Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Difference:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Difference:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EEAEFBA1-FE43-4A28-BC59-92CC780EB61F}' />
    </window>
    <window class='dashboard' name='Country Specific COVID'>
      <viewpoints>
        <viewpoint name='Country specifc COVID Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[sum:Difference:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Country specific COVID  cases'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4DFA0E2B-DA4E-42B0-A55E-957BC94BB420}' />
    </window>
    <window class='worksheet' name='Top 5 COVID countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB0DF2ED-1760-4C74-9150-984B9B7089F1}' />
    </window>
    <window class='worksheet' name='Top COVID countries comparsion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' />
            <card param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' type='color' />
            <card custom-title='true' mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[dy:Date:ok]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09FF959E-ABFE-4A09-B81A-B17222A27BBA}' />
    </window>
    <window class='worksheet' name='Bottom COVID countries comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' />
            <card param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Country_Region:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B44F9D8C-434C-466B-9E32-FADF1A2B0547}' />
    </window>
    <window class='dashboard' name='Top &amp; Bottom COVID countries'>
      <viewpoints>
        <viewpoint name='Bottom COVID countries comparison'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top COVID countries comparsion'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F772CB2E-8690-423A-AB24-B34A07005E3A}' />
    </window>
    <window class='worksheet' name='Top COVID state comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' />
            <card param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A66F054D-0B22-4E3A-9636-BAE12F69B734}' />
    </window>
    <window class='worksheet' name='Bottom COVID state comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]' type='filter' />
            <card param='[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Case_Type:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Date:qk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]</field>
            <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{871BBD4C-AB53-405A-BBCF-8582C10B3422}' />
    </window>
    <window class='dashboard' name='Top &amp; Bottom COVID States'>
      <viewpoints>
        <viewpoint name='Bottom COVID state comparison'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top COVID state comparison'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09noa6q1bwuxu3120up8a0j1ea6b].[none:Province_State:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{65DE9501-7F61-4E65-8D8C-B6E5599C00E4}' />
    </window>
    <window class='dashboard' maximized='true' name='COVID Story 1 '>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{5A040806-E582-44F9-901C-610025377A77}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bottom COVID countries comparison' width='192'>
      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
      NqOKDAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bottom COVID state comparison' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='COVID Story 1 ' width='192'>
      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
      B+nj/wAl2F4Q53NSnQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Country Specific COVID' width='192'>
      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
      uSwAZkfG6Tx1hsDENM3H3qL/wsUVbZCu3n023tPP7Og4AMlIlHPvv8/7717p/fKShJiLY7XZ
      SSWTqzeGe/PUKQb7+qioqWZjYyMlK+iypeXl2MxWXvvZy6zZ1rCosqlUqkWDL51BT14U0Or1
      WJzz+uzM8DhatYbEXISNN7HrJxwKYzaZ8c9MMtDTzfjAKf70jw/wxrlxKnbtI51IkkmliQdD
      SPk8rmIv+WyOgZY2ZscmmewfomLDOirWr6VsbS3u8hI6T51FZ9AjFQqM9w7gHxol7J9FrVZj
      ttuIzMzh9A/wmcoC780IbG4XFY3rOfnKUR49+DhqtZqJoRG2rG+gtKx8kepzu4zhjh0/zqzf
      z8ZNm6jfuHHZ6UeA2rVrmegdwB+aXRiMX13hLn8HMFrMJJJJbD43Wp2ObCpNaNIPBQmr2rCi
      gd/VzM340en1ZJA4+q//TsFlpvHAfkb6B9jxzEFmhsdJxxNE54KYLGbMdhuJcITB1g6Ck37G
      e/rZcehRXCU+ytbVoVKrGO3sxeq0E5qeJTI7x1BrJ4lwZH6KV0AmlSI+N0c2nsBZWozRasHs
      dTFwvoU9++Znu3pb23j2qWex2e3o9PrVrQQDvNvefsOXv4wQgr/7i/8XEZpi27pqFs1JqCCe
      LzBUkDE7XFTvaVzwc+aVNzCmVVTX1fHmOyf4k6//X/hKbnyMXjqd5kff/UsOHqrkwulOqlwy
      R9q1zPlDGC1mSmqr2frYQ8QCQaYHRjCYTTiKPTg87hVVk57XXkOfz1D2+FPk0mlMNhvRuQDB
      yWmyY8P85i432+pLOXxuiGMzGqr37WPk9TP8ype+hNPlYm5mZtkKczPHotyoPCKJBG3DwzcM
      5zKJeJw/+cM/pGr/VsyOKyYI8/VeRSadJhOMUrqmBs/a+anHTCLJmX87wtrSKjQmAx2trfz5
      //jrm7Lnnxgb498P/4SavVtoev0dtEYDsizjHxqjpK4KX2U5a3dupfv985SvX8toRzfr9+5Y
      cb4/n81y9pVjFJUVU75+7aW1DRVzYxPkczm63zvHk1/4NDqDnta3T2OyO+ZNukdn+dJv/w7J
      RIJsJkOR58rJgHfUHFqlUmEw6HnBqWGDy8Eau2Xhb63dSoPTjj2R5LVj74LVgsagY+b8RZLd
      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
      4it5rJ3/D+ZJcPcFFPEWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Country specifc COVID Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO292Y8k13rY+Tsn9ojca+ludpNsklquZAteH0a2ZfjBGIwBeYCx4Ac/+C8z
      4BnM8uIB9DAbJGAAG7Yl2ZZljS3dK0uX95JsNtndtWTlFpGxn3mIE8GsrKWrurOqqyrjBxAk
      q7IiIyPPd863f0IppWhp2VLkh76BlpYPSSsALVtNKwAtH5T5+DW/93u/z+EkfOtrv/v5T/i/
      /p/fZRImG3t/c2NXaml5B37/9/89f/cf/PeYyYw/+L1/he0NefXqFX/51/4SX3/5Fxhen7/z
      638TAezu72B8PeOn//kPefbsET/5s69ILZtBf0Q+fUNudfl7v/HfIK7x/u0J0PJBcUzJIlzy
      3c9+wquTkK++fcUgMPmL//on/MmPf47n+2f+5pc+3eFf/N9/wP7A5dEnn3Pw3U/5oz/6Cb7n
      cV2Pjmi9QC0fkjyN+NMf/1eeffwxL18dsDcaMD56w86TzwiPXyLdLtOjA3IFz7/4BYpcMQgE
      v/sv/5C/+sznP7zK+Pu/8etMX39FKjv80hefXOsEaAQgz3NMs9WIWu4mq+tzGc4Rto9RZpSG
      hWMa73zdRgUqiuL973ILUErx6uU3HE8WZ39X5nzzzbfM5md/d86ViKLl5m/wgbK6Pr2gi2sZ
      WI77XosfWiP42px89xWZu8uOb/Lzn/45VmeIzEKmUUYgYr4PTfzA4zheEGWCZH5EWkgwLD59
      ssOL7w749PkzXnz9FTk+f/lXPv/QH2mraY3ga7KIUkaDDiKZo/wdoumYOFcMui6u3+f5p59w
      dHzMm8MxHz3eR1ouEnBtg69//nOKbMlXP/uKJ5/9EoFjfeiPs/W0J8A1efb5c/7sz37MaP8x
      +ewNpj+gF9hYhoFUitI2Ub0elmlhSEGv2yNzc0zLYhA4vD6e8vjRPt/+7Eu6/Z0P/XG2nsYI
      DsOwNYJb7ixZlmFZmz8xmxVvmiaO42z8DVpaNsVNrM/WBmjZaloBaNlqWgFo2WpaAWjZaloB
      aNlqWgFo2WpaAWjZaloBaNlqWgFo2WpaAWjZaloBaNlqWgFo2WpaAWjZaloBaNlqWgFo2Wpa
      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
      Yj/b3X0ve2Ob6LourmWx3+1imyaldodOouiD1CMIKq3jIhVXKL0qkyTBecd888lkwjSKGIch
      SZ5TlCVlWaKoXJp3SeV5G0q7V13LYpmmFGXJwPdbw/calEoh4MwzGw6H7/wc33V9FkXBZDLh
      aLEgTBIS3SK/KMtqfNM73c05rKbTKqXIioIwSZq03PuCEKL5HFar8rwTd614ps5T2tOu8fpU
      KsryZrxAqym7LS13DSlEkxh5vyyWlpYN0wpAy1bTCkDLVtMKQMtW0wpAy1bTCkDLVtMKQMtW
      0wpAy1bTCkDLVtMKQMtW0wpAy1bTCkDLVtMKQMtW0wpAy1bTCkDLVtMKQMtWs5GKFcuy7nS9
      b8v2IoTAvqTb9kYEILhnZY8t24OUks4FU3KgVYFatpxWAFq2mlYAWraaVgBatppWAFq2mlYA
      WraaVgBatppWAFq2mlYAWraaVgBatppWAFq2mlYAWraaVgBatppWAFq2mlYAWraaVgBatppW
      AFq2mlYAWraaVgBatpr/H6e4QdqG1d6iAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Country specific COVID  cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top &amp; Bottom COVID States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top &amp; Bottom COVID countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 COVID countries' width='192'>
      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
      fU4FgNLT/j/Dp1gn3TEhEQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top COVID countries comparsion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top COVID state comparison' width='192'>
      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
      ALtgfMOJ5kwwAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
