<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SingleValuePerNestSorting ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
      </column>
    </datasource>
    <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' inline='true' name='federated.052anc510sq6h11a53u5z0o0tqcv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID-19-geographic-disbtribution-worldwide' name='excel-direct.1d9f73o1gj8g6t1573s6x0dak9uk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/portfolio/Tableau-portfolio/ECDC COVID 19 WW/dataset/COVID-19-geographic-disbtribution-worldwide.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1d9f73o1gj8g6t1573s6x0dak9uk' name='COVID-19-geographic-disbtributi' table='[&apos;COVID-19-geographic-disbtributi$&apos;]' type='table'>
          <columns gridOrigin='A1:J8305:no:A1:J8305:0' header='yes' outcome='6'>
            <column datatype='date' name='dateRep' ordinal='0' />
            <column datatype='integer' name='day' ordinal='1' />
            <column datatype='integer' name='month' ordinal='2' />
            <column datatype='integer' name='year' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='string' name='countriesAndTerritories' ordinal='6' />
            <column datatype='string' name='geoId' ordinal='7' />
            <column datatype='string' name='countryterritoryCode' ordinal='8' />
            <column datatype='integer' name='popData2018' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>dateRep</remote-name>
            <remote-type>7</remote-type>
            <local-name>[dateRep]</local-name>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias>dateRep</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countriesAndTerritories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[countriesAndTerritories]</local-name>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias>countriesAndTerritories</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geoId</remote-name>
            <remote-type>130</remote-type>
            <local-name>[geoId]</local-name>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias>geoId</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryterritoryCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[countryterritoryCode]</local-name>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias>countryterritoryCode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>popData2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[popData2018]</local-name>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias>popData2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID-19-geographic-disbtributi]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J8305:no:A1:J8305:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank of cases' datatype='integer' name='[Calculation_1848446208049020928]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([cases]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank of deaths' datatype='integer' name='[Calculation_1848446208049139713]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM(deaths))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column datatype='string' name='[countriesAndTerritories]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='string' name='[countryterritoryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[countriesAndTerritories]' derivation='None' name='[none:countriesAndTerritories:nk]' pivot='key' type='nominal' />
      <column-instance column='[cases]' derivation='Sum' name='[pcto:sum:cases:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[deaths]' derivation='Sum' name='[pcto:sum:deaths:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.498584' measure-ordering='alphabetic' measure-percentage='0.461756' parameter-percentage='0.0396601' rowDisplayCount='8305' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:cases:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:deaths:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:countriesAndTerritories:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United_States_of_America&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:countriesAndTerritories:nk]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British_Virgin_Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial_Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North_Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint_Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea_Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;United_States_of_America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic_Republic_of_the_Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei_Darussalam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CuraÃ§ao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sint_Maarten&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia_and_Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa_Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland_Islands_(Malvinas)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor_Leste&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman_Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint_Barthelemy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern_Mariana_Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint_Vincent_and_the_Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape_Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican_Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isle_of_Man&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New_Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua_and_Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote_dIvoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faroe_Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto_Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South_Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United_Arab_Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South_Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United_Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cases_on_an_international_conveyance_Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri_Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United_States_Virgin_Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central_African_Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El_Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint_Kitts_and_Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French_Polynesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turks_and_Caicos_islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holy_See&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua_New_Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra_Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad_and_Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San_Marino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New_Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South_Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United_Republic_of_Tanzania&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina_Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech_Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi_Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='COVID cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Trebuchet MS'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' name='federated.052anc510sq6h11a53u5z0o0tqcv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.052anc510sq6h11a53u5z0o0tqcv'>
            <column datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[countriesAndTerritories]' role='dimension' type='nominal' />
            <column datatype='date' name='[dateRep]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[countriesAndTerritories]' derivation='None' name='[none:countriesAndTerritories:nk]' pivot='key' type='nominal' />
            <column-instance column='[dateRep]' derivation='None' name='[none:dateRep:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[pcto:sum:cases:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' filter-group='5'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:countriesAndTerritories:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#2019-12-31#</min>
            <max>#2020-04-02#</max>
          </filter>
          <slices>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</column>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f0eae8' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4b4b4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <size column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:cases:qk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:cases:qk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Trebuchet MS' fontsize='8'>&lt;[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontname='Trebuchet MS' fontsize='8'>&lt;[federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:cases:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontname='Trebuchet MS' fontsize='8'>&lt;[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:cases:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D571CB0B-0F00-423A-92AC-E1E0A3E36035}' />
    </worksheet>
    <worksheet name='COVID cases packed bubble'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Trebuchet MS'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' name='federated.052anc510sq6h11a53u5z0o0tqcv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.052anc510sq6h11a53u5z0o0tqcv'>
            <column datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[countriesAndTerritories]' role='dimension' type='nominal' />
            <column datatype='date' name='[dateRep]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[countriesAndTerritories]' derivation='None' name='[none:countriesAndTerritories:nk]' pivot='key' type='nominal' />
            <column-instance column='[dateRep]' derivation='None' name='[none:dateRep:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:countriesAndTerritories:nk]' />
                  <groupfilter function='member' level='[none:countriesAndTerritories:nk]' member='&quot;Italy&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' filter-group='3' included-values='in-range'>
            <min>#2019-12-31#</min>
            <max>#2020-04-02#</max>
          </filter>
          <slices>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]</column>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' value='Date' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <size column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:cases:qk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:cases:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Trebuchet MS' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DD516197-564E-4AC9-8DA7-708D13C60BA8}' />
    </worksheet>
    <worksheet name='COVID cases vs deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Trebuchet MS'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' name='federated.052anc510sq6h11a53u5z0o0tqcv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.052anc510sq6h11a53u5z0o0tqcv'>
            <column datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[countriesAndTerritories]' role='dimension' type='nominal' />
            <column datatype='date' name='[dateRep]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[countriesAndTerritories]' derivation='None' name='[none:countriesAndTerritories:nk]' pivot='key' type='nominal' />
            <column-instance column='[dateRep]' derivation='None' name='[none:dateRep:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[pcto:sum:cases:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[deaths]' derivation='Sum' name='[pcto:sum:deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:countriesAndTerritories:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' filter-group='7' included-values='in-range'>
            <min>#2019-12-31#</min>
            <max>#2020-04-02#</max>
          </filter>
          <single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' shelf='columns' />
          </single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</column>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' value='Date' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:deaths:qk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:cases:qk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:deaths:qk] + [federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:cases:qk])</rows>
        <cols>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</cols>
      </table>
      <simple-id uuid='{D12ED431-05DF-4E96-BE80-58D4B70CB648}' />
    </worksheet>
    <worksheet name='COVID cases vs deaths - rank'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Trebuchet MS'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' name='federated.052anc510sq6h11a53u5z0o0tqcv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.052anc510sq6h11a53u5z0o0tqcv'>
            <column caption='Rank of cases' datatype='integer' name='[Calculation_1848446208049020928]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([cases]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank of deaths' datatype='integer' name='[Calculation_1848446208049139713]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM(deaths))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[countriesAndTerritories]' role='dimension' type='nominal' />
            <column datatype='date' name='[dateRep]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[countriesAndTerritories]' derivation='None' name='[none:countriesAndTerritories:nk]' pivot='key' type='nominal' />
            <column-instance column='[dateRep]' derivation='None' name='[none:dateRep:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1848446208049020928]' derivation='User' name='[usr:Calculation_1848446208049020928:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.052anc510sq6h11a53u5z0o0tqcv].[countriesAndTerritories]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1848446208049139713]' derivation='User' name='[usr:Calculation_1848446208049139713:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.052anc510sq6h11a53u5z0o0tqcv].[countriesAndTerritories]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:countriesAndTerritories:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;United_States_of_America&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' filter-group='7' included-values='in-range'>
            <min>#2019-12-31#</min>
            <max>#2020-04-02#</max>
          </filter>
          <slices>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</column>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.052anc510sq6h11a53u5z0o0tqcv].[usr:Calculation_1848446208049020928:qk:2]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' value='Date' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.052anc510sq6h11a53u5z0o0tqcv].[usr:Calculation_1848446208049020928:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[usr:Calculation_1848446208049020928:qk:2]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='28' />
                <format attr='font-family' value='Trebuchet MS' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.052anc510sq6h11a53u5z0o0tqcv].[usr:Calculation_1848446208049139713:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[usr:Calculation_1848446208049139713:qk:2]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='28' />
                <format attr='font-family' value='Trebuchet MS' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.052anc510sq6h11a53u5z0o0tqcv].[usr:Calculation_1848446208049020928:qk:2] + [federated.052anc510sq6h11a53u5z0o0tqcv].[usr:Calculation_1848446208049139713:qk:2])</rows>
        <cols>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</cols>
      </table>
      <simple-id uuid='{2D2C5F5C-6C99-4289-87FD-B8A53D4B46B0}' />
    </worksheet>
    <worksheet name='COVID deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Trebuchet MS'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' name='federated.052anc510sq6h11a53u5z0o0tqcv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.052anc510sq6h11a53u5z0o0tqcv'>
            <column datatype='string' name='[countriesAndTerritories]' role='dimension' type='nominal' />
            <column datatype='date' name='[dateRep]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[countriesAndTerritories]' derivation='None' name='[none:countriesAndTerritories:nk]' pivot='key' type='nominal' />
            <column-instance column='[dateRep]' derivation='None' name='[none:dateRep:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[pcto:sum:deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' filter-group='5'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:countriesAndTerritories:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#2019-12-31#</min>
            <max>#2020-04-02#</max>
          </filter>
          <slices>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</column>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f0eae8' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' value='Date' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <wedge-size column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:deaths:qk]' />
              <size column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:deaths:qk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:deaths:qk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:deaths:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Trebuchet MS' fontsize='8'>&lt;[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontname='Trebuchet MS' fontsize='8'>&lt;[federated.052anc510sq6h11a53u5z0o0tqcv].[pcto:sum:deaths:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontname='Trebuchet MS' fontsize='8'>&lt;[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:deaths:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{46F76FCC-DDAD-439A-A70D-14C7953992D7}' />
    </worksheet>
    <worksheet name='COVID deaths packed bubble'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Trebuchet MS'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' name='federated.052anc510sq6h11a53u5z0o0tqcv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.052anc510sq6h11a53u5z0o0tqcv'>
            <column datatype='string' name='[countriesAndTerritories]' role='dimension' type='nominal' />
            <column datatype='date' name='[dateRep]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[countriesAndTerritories]' derivation='None' name='[none:countriesAndTerritories:nk]' pivot='key' type='nominal' />
            <column-instance column='[dateRep]' derivation='None' name='[none:dateRep:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:countriesAndTerritories:nk]' />
                  <groupfilter function='member' level='[none:countriesAndTerritories:nk]' member='&quot;Italy&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' filter-group='3' included-values='in-range'>
            <min>#2019-12-31#</min>
            <max>#2020-04-02#</max>
          </filter>
          <slices>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</column>
            <column>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#b4b4b4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <size column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:deaths:qk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:deaths:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='8'>&lt;</run>
                <run fontsize='8'>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</run>
                <run fontsize='8'>&gt;</run>
                <run fontsize='8'>Æ&#10;</run>
                <run fontsize='8'>&lt;[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:deaths:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Trebuchet MS' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CFE479AB-C5D6-4D49-AD38-E1DA61BC2A37}' />
    </worksheet>
    <worksheet name='Pop density_map'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' name='federated.052anc510sq6h11a53u5z0o0tqcv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.052anc510sq6h11a53u5z0o0tqcv'>
            <column datatype='string' name='[countriesAndTerritories]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[countryterritoryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countriesAndTerritories]' derivation='None' name='[none:countriesAndTerritories:nk]' pivot='key' type='nominal' />
            <column-instance column='[countryterritoryCode]' derivation='None' name='[none:countryterritoryCode:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[popData2018]' role='measure' type='quantitative' />
            <column-instance column='[popData2018]' derivation='Sum' name='[sum:popData2018:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.052anc510sq6h11a53u5z0o0tqcv].[Longitude (generated)]' field-type='quantitative' max='29191221.8305455' min='-14239012.543553611' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.052anc510sq6h11a53u5z0o0tqcv].[Latitude (generated)]' field-type='quantitative' max='14826632.182691263' min='-10928097.138685495' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:popData2018:qk]' value='n#,##0,,M' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:popData2018:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:popData2018:qk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:popData2018:qk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countryterritoryCode:nk]' />
              <text column='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' />
              <geometry column='[federated.052anc510sq6h11a53u5z0o0tqcv].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&#10;&lt;[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countryterritoryCode:nk]&gt;&#10;</run>
                <run fontsize='7'>&lt;[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:popData2018:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.052anc510sq6h11a53u5z0o0tqcv].[Latitude (generated)]</rows>
        <cols>[federated.052anc510sq6h11a53u5z0o0tqcv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{790EEA54-1D77-4F38-84FB-E3C92174B230}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='COVID Top deaths vs cases'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' name='federated.052anc510sq6h11a53u5z0o0tqcv' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.052anc510sq6h11a53u5z0o0tqcv'>
        <column datatype='date' name='[dateRep]' role='dimension' type='ordinal' />
        <column-instance column='[dateRep]' derivation='None' name='[none:dateRep:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='COVID cases vs deaths' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='COVID cases vs deaths - rank' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='9125' id='8' name='COVID cases vs deaths' param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7000' id='10' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='10125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='16' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9125' id='8' name='COVID cases vs deaths' param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='COVID cases vs deaths' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='10' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='10125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='COVID cases vs deaths - rank' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1F3E752F-EE91-426D-A2F0-9FD069C9C67A}' />
    </dashboard>
    <dashboard name='COVID affected countries' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='COVID affected countries as packed bubbles' captured-sheet='COVID countries' id='1' />
                  <story-point caption='COVID affected countries as pie charts' captured-sheet='COVID pie charts' id='2' />
                  <story-point caption='COVID affected countries as bars and ranks' captured-sheet='COVID Top deaths vs cases' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{BD406805-955A-46B9-BB13-F3D076AC6CB0}' />
    </dashboard>
    <dashboard name='COVID countries'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' name='federated.052anc510sq6h11a53u5z0o0tqcv' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.052anc510sq6h11a53u5z0o0tqcv'>
        <column datatype='date' name='[dateRep]' role='dimension' type='ordinal' />
        <column-instance column='[dateRep]' derivation='None' name='[none:dateRep:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='12' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='10' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='49000' id='3' name='COVID cases packed bubble' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49000' id='8' name='COVID deaths packed bubble' w='98400' x='800' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9125' id='13' name='COVID cases packed bubble' param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' type='filter' values='database' w='16800' x='80800' y='11625' />
        <zone h='7000' id='16' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='81100' y='24375'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='21' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9125' id='13' name='COVID cases packed bubble' param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' type='filter' values='database' w='16800' x='80800' y='11625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='COVID cases packed bubble' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='16' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='81100' y='24375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='8' is-fixed='true' name='COVID deaths packed bubble' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8391ABB2-A243-458D-BF15-4532DD33C6D4}' />
    </dashboard>
    <dashboard name='COVID pie charts'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='COVID-19-geographic-disbtributi (COVID-19-geographic-disbtribution-worldwide-2020-03-29)' name='federated.052anc510sq6h11a53u5z0o0tqcv' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.052anc510sq6h11a53u5z0o0tqcv'>
        <column datatype='date' name='[dateRep]' role='dimension' type='ordinal' />
        <column-instance column='[dateRep]' derivation='None' name='[none:dateRep:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='14' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='10' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='49000' id='3' name='COVID cases' w='98400' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49000' id='8' name='COVID deaths' w='98400' x='800' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6000' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='80600' y='11375' />
        <zone h='9125' id='15' name='COVID cases' param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' type='filter' values='database' w='16800' x='80500' y='18875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='20' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9125' id='15' name='COVID cases' param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' type='filter' values='database' w='16800' x='80500' y='18875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='COVID cases' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6000' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='80600' y='11375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='8' is-fixed='true' name='COVID deaths' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{098E43FA-A60C-4DEE-B33D-50EF2182D269}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Pop density_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.052anc510sq6h11a53u5z0o0tqcv].[sum:popData2018:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</field>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countryterritoryCode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FBD8161-CA54-48BA-871D-E6951B62466F}' />
    </window>
    <window class='worksheet' name='COVID deaths packed bubble'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</field>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB361575-6B32-41F1-93F5-560277CB380A}' />
    </window>
    <window class='worksheet' name='COVID cases packed bubble'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F559FE32-9358-4FCF-B3CF-8394B40D3C64}' />
    </window>
    <window class='dashboard' name='COVID countries'>
      <viewpoints>
        <viewpoint name='COVID cases packed bubble'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='COVID deaths packed bubble'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1815B436-8C02-4440-9F63-4626C750FCF4}' />
    </window>
    <window class='worksheet' name='COVID deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</field>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DAE6513-4D15-4C4B-B7F9-A1CACB68A172}' />
    </window>
    <window class='worksheet' name='COVID cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{882A4C6C-C02A-4D4D-B24D-FF0EFFDBF5E6}' />
    </window>
    <window class='dashboard' name='COVID pie charts'>
      <viewpoints>
        <viewpoint name='COVID cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='COVID deaths'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FB8A566D-D50F-44F2-854E-DF2326CFEF85}' />
    </window>
    <window class='worksheet' name='COVID cases vs deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='7' param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</field>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE81BFA0-FF45-4AEC-8024-849645E4E71A}' />
    </window>
    <window class='worksheet' name='COVID cases vs deaths - rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' size='21' type='parameter' />
            <card pane-specification-id='9' param='[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]' size='68' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:countriesAndTerritories:nk]</field>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[none:dateRep:qk]</field>
            <field>[federated.052anc510sq6h11a53u5z0o0tqcv].[usr:Calculation_1848446208049020928:qk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B39484B8-1F8C-4D8D-A7D7-72500F7C425E}' />
    </window>
    <window class='dashboard' maximized='true' name='COVID Top deaths vs cases'>
      <viewpoints>
        <viewpoint name='COVID cases vs deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='COVID cases vs deaths - rank'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2391CE55-52C9-43CA-B941-0029BF06ADB5}' />
    </window>
    <window class='dashboard' name='COVID affected countries'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{62A3E33C-CF2D-4793-822C-57631F13B639}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COVID Top deaths vs cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eXRbd3qm+WAldoAACZAEd5GiJErULtuyvMmyy1VTVa521XSqOpVTnZ6u
      TE2WmemZTnoyyaRzcnpOT7qTXk6n3D3dNenUTNJJu1IVV1xKLMuSbcnaJUrmvm8AARAAAWJf
      CFzMH7RIUSQkgiIBirzPX8S9F/e+APHd+1u+3/dKcrlcDhGRHYq01AJEREqJGAAiOxr5gy/O
      nj1bKh0iIiVBfAKI7GhWBEBkLsDklIP5rAA5AbfTgT8YBgS8Xh8AuUwKXyDE7OwsmXSC8fFx
      ZnyBYmsHIJ2IEY4l1nTs7OzsJqsRedpYFgDOkS4+unaXRCxEJJ7m0wvv4/SH6L11ic4BB9cv
      f0wqm8Mx3M3kTIgb128Q9Tno7BvDMdLNhSt3iv4BQp4JBic8jzgiw0cfXQLgxo3rxREl8tSw
      rA/Q2TXEG1/7BkopQBpvWOCtM/sht5ufvPsBB3fX0T/mwjvq4oU3juId6wHAbK3i2PF2fvzj
      HwNHARjvv8eIO4jJbKXVXk53/wjBWJrnO5r45PYAe9v3I4l78QQTxKJx9rba6R520b7/AC0N
      NeQycd47d4Uvv/Yc5z65RSbiw2hr5NTzJ5ACsbkZLl6+hVxIUtFylOuXL5LOyUkKMo7tbaBn
      cIxwIsupo62Mjo5Q39xKNhnlypVPCUbn2VujZcAVZf+BAzTUVBb3WxfZMix7AuRyIJE8+Fr4
      /A+BHNC85wATvTdJy/Wo5RIeRffQJGdOv8LxQ+2Qy5HJCvg9HlQmC1qlFIlURld3LzKpBJlk
      HomqHKVUQCqTASCRa7Bq4ebtu7QfPk5NTRW5XA7h81mLga5Ojr74BY517IVshL5BBxKJhGQ0
      SkbIks0KeGbcmCps1NTUsquhGplKx/PPn0KajWOx1SAV0shk8kd8CpHtzrIAOLivibN/e4He
      7ruMTAWwGqTc6Ozm4rlz7GrvQKLQopMkad67f9lJAl4P1y9/iMXeurjNalTR1T/M4PAo/d1d
      WOsbUckgkZqnuW0P3fc6sVmtVFTZ2bXnAOUaOW17WrnX2bl4jkOHOxh2Bqmv0GIsryQ5O4Uv
      kgagstJKb9c9HC4PyLRUWgzU1tdz8FAHA1091DQ2opTkyAhSUvEwHu/y9n9GkLCntY7Ozu4N
      /1JFnh4kD84Enz17lrmAj0gii72mCikC7ulplFojlnIDAPFIhDKdHplkoVNp1KlxuGbQGc1U
      mo1LZ87lcLucyNUGLAYVDpcXS7kBiayMgG8Gs7UajUqOy+lAa6xAr5bjdHmwVttRK5fuyslk
      EpVKxazPQwYltkrz4j7fjAsBGWqdAa1SgtM1Q6WthjJZFqfbj9mkQ67Sk4nPEU2DUgYWi4XZ
      2VkMOg0uj5dqex1KuTgYtlNZEQAiIjsJ8dYnsqNZ1gOsrq4ulQ4RkZKwLADMZnO+4woik8kg
      l4ujKyJbn2W/0rKysg078UaeS0RksxBv008R09PTjI6O0tzczNTUFAaDgf3793Pv3j2sVis+
      n4/5+Xl0Oh1arRapVIrdbi+17C2N2Al+irBYLGQyGSQSCQ0NDej1enK5HJFIhOHhYdrb25mb
      myMSidDd3c2tW7cIhUKllr2lyRsAufk4Ho+bG3fEiaKtQiqVorW1FZ/Px+TkJA0NDUgkEioq
      KhAEgatXr/LCCy9QW1uLXq/HarUyNjZWatlbmrwBkAp5+JsLN5DKhGLqEXkEgiAwMzNDR0cH
      7e3tAPj9fqRSKceOHUOr1dLT00NFRQVHjhzBZrNx4MCBEqve2iybCHO73Ys75qM+LlztQqM3
      8eJzRws6aSqVEjvBIk8FeZ8At29cIRxLIZE+OulNpLhEIhHi8Tgul4v+/v7F7cFgkPn5ea5e
      vcr09DRXr15lcHCwhEqfDvKOAh05/jztZZWkI75i6hF5DN3d3VgsFqqrq+nv72fXrl2k02lu
      3rxJXV0diUQCm81GdXU1t27dKrXcLU/eABjquc1oWI2t0kxFxVK+fCoaIpDIohBSJAUpGjkI
      chUKKRiNxnynE9kgdu/ezezsLOl0mnQ6vTjsaTKZ2LNnD7t27eLq1asYDAax/b8G8gZA2/7D
      fHb2MkrZg1tzuP1BkMC8RAaSHLGMhHRilkRaQKpQYdJrkEqlyGSyfKcWeQJGR0cRBAFBEDAa
      jUxNTVFVVUU4HGZqaorp6Wk6OjqIx+Po9fpSy93y5O8ER2a4O+gmkkzy6qlnF7YlQow5/YQj
      ESwmI0hyVFVamPYGKZODRKqkrrZmW3SC+/r66OvrY8+ePQSDQY4fP04ul+P8+fNUVlYSCCys
      gdZoNJSVlaFSqThy5EiJVYsUSt4ngEylIxSJsL+tZXGbQm2krdVIMpkkl0mRzMrQaFXU2TUk
      onPoTBVFEV0MjEYj9fX1TE9Po1armZycRKvVcuzYscVtbrcbq9XK9PQ02WwWjUbDnj17nui6
      Q+MuIrHkBn2KR6PXqtjdVFOUa21V8gbAfCyIc9rFfDpNdc3yLFGVSgWoUN9/XQaqsu21rra7
      uxuTyURLSwtTU1NotVo0Gg23b9/GbrejUCgwGAwcPHiQ8vJyJiYmNqTJEYklmQvHNuATiKyF
      vE2gG5cvEIzNozJW8PJzxwo66XZoApWKOz1jRQsAk0HL0f3NRbnWViXvPMDBvQ1UNh1ELc0W
      U4+ISFHJ2wRSVbRgDvajaNhVTD1bimQyyaeffkpFRQWHDh3i3r17zM7OUldXh9frpa2tjcHB
      QQwGAx0dHaWWK7IO8j4BPr34PoOjkwyN7Nxkqng8zvz8PBMTEwDMz89TU1NDMpkkk8ksLvxJ
      JovTaRXZePIGwKlXzmAtN6LVqPMdsu0xmUwYjUZqamoIBAIkEgmGhoYwGAwIgoDL5SKTyRCP
      x0stVWSd5G0CxWdGGA8JNFo3vw8wPDyMw+HgpZde4o/+6I/4lV/5FRKJBBcuXMBkMmEwGMhm
      s0Sj0aKOuUulUk6ePEkul8PtdvPiiy8u7mtsbNz064tsPvnnAdRGnj1oxemc2nQR93PcP/jg
      A8rKypiZmVlMq5BKpbS3t9PT04NOp9vQMfeRsclNPf5B1CoV9hrbut8vsjnkzwXqvbeYC7TZ
      9Pf343A4eOuttxgZGcFiseDz+dDr9Wg0Grq7u3E6nXzpS1/a0DH37//gzzZA/drY1VTPr373
      20W7XrFwu91Eo1Hsdjt9fX0cO7YwZH7nzh0qKiqYm5vb0ss08wZA+9FT+K7cJidsvoXY3r17
      2bt37+LfAHV1ddTV1S0ec/+LbWlpoaWlZeVJREqCTqdjfHyc6upq0umFspWzs7OMjo6i0+lo
      b2/n448/JpfLMTY2RjqdRqfTbXriZDKZZGRkhP37F8p43rlzB4vFgtFoXLy5arXa/J3g+USI
      jKSMeCy8bHvAN0M4liARDREMRYlHQ0QTaXEkZIdy/0ms0+kWtykUChobG/H5fCVbpnn79m10
      Oh3Dw8Ok02l6e3uxWCycP3+ebDaL0+mks7Mz/xNgLiXn9KnjSJfV98mgKNMz45lG+nk2qEKu
      IJfxEk1mad3dhkK2/gU0Z8+eZe/evTQ3NzM6Oro45j40NITFYmFmZgabzbYY1SKl5/6inPtD
      xR6PB7VaTUVFBeXl5YyNjdHT00NHRwcGgwGPx0NDQ8Om66qvr2dwcJCqqioUCgXf/va3uXjx
      IgaDAZ/Ph9Vqxe/35w+AG59exGyrR6Ex8syR+3nlMmZ901TbG5n1ekCSQ6tS4vYn0GtVeNwu
      Ghvq15UOnc1mUavVzM3NIZPJ2L17N1euXMFms3Hnzh0qKyuJx+MkEomnMtVaIpGsSbdEUrwV
      eGvV9CgevBnt2rU0aXq/yFpFxVKCpEqlwmAwPNH11kpZWRk6nY59+/YRCAQYHBykpaWFVCpF
      Mplk9+7dWCyW/AFw6pU3VlaKyyRJZiREwmE0ZXKSghRzhQVZmZZ42I/OXEk2m0UQBLLZwoZP
      0+k0CoWCubk5fD4fPp9vcfWT0WhkcHAQo9FIIpEo+NxbgVwutybdxbRtXqumtZBKpQiFQlit
      VsLhMLOzs1RWVjIwMMCRI0fo6+ujvr6+aAFgs9mw2RZG3SwWCydPnlxxTGVlZf4AcA7dIbX3
      ZSq0EhT3m0FyNXvaVnZAjQYdRoNuxfZCUCqVvPDCC4tj7m1tbbS1tQELw6QiW5s7d+4gCAJW
      q5V79+6hVCoxGAxUVlZy9+5dmpub6ezs5OWXXy611GXkDQC1WsfIQDd+g54De5/8BzgWTK/9
      YHVFYcc/hEouoUavWPf7RQojEAjg9XqJRqOcOnUKlUqFWq1GoVDgdDoxmUx0dnZy6tSpouq6
      efMmXq+XL3/5y0xMTNDT08O+ffu4du0a3/zmNzl37lz+AGhoamLkej+pRGJDAuA/3Smei2RT
      uZJfOrr58xciC5jNZr72ta/hcDgW6xLNzs4yNzeHIAgoFArkcjlut7uoM+hmsxm/3w8s9EVS
      qRQWi4WmpibC4TCRSOQRM8GKMpRyKSr1zs0FEimMB+dumpsX1hnU19cDC4v5i0kul8Pr9aLR
      aBgfHyeTyWA2m5mZmcHhcFBbW4vZbH5UKkQ5hw+0kZWJAbDTMf3054t2rYxlL9FTv/3E55FI
      JIsd31gshlarXexL3g/G+vr6/AEwODDA8GAPWYWRN7/02hMLEnl6UbpullrCCr5/pdActdVN
      0vOXR09HEGQ69u9vL/BCIiKbz9sFB8Dq5E2FmIvEsFRWYjMXZ9xWRKQU5H0CPPP8y498o3/G
      LVaGE3nqWbdDTDyVWbUynF4jVoMQeXpYt0PM/TWxlnIDglyDwaBjLrB6R0NEZKuy7idAtdW8
      rSvDiewM1h0Aap2xoMpwrzY/Wa5QIZSr1pbh+IVXX9hkJUuYTWvrH1Vbyyk3ajdZzQKqMuWa
      josd+7VNVrJEVr+21WK//Hz9hlwvb2W4J0GsDCfytLAlbFJHR0cZHR3Fbrfj8/lobGyksbGR
      CxcucODAARwOB+FwmIqKCjKZDGq1+okXxIuIwBaxSa2oqCAQCJDJZEgmk4vLK3fv3k0qlUIQ
      BMxmM4FAgLGxMQYGBhgeHi6xapHtwJYIAI/Hg9FoxOFwoNVqiUaj+P1+PvvsM/r7+4nFYkxO
      TvLCCy/Q2NiIWq0mGo2WWrbINiBvHyA3H2dmNsTktJ9njhZmtSP2AUSeFkSfYJEdTd4AUBpt
      1NVYsFdu7tj+wMAAV69eJZfLLdp8wsISu8nJhUpsXV1dfPDBB0xPT3Pp0iUikQiXL1/eVF0i
      O4P8dYE+d4i51zOwqQJaW1tJJpMIgkA6nUYQhMXCSvc7wx0dHej1eqqqqrDZbMzMzDyVC+NF
      th55h0GVWjOvv/QcUzOhZds32ib11q1bHDt2DJlMtlg678HCSm1tbXg8Hmw2GyMjI6hUKhoa
      GvB6vYV/WhGRh8gbAKmQh3OXujjQ3vTA1o23STWZTAwODqLT6bDZbMhkMuLxODabjfLycgYG
      BqitrcVut+NwOHA4HJSVlSGTyZicnFxceicish7yjgIJqQjvf3gZtdHMKzvQJlVkZ5D3CZCO
      +JCqjcQTSzU/n8Qm9Tc/9Gys8kcgVoUQWSt5A0Cq1HDw8FHSoZU/3J1gkyqyM8g7CiRTqunt
      vIZzRszxF9m+PMIp3siZV18pphaRNeD1erFarfT29tLc3Iz687pNoVAIo9GI0+lEo9GQzWYp
      KysrWi3Op5W8AfDpxfeJpkGpM3P61IliatoS5HI5/H4/2WyWsbExWlpasFqtjIyMUFFRgVKp
      ZGxsjJqamqL92EKhEFeuXOHIkSNoNBquXbvG6dOnGRsbY2JigsbGRjo7O2loaCCTyRAIBDh9
      +vRikIisJG8T6OTzzyNkBaTFq9a9pXA6nXR1dVFVVUV9fT3JZJJ4PM7c3Bx37tzhww8/JJPJ
      MDo6ysjICJcvXyaRSGyqJqPRiM1mo6amBofDQSy24Cjf3d29WE07GAyi1Wrx+XyYzWZ6eno2
      VdPTzmNHgWI71AK0rq4Oh8MBwNTU1KJbZDqdJhgMotfryWQyaDQaRkdHqayspKenh+PHj2+a
      Jr/fTzgcxu12I5PJOHHiBH6/nzfffHPRPOR+2T+DwUAgEFgsES6yOnkDYD6b4+DRE0RmdqZR
      9tjYGOFwmFAoRENDA7lcjkAgsPjDy2QyeL1e9u3bh9FoLMqPraKigjfeeANYqrl5n/vXvl+b
      s7a2ltra2k3Vs1UZHh4mFApx7NgxfvSjH/HWW28hk8kYGhoiFosRDoeRyWSUlZXlDwCXy8NU
      yE1d3casvXzaaG5uXpxlvp/iYbFYsFgsy46Bnf1j24q0trZy9epVBgYG0Ol05HI5EokE0WiU
      ZDJJKBQiHA5jt9vz9wGadu0ik57H+XkzQKS0eL1efvKTnwAgCAI//OEPSaVSvP/++7z//vsA
      nD9/nlu3bjExMcE777zD1NQU586do6urq5TSi05/fz+9vb3kcjlcLhdOpxO/308ymWRycpL6
      +nqqq6s5derUIybC5ModWx79vnP96dOnGRoaYnJyErvdTiAQYH5+nldeeWXxmLa2Nvr7+zGZ
      TASDQTo6OjalKWS1WqmqqgIWzMPve3M9+ESqr6+np6eHw4cP43a7icfj+Hw+BEGgo6NjwzXB
      UnPjviHes88+i1qt5uLFi9jtdlKpFHNzc+j1enQ6HRKJZNPXc69muwsLzcOHrZLyBsBHn1ym
      qrYZuWp5iY6Abwa5xoAilyaZlVEmyyLI1MglwuczxE8/953rYWHo8bXXXuPWrVuLmagPHmOx
      WIhGo6TT6cUO8WYEwPT0NA6HY9F/d2JigrKyMubn54GFUatkMoleryeZTGKz2Whubqa+vh6P
      Z/PSUO43NwKBAC+99BL9/f1YLBb279/P9PQ0LS0t9Pb2Eo1GmZiYQC6Xo9PptkyTMW8AWKvs
      1NfXI5E+mNW5uTapW4X7zvXDw8PU1tZy/vx5mpqa6O7uxmQyMT4+TjKZxOFwUFlZidlsxmaz
      MTk5uWkdYbvdzs/93M8Ri8XQaDR8/etfX7Y/m80u+1Hd9+3VaDSbmjF7v7lx6NAhLl68SHt7
      O3K5nJs3b1JZWcm7775LR0cHzzzzDH19fYyPj2/6eu50Os21a9dobm5mZmYGpVJJR0cHExMT
      TE5Osm/fPnp7ezl69GihdYFyTIyOUPmATapOVYbbH0KvVSKRKmhsWBgzf/hp8Bvnpjfjs65K
      c7mS75148tykaDS6zAAaFibI4vE4Wu3mFK9yeYMkU+v3RysEVZmSGmt5Ua5VTDweD11dXZhM
      Jg4ePMiVK1c4ffo00WiUK1eukMlkOH36NFeuXMn/BPjZf3mbsoZnqTI/YJK3iTapG0kO1nT9
      9y8Ub1ml2WTkxNHHt8Odbj9z4VgRFIHJoMVm2X6pEoFAgF27djEyMsKlS5d48cUXyWazpNPp
      xZn7Tz/9FJVKlT8Azvw3b3HpZh8Z4wN3wE20SS0F54oYALua6tcUAE8b2WyWjz/+mD179hAO
      hxc7uRMTEzidTg4cOMDdu3fZt28fw8PD2O32TTfK2717N5999hnPPvssvb299PX1IZVKsVqt
      pFIp9uzZQzab5eDBg492iKls2k/KvzMnwkTWRjQaJR6Pk81muXXr1uJok8PhoKqqihs3bqBU
      Kvnss89oaGhgZGRk0wNAIpFw6NAhAJ555pll+6xWK8Di/rwBoKpsQefvwdokmlSL5EcqlfLK
      K69w48YN7Hb7Yge3tbWVS5cuodFoOHLkCD09PYRCIVKp1IZct/1ffLoh53lEZTgJ2UyGQHBu
      Qy4ksj3R6XQMDQ1x8uRJ9u3bR3NzMz09PUilUo4ePcoXv/hFJiYmeO6555DL5Zw5c6bUkpeR
      9wkw0HOPKZcHXXku3yEiIkgkEo4cOQKwmHZdU1MDLDU3jh07BsDhw4dLoPDR5A2AZCKOkJNi
      NG6/UQKRwrD+++I1g9M1J5h788+Kdr28TSCFQklVXSP7du8qmhgRkWKT9wnQfuhYMXWIiJSE
      dRtkOCfHSQpStEoJgkyNQppbbPOJiDwtrDsABKkcpRTSqSThaBCJVIZUoaKiXOwziDw9rNsg
      Yz4RIxJL0NDURLnFikIqkEoXJ4dFRGSjWPcTYNfupZzuWns12Ks3RJCISDFZlg06MTGxaRca
      Cxb+dJBIJDwgb82o5BJq9Ipl26RSKYKw3OxjZGyyaJrUahX26uWp0qtpisQSZDKFm5JIJFCo
      LLlcil67fMHTapoUrhuF60FCjsK/p5zSQKZi77Jtq2m6NbW8avnaRK38kjbFJnU1waVG1LQ2
      dpqmTTHJEwSBZDJJJpXkwZtZPE+JlQfzQ2KROdze9ZdjTMYiq6YTr/cLTMYiTLu9q9zLBOLx
      5CrvWDtP8k+9bx7yuG2Fsh5NMy4nnif4nz2O9X5PQnYeh3OaxP3fVzZNPJVZdozsd3/3d3/3
      /ouNXKnjnJ5GmowSy0nwuN1IZWWkE2G6unvQ6/W4XC5UajWOqSmiiRTln884j4yMUlVlZaC3
      G+RlRII+4ul5+ru60On1eNwupDI5Tuc0Kq0ehXwhhl2OCWJpgdGhAcwVtjW7oD+O4ZERqqqq
      FgLT5UGt1eBwTCEvU5NJzzPjchBPZ9HriuPufh/n9DSOibHF7wi5Ep97CmQaUsl4UZen+meD
      1Nqr8bqdJOczzHhcKJQKpianyUqkhPwzZJDi87gQpErUG/S/eRxjY2PY7TW4XdMEZgOoNWpS
      8/M4pxZ0hQPeTbRJzeUQcpBNRLHUNhGPBonGk1RVVRP0zyCR5BgfmaKuqZky+dIyypZdjQwP
      jaItN2OrMJGIJ/F6/VRWVyFEgsQECfF4BIlEQnpx1CnFfLaMVCyCxVqNybBxP8bWll2MDw8R
      jKdpaqhgctyDgISZmWlCcxEUKjW57PyGXa8Q9A98R75IFomsjHDQTST65E+CQggHfcz4A8SS
      85TJIEcOr8uJ2mRjPhEkIyjRCmF8MYFEEQutSaQyFAolSmUZzVUGZoNh5iKRz3VFSMSTm+cU
      r1EpCKVy2Mv1CFKQ6fVkswLxaAitqRJ/YI76xkqmxifQqsuYmJhAIleiJIPRXE6lQY3HP4dc
      LsekUaOW55CqtKhSflQqNYlEilQ8wsSsF6Vah0KWQqoyoFJICQX8BMNRNHoTWtVCZ3i9SxgD
      s37URjPybIrxqTR1dRV4fAEMBgMKqQKZDHIUfx20yWhEIREWvyO1SoqizMScbwZbbXEnJOub
      WjCZTESUCuTSHBKpHH25EaVagaTMQiQcIC4rx6zyFbVOqa2inLHxCUxmMyhk6PUCAiCVKpCU
      Gcik08s7wbOzYin0fDwtrjfBuSDlpu23znezWBYAIiI7jc3rA4iIPAUs6wOcPXu2VDpEREqC
      +AQQ2dGsCIDIXIDJKQfzWQFyAm6nA38wDAh4vQvlAnOZFL5AiNnZWTLpBOPj48z4AsXWDkA6
      ESMcW5sxxWZ08oOzs4ie9U8vywLAOdLFR9fukoiFiMTTfHrhfZz+EL23LtE54OD65Y9JZXM4
      hruZnAlx4/oNoj4HnX1jOEa6uXDlTtE/QMgzweDEo2pfZvjoo0sA3LhxfcOvf+/6DTamzoFI
      KVjWB+jsGuKNr30DpRQgjTcs8NaZ/ZDbzU/e/YCDu+voH3PhHXXxwhtH8Y4t2O+YrVUcO97O
      j3/8Y+AoAOP99xhxBzGZrbTay+nuHyEYS/N8RxOf3B5gb/t+JHEvnmCCWDTO3lY73cMu2vcf
      oKWhhlwmznvnrvDl157j3Ce3yER8GG2NnHr+BFIgNjfDxcu3kAtJKlqOcv3yRdI5OUlBxrG9
      DfQMjhFOZDl1tJXR0RHqm1vJJqNcufIpweg8e2u0DLii7D9wgIaa1csonn33HUwVNexqbWVo
      cIjZ2SBf/OoZ3vuLs1TadJRVLNTc9DlHGByd5fWXnln1PCJbl2VPgFxuIWFu6fXnORg5gRzQ
      vOcAE703Scv1qOWPnvzpHprkzOlXOH6oHXI5MlkBv8eDymRBq5Qikcro6u5FJpUgk8wjUZWj
      lApIZQvFeCVyDVYt3Lx9l/bDx6mpqSL3+ewywEBXJ0df/ALHOvZCNkLfoAOJREIyGiUjZMlm
      BTwzbkwVNmpqatnVUI1MpeP5508hzcax2GqQCmlksqV7wL2bVxgYcy59CIWGk6dOUa4rQ8hm
      mI/5mY3MozVV8PKZlwhOu4A0Z89e4MjRrVfxQOTxLAuAg/uaOPu3F+jtvsvIVACrQcqNzm4u
      njvHrvYOJAotOkmS5r37l50k4PVw/fKHWOxL1QOsRhVd/cMMDo/S392Ftb4RlQwSqXma2/bQ
      fa8Tm9VKRZWdXXsOUK6R07anlXudnYvnOHS4g2FnkPoKLcbySpKzU/giC+kPlZVWervu4XB5
      QKal0mKgtr6eg4c6GOjqoaaxEaUkR0aQkoqHVyRrZQQJe1rr6OzsXrreiefZ0/xA2W6JBAng
      HO1HbrCi06jIZJYnU4Gcb/78N7n+6eV1JP+KlJplE2Fnz55lLuAjkshir6lCioB7ehql1ojl
      86WO8UiEMp0emWShU2nUqXG4ZtAZzVSajUtnzuVwu5zI1QYsBhUOlxdLuQGJrIyAbwaztRqN
      So7L6UBrrECvluN0ebBW21Erl+7K9ytNz/o8ZFBiqzQv7vPNuBCQodYZ0ColOF0zVNpqKJNl
      cbr9mE065Co9mfjcguWrbMFQYnZ2FoNOg8vjpdpeh1K++mDY7OzsggFFTsDpcGAyW8gCmdQ8
      FouB2dkwUgQMFguRgB+t0bItysPvJFYEgIjITkKcBxDZ0SwbBaquFtf1iuwslgWA2WzOd9yq
      ZDIZ5PJNy6gWEdl0lv1615Lu6/NMk5Wpqfq8M/o0pAiLiOSjwD5AmqkpD5lMaVZAiYhsNAUG
      gBRDeTmZZPGWtYmIbCYFNuDlVFtNZKRis0dke1BwD1ZnLKyjLCKyldnwIRy5v4r68WcAAAy+
      SURBVA9JKrLRp30k83YxCU1kfawaAMlkkrm5OWxVVQXXO9Bd+T9Rum5ugLS14/0fhot6PZHt
      w6qd4M7r57n+ySVm1rbORETkqWXVJ4DV1kRzew2VxSvhIiJSElZ9Agx3XcblcOIXnwAi25xV
      A8Bat5uegVEqildeUkSkJKwaAKl0HINsHt8qJSYnh+8xPi2aZ4tsD1btA1TVtGJv1mJ5aL4r
      5HUSiKaRZEJI68xIpVJkny9hvI9EUvwFIQ9rENne/MKf3tuwc60aAH23LxBXNXDGWof5gWaQ
      0VrLYbMJz9xCzXZBEMhmlxcFKUWlxYc1iGxvbjnW4Q6Th1WbQAdPvo5BpUCtWGWnXEdVhW7D
      BIiIlJJVA8A1M0tLjZGYmPQpss1ZtQnUWFtFII44CiSy7VkRACMjw0ilEloaG1bUCdoMzo9l
      ueZYasMftEl5c4+4ykykOKxoApXr1ExMTNLd3U2qCH3LD8eynB8TO7EipWHFrdZSVYuspwv/
      jIe0AMVoBZ2sk/E7LxXHOG2rMTI2yfd/8GdFveav/MOfp6W5oajX3Kqs2glWqdXIlWoURRpe
      vzie5bX/L8F330vhimwtj1qR7YWuTE65Zulmu2oAHHv2RV556SSyIgzp1xkk/EKHnH98UkG/
      X+AXfyrWWhbZHKQS+P7fO86xhqVFXav2Nu9c+4hQSsELL7206aJ+9cTSZINSKuHN/5oknc2h
      FEsMimwwv/76Pr7SUcufXh9f3LYiAAZ7OgknsiCRki1ya6RMDhIogemoyHbnywfsvNxmo8+9
      fBZ5RROobf8RhHQc2SqNowU3mDGmPb4NE/bJRJZ+v0B8Psf/fSfDM3apWGD2EchkMr759a/w
      f/zGr/HL//DbqNXiZM3jaLMZ+K0v7ec7//kayfnlI46rNoFk0tWrpciVavQaFYJcgVQq3ZBk
      uG6vwO/9ZZq5JJyqk/KDrxZeceJpToaT5vmu85HL5UimUvzkvXM8c+wQv/SL3+Lfvv2fC77m
      476zeDLFtKe4vtFmkx6LSb+h5zSqFfw/33mWX/uLW3gjK9ObVw2AXCqEN8oK76tE0MOYO8Cu
      Rt2GJcP96gnFsn7Aeniak+EEobB2piAIvPuzDwBwuWf47d/4tXVd83HfWTyeZNzhLfjcT4pJ
      r9nQ8/1vb7Szr9rIB//zq4vb/usvvcBz/9c5BmfCqwdAc1s7iWE3D/+W1eVVnCiv2lCBW52x
      sTH+4A/+gLfffrvUUpZRbbPypS+8wiefbrzv2XoYHuzjP739r3BPO7Daqvl73/kljp44WWpZ
      /OZf3eM3/2opffrDf/Qqv/9+L4MzYWCVPsBw7z1GXTEqzOod3RnN5XJ88MEHfOUrX2FmZqbU
      clZw+GA7z504zMDQaKmlAJBMJnjz69/ih+/8LV9965v8x+//IfPzWz+bckUAeGf96HIBnGE5
      yqe3af3EBAIB/vzP/5zvfve7pZayKn/zwUf8+m//c379f/rvUSpLP4t+4OBRnn/xVaRSKY3N
      raTTqYKbd8Xgf/3RHW5PLln6rgiA9v0Hqd97nJMHW9jJgzFms5k//uM/3tKeCcG5EDqtBpNx
      YzuOT8r1q5+wv+PIlqwc/plzjmA8vfh6RR/AZK7EVFRJW5NSLO1cC+UmI29+6TVu3e2ipamB
      Ga+f2UCw1LIWcU87uHDuPX779/6w1FLWxI7JO/5wLMqFsWjB7xvpCzEWTPObHz7KjHt1vnvU
      THP5xjZP0vPzpNJp3vrKF5gLhfln//LfkS32jGUeBCHLD/79v+bV179MfWNzqeWsiR0TANuF
      WCzOn//lX5daxqqc/9u/JjQX5Gv/7bdLLWXNFBYAQobx8XEsVfUYtFuvfSdSOmbcLn70X/6E
      tn0HOPvTdwBobdvHgYNHS6zs0RQUAEGPm8qGFgIuJwZt3WZp2lKY69toeaHUKrY+Hs80X3rz
      G6WWUTAFBYBCISMeixU9Sa6UmBvaMDe0lVrGlufg4eMcPHy81DIKpqBEFF1lDSTC1NXXbpYe
      EZGiUnAn2FpV88j9yba3mK/ZeoYVzeVKaC5uPaNy1eNnEs3lRr7wanHbWOZy42OPUZUpaaqz
      FkHNEuUG7ZqO++Xn6zfsmpLcA9lrbrf7sW940CY1lUptyckOEZG1ItqkiuxoRJtUkR2NaJMq
      sqMRbVJFdjSrBoDf72d0aIgjz51EsTVzwkR2MDenNq48+qoBcPOTn6EtbyKYBKtolCeyxfjF
      v+jesHOt2gmurmthXphHu4MXxIjsDFYEwFzARyydY+/evTt6RZjIzmBFAKSSCSQSCf7pccLp
      1d4iIrJ9WBEAkpyAw+FgNiagLf1SUxGRTWVFAFjtjTTXmImnUqy2plm0SRXZTqw6CqSUCUSD
      EZICPFimaC02qZpLv4fM37eZmlcQeesvino9ke3DqgGQEaQce+Y51A/tXYtNqszfh9J1c9ME
      r8bTXBlOpLSsOgw665nkxu3bJDOr7BRtUkW2EauWR5eaGrFkcyjFWWCRbc6q5dG1Oi27rEaS
      xTd9FxEpKqv2AVob65mNZbGISZ8i24A//MYRWm1L1fP+zYVBLg4s1HnK6xO8q6E4PsHFIpjI
      EkwWt7NcrZOjVhS45EJkwzlYV857XU5uTyzUBB32Rhb3rQiAcp2az/oGmZsLs6/jCKptUjrr
      jjuxrspwT8JmVIYTWR99rhBXRlc6G624PVmqapEJqUWf4GISn8/x0YQ4pCmy8fy7bx3H/6++
      wc9+9WWs+iVbqS3hEwwg5HJ872cp3h8RA0BkY/mTq2O88C8+YM/vvIe2TM4/fn3v4r5VGzjH
      nn0RaS7DfBFHgf7N9Qw/6svyPz4jtplFNpY/vbFki/rTe05eabMtvl7113bn2kd8+Ml1itUC
      Ojea4Z3eDP/g8NbqcER803gG7pCMiLlP2wVtmZxIaqmqSUE+wZl0Ase0m5xESXPjxlSHGwkI
      /C/n0vzNz6t4+9ZqU8+lwT/Ww4V//Y/QW2sJTg3z/Hf/KY0nXiu1LJF18M/ePMjNiVnkUgl/
      /7lmfuvdJc+wFQHQtv8Ik5N/hVy9snqYXKlCRg5jhWVDbFKj6RxffyfJ322XMxHM4QgtRNx0
      RMCuX3tTaC02qdICx3MtTft461/+FIVKQ+/f/L989lf/seAAWIsdqdPl4cd/fa6g8z4pX//q
      F6it2TlmhyPeCL/wbBO5XI5/+l4X79yZWtxXkE9wIjhDOA3azPyG2KRedWSp0Ei4NJnl0mSW
      0eDCe2+7BOxtaw+AtSTDCQXat0okUhQqzf0XaMorC3o/rM2ONBaLMzo+9chjHiYejxINh9Dq
      DGh1hdsjxWLxTU0gdLvd2Gy2gj2QN4s/uTbGn1wbW3XfqgGg16rwxrMrJsHU5VXsL984Ya/v
      kvP6riUJ/+TDhSVob7Ztnb7Apbf/d9x9N3njt35QaikAjA33cffGZUyWCkLBAM+cOoO9vqnU
      shYZGhriO9/5Dh9//PFTUTZz1RBdWA8QIrmDyqDno+3M38XSuJd7P/kPBZuAbwa26jpe/+rP
      8eoXv86LZ77MQG9nqSUt8s477/Ctb31rTTVmtworAsA3PU68rIbnjrQV3T/p988o+f0zW2vm
      1Lb7ECf/u99h4uZ54oHiO6c/jFanR29YsDEUBAG5XFFiRUsEAgF++MMfllpGQawIgGlfkF2G
      LMNhGYat/wTbNNLxCPOJGAARnxOJRIpsC/jxPsjIQDfNrftKLWOR733vexiNjy+9vpVYcZNX
      kuHu2ELSUDS9D93W+p8XjcmbH9L5l9/HUN1AYGKAjje/i0q/gR2gJ8TtnMTrmea5l76wKeef
      z2SJxhIFvy8UiZPL5ZgLx1AqC6siripTolYV9we3IgD2HTrB1rmnlI7Wl/8O1fufIep3Y6hq
      QGOqKLWkRdLpFLevfcTBYyc3zc84GkvQ2Tv++AMfwuf1kMvB3b4JFIrCmmdNdVaa62yPP3AD
      2TrDLVsQXUUNuopHO+KUgq7bV9EbTDTu2lNqKU89BQVANhVlZNJNucWK1fJ0tfW2Cx6Xg9Gh
      XgzGcj469y4AB48+h6Vy50xsbSSF2aR6g9S3tuJ3OEAMgJKg0ep45Y2/s2yb7vNRoa2A0WTm
      n/zOP1/T7PxWoKAA0Bs1jA4No9MZNkuPyGMwGMsxGLdOZ/xhlEole/YdKLWMNVNQAJQZLOwz
      WDZLi4hI0VnmEjkxMfHEJ5T7+5Gkw4ULQUKO9c20PmzLKpVKER6q67jeNcESiWTdM8DVejlq
      +fKploe1JRJJpt0z6zr/erXZq22o1apl2x7WlclkicSS69QF6/nKVCoF6rLlw6Cr/S9vrdcg
      YxVhBdukPk7cVmCr6oKtq22n6vr/AY3CiOXyc0OmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='COVID affected countries' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='COVID cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='COVID cases packed bubble' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='COVID cases vs deaths' width='192'>
      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
      2hz+XS/k+dgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='COVID cases vs deaths - rank' width='192'>
      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
      B1CZmTc4e6JeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='COVID countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='COVID deaths' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAUbElEQVR4nO3deWwc53nH8e/M7H3wvimJkiiJFClZVmLHkm35aA4ntYM0yIW6SYqgCVIE
      adIiRYsiPYCmZ3okKYoCaYAkjpwgiOPGdmzHR2zJtyTaOi3JlCiRoniTy93l3sfM2z9k2ZZN
      0UtpyV3uPJ+/DO7OzKv1/GaeeeeddzSllEIIm3IAzIWmkRwIO3IAF3Z+CYCwIb3UDRCilCQA
      wtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLW
      JADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQA
      wtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWHKVugBBXQynFyWOHcLjcxPUqrumoZWgi
      woaOVQUtLwEQK1o+PMjZOS+3bXDygwceZ6SjlVRojL3P+Oi+5r0MHDnAJ3//cwRc2rzLSwkk
      VjTDV0t05CT9g6N0d28mncpjZhJs2LSe/Qf2EZoNE0lkLru8ppRS0ZkpeU9wmUhEIjirgsTC
      Uerr60hGJpmKKZqbGvC6L5ywzUyMoVCazrZGknMhzk7M0dHaQDAYBCAWi73x3/NJRqY5PRFn
      W/e6d/3+1NgQjuo26vyuIv9Ly4OUQGVm6MghGm7YweO/vBdX/WqaaoNEwiG05o0EEpO4PB50
      TOLeVjrbGunb9yKBVd3ct/un/M7v3sHh186QGh+mZ/t7GBkbI6cstl57A53tjYwP9tN3fIB8
      Ls6a3lsBMNNhfnjvA9xy7UZGwml0K09jax1ToThVukUin6K6PozT5abamWUyobHr+m0l/pXe
      pPJpnn1uH73X7aDObfHkMy/w3vfdSCQ0hYssylVNU1MDXtf8u7qUQGXG43cxPjqCrkyaWpsY
      C83gdAfw6Tn2HzjC5OgoWVzoxoWadvOWbZw8dIT61hb6+49z9PhJahqbmRkb4PTwGE11tRw8
      cgyA8akpAh6NvNNPY0M1AAdf2k9DlcGzB08S0AwMy2LfoSNMhKKkczqttW5Onx+hribIkaPH
      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
      8s4P4Fri7si6ujo61iz/vD5XSwJgA82N9Xz49huXbP2GYbB1a/mN9CzEymuxWDRN07jjtp1L
      dkG8YcMGAoHgkqx7qUkAbMLhcPD5T92F21XcUigYrGL9+s4VdeH7VhIAG2lvaeIzH7ujaDur
      pmls3Vq+Iz0LIQGwmRuv28auG7YXZV1r166lrm7lTMUyHwmAzWiaxqc/+kF6Nq2/qvX4fX42
      beoqUqtKRwJgQ06nky/e/XFWt7Vc0fKaptG7pfxHehZCAmBTfp+Xr/zhp2huXPzrhtrb21fE
      SM9CSABsrK62mq9/8W6aFjGlotvtZvPm0s/pWSwSAJurr63mT790N20tjQV9v6enF7e79HN6
      FosEQFBfW8M3vvw5NnUuPJThwkjP5R1dutQkAAKAgN/HV7/wGW66ftu8nzvKbE7PYpEAiDe4
      XS4++4k7ufvjH3nH22a6u7vx+XwlalnxaRp0rmqUJ8LEOymlGBoZZ/d9DzM6MUVdXT07duxY
      kYPd5uNxOblm4yqa6oISAHF56UyWJ57ZR0Y58Xgr4+jf3lRDz/o2PK+PiZIAiHcViSU5fnaM
      2Wii1E25YgGvm571bReO+m+5jpEAiIIopRidinBqeJJEKlPq5hTM7XTQubqJtW31875GVgIg
      FsU0LUamwpwZmS7rIHhcDta2NdDRWo9rgdfHSgDEFTFNi6nwHENjIULReNnsPlUBDx0t9bQ3
      1eJ0XH6YtpnLcPDIqzI5rrgyhqHT2lBDS301sUSasZkIY9PRkpwVPC4nLQ1VtDfVUhv0FXav
      QjdITA9JAMTV0TSNqoCXqoCXro4WovEUU7NzTIVjRGIp1BKcGjSgKuClsTZIU22Q2io/ur64
      G3RmNkkikZYSSCydvGkRjSeJxFLMJVLEkxlSmSzZbJ5C9za304HH7STgdVMV8FId8FIT9C1Y
      3iyGBEAsG6UUSilMS5HN5cnmTfJ5E8tSKBSapqFrGg5Dx+V04HI60PULfyv2EAylFKcGBqQE
      EstHe31H1nVwOgxKOYWWMvPs79svY4GEPekOJ00NdVICCXuTM4CwNQmAsDUJgLA1CYCwNQmA
      sDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1
      CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmA
      sDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwtf8HIIny5cAX
      8kAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='COVID deaths packed bubble' width='192'>
      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
      m7rm/wNBX01ow3uECQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='COVID pie charts' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pop density_map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOS9Z3Bk2XXn+XsmvfcAMpFwBVOF8r7YvpvsbrYoGnEoidLIzmg3VrMbmo2N
      2E+Kjf2yH3ZjN2InZrSSRqIoDUWRTYqk2GSz2Wxftst7eA8kTDqkt8/sh6xCFaqAKqBMd5H6
      R1QU8uV7956875x7j7vnCvl8XjcYDGwG8cUZsnMnifR/EYvFunJ9YWGBzPQvaA9BtaZTMB9B
      KS1AdQFP+6u43B4unfkFAfM8HrtAra6zXNCYSAfZF00iiiCJAh8PVDjSb0YQVvebLWhk5AP0
      bd1OfGmBxNw5OvzLcMd9TxIWsh5czYew2x2YzZbH1o+u66iqSrlcBkAURTRNW/lekiSMRiOy
      LD82Gn4ZUKtWSV79Dl6bigDIBoMBk8m04QZGLr9DafE4LV6NhYkzbN37CgDZbIa5y/+AzaQg
      1QSsQLq8DKpCxDLB5OD3ELd9lZ7tT3Hpw7/C0Vrh1PU6giDja7Ih1ua4Nlljf6+JQ50g10G4
      TQJGYwpppYtnX9nB3MwEcvp1ulw6ovoEcz+g1g2Ew62PvR9d16nX66iqiq7rWK1WarUa1WoV
      k8mExWIhn89jsVgQRfGx0/OkIp1YwKZMYag2+GbTIxGI7MLc+lUWpc8TjO5Zue50umjpe40l
      dS+X4v0kcgaU/ATO4Damk2aa7UmGh4dwudyEu59jKmmjQCcW/3Z0JE4P6cynRcpVHVmE26d1
      XYdSVcYfjCDLBirFFG47iOKTzfyariNb29F1HV3XH2tfgiBgMBiwWCxYLBZ0XadaraLrOoIg
      rPyr1WqPnZYnGcvzA1Q1M2O5Fqbq29n0elhcHofkRyynFZrCnau+6+w9QLRrD3Mz4xSWdAzV
      YUwWO4mCFVEyEm2PIggCPdufQuk7xH5JQtd1JidGaO48wNSl17GY6pwZqnOwzwAI1BWd0bgT
      o81CILwVQRBobu1h+upxwt4ykrh6pXiSUCjpjM4uYPfMEo5EqFarmM3mx9bfTSEoFApUq9WV
      a0ajceW7UqmEJElsVu39VYGi1LH0/3tag2HgAVYAr2GWFlcJ0eAgGGoCoFqtcvXCRyszS3Lm
      NAb3Nhxdf4DP52fbod+mqAXJTL3FpZM/QNd1EvElKpUK8/NzGOLfpjT/ARXNwXxKQ5YECuVG
      W5IImrmL/S/9KS03VAm3J0BL/x9zZaGXak2nWNaYWJCoK0/WzJbKCTRZxzj6879gYmKcqcnx
      T6Rfo9GIzWZDkiSAlf9v4qad8MuKh1lRd37mS/iDYXRdZ352YvMrwHzWST1jIxTpXblmMpnI
      xodZmO+gJdzG/ud/f9UzwWCI5aUO6sUYZlsTgiCQGH+LpGRh+5Hf4cRFOwF7jGTGQWZZ5NcP
      i7x/ocazu4wUyjqBUGTVLF+r1ZiZmcLm7mC+5mZmboFwayeZwgcE3E/OatDRLFCpKSj2XyMY
      DOJwOD+xviuVCpqmrbLvZFnGbrf/0qtAiqJQLBZwuz2rrt/8XRvRCGYmBrHGvrV5Aejc/jkU
      5cW7ltBI1yHGBj6mJdy25nN1wUnvvkMYjcbGZ1MvAa+NTDpBiRAu2zi/tjePIEC5quOwGXn7
      XJ2e7c+zt2ffqrYMBgOtre1MDbxFuVamJxAjaJlBlp48485kEGiWP+LCsSs8+/k//UTUNUmS
      VvoxGAyr/v5lZ35o/I61mP/yxbO0tXfh8fpWXZ8YG6ajq2fF+M9lMygT38PqeAAVSBSlFZ1y
      Ynx0xdXW3r2LI8//xsp9t3sk3vnFW4jxf2Hw5DeYHrsIwO59n0ET7SQH/o7D0QnsFhGLScBs
      FDDKAoe3Cnz+gIH43BUGLn24ioabem25sECrO0aLX0KWnpyZ/yaKZY3ZpImy6sduKq5ySz5O
      SJKEw+FAkqS73J43jeEnBaVigYHj/8iVo9956PEJt3asYn6AYrHI9PQ0qqquXJsZPkOTo4Yg
      CJtfAW6iVqsyP/BDnM4/wh8IAjBw+TgdPXupVMocf++HGEw2fP5mmppbyE4p7Ghf4NrQTyhm
      l1heTnPt+gARbw1Ll5FyTcdqFplcUCiUVHpajQTcIv3hHGXx7oFxOF1sPfTvOHPsx5iJsb/3
      yZrZNE3ng8tmnn7pNwkEwxw/9v5duvjjhCAImEymJ4rZ70S9Xmfw5Hfpc0yQKgpks6/g8Xgf
      qC1BEAgEAnddj8eXMFvtjAwPs3XbNlRVRRAFhBvssmkBqNdryLKBkSsf0d1UIB2fxB8IIggC
      5UKSD976NqFQE5KoETYPY1XGsLj+HUL4RQZn3iVXMtAjnCSZU2huasHma2OmUqFeK5NfiOFv
      O0xAqJORbdSSP6dgPsyOrc+sSYvX6yPot9Ht1ShXdepKI1hWVW34HWVc9k9vthNFgcNbqwwO
      DuHzN6Mq9U+UFkEQHqvH6UHQcH4sUqvVQK2SHn2HNtMcAHl5C613qDWPoj+320Mxt0xTU4jZ
      mSliF1+nw11At+gPtgLMXP8ZvrZn6Nz2NBOnL5IrzGKy2HC6/FgdAUrD55iuqXhNSUpVnWhI
      oIRGR+9+RrDzVG8f8xf+M9OLywQ62njmhdfWnBlnZqbQA3+MkkuvG6gTBIGte7/I2KUaI5NJ
      Wtv7CUY7ifhDlEtFhkc+ImAaxvfJ2Z6r4HXADsMZrlwQcTh993/gVxi6rnPy+IcI8WO0e8qY
      DLDFKZAqiCzJe4nu/dyGJ4hqtUpmeZlgKLTuM6lUkqPv/AhjZYqyamF8rI2IPIZNrOG8LSC/
      aQEIuWqcPfUj9j39NTTJjbN6kbFzFwg2d9G197cZGBxGqEzS1SZRV0QqNUgmE5jNNnK5ZSwW
      K4p9H3t7PqKiXCSdPoTfH7hBdIKlydMIeoWqaqZ1y0Fq1Xu77KxWKzuO/B69+2ortgmA0+kk
      GPotLl04RSX5HmH/J6N/345qXcdqEbBW5tl+5A8/8f6fFCiKwvWP3yBSPY8/fMNVnhdYUDto
      2fVFIr7gplbHbCazEue4E6qqsrgQY2H0JC3SGP19IgvLBfyOAYy3cfvN/oRKpaJvJhWiOvM9
      5mcGyNddlOsGtjXF0TSIVbdjD+3GaLKzFBthZHSSHs8osizy4YALv9vAzmgJ/9Y/IDFzmqj5
      MvFlhZFFGw67marYQot5iLBXAwSqdZ3RuI9dz/17rFbbhum7E7quc/3Cm7RZzz9wGw+KeFph
      Oa8jSAba9/4H7HbHptJOfhWgaSqXzx0nXP45drOAqunMVloJbPsS/mDLA6mFM5MjeP3N2B2O
      VdfHhi6hxM/iUCZwWRpq6Fper9v73PQKcGXGRD5hYntkGVGEugKqBpgjxK7/kI69v8+u/c+j
      CwZ8tQkml0Re+Ozn0RZ+TKuvxvT0KWqVPJgh6JEJeqroegVFzSBLt4gzGwW81iL1Wg0eQgAE
      QcBg9qFp+ieeOhHwSCxmJHTTDi4c/Xta+16hb+uOT5SGTxOqqnLsg7eIKMexuQVqis5YpY8d
      T//2Q00ExXKN5tvsm0Ihz8i1M3hLx2m2VqDhad+Qy3fTAtDiVVHFCos5G/bw85RrAjabjd72
      Pkqd21eCPVv79zEfCxAOijS3hPloyEnQmUBXKphcW5haHCUakrkwXGNfrwlZahCbyKiYjQIO
      q8hITMPXX98siXehe+shrpxZpMNxhU8yD0wQBNDKOJ1Woh1fwmh+cEH+ZYQgCOQTE7R0imia
      zrWYSO8Lrz0w89/Ma9q6bfvKtdmZGd5++2ccCEwSaNr8y920AIjUyehR2vd9Bad7tcvq9kin
      yWymo6uHcrlMMhGna8crpGsFAl4/TneAUayM50bAbWZofoh8xUC2JNMW9qCUBOyqSv/+vfj9
      wU3/qLtoFkU6t73E0tVrNHk/WVugvdnAwPRZRFMT29u7P9G+P20kk3GcLKHrcGIUwru/uqar
      cqOYm50h0hpd0RLy+TwnThyjmBynqXt9F7MgCKuixKIoous6mqZtXgC8XV8mZDBsKKVW13WW
      lhZpaQljNBpZWoyRzyxgc3jYvmMPmroTSZbRNBVBEO/SBx+l2zCVSpIpqDR5Pzk1aC4hkS8J
      GOyd9Pb2fWL9PgnQdZ2rF0+zrUklmdfxdzxN/44993/wHmiNtq20vbS4gMfr47nnX+DkBwXq
      6gR3bgxZj39uD7htWgDWWr7qtRqZTBqfP7giGCODFxgaHKCQHGT34S/QFOkhfvW/0hrQiZ03
      UKjb8HR+mc7OTrKZNPHYCG5/K6HmKIV8HkmWqddrOBzORxK9DAZDTF33AssP1c5GUCxrmI0C
      AnVUKcCeg69hMBgfe79PEmbGr9GsnMXuFDg3KbHvC8890gnNarUxPT2F02GjJeBEXGPyXMsG
      uPPaQ28PmpmeIjl7Hr94mcnUa3RtPcxyOsnEpR9xuBuIikykYwiChM2kIksSYa/CeFKgra2N
      2PQQtbnv4TerxOMvMj12Gb9wgfG4lWZnCWQ7muShZ//XsVit96VnPdhsNtp6nqJc/imWx8iL
      5arO6REnvRGFoKdMejbzK5F/s1mkUkkseh1dF7G27Mdxh8dmLSiKQmxmnNb27pWJdGDgOq2t
      0ZXnp8YHyU8fRVDyyFoR1VhhpwPunP03OuabthpuNqxpGrquMzP8EZn0IoUy6IIRXdeRJBkc
      2yiWIV20UtVtVKoKPlejO0XVMfkPoqoqmYkfEXCqxArNXLk6iJw/Rcit0+zMky6IdPjzdLqn
      Gb3y84dmJG+wk0z+oZq4J2p1nbc/LhF2pxmOmUkIL7H/s/8rbrf78XX6BKJYLFCLXyToEjkz
      Y2Pbvpc2NPuPjQ6Rvf4tEvElANKpFC0tLRQKBQBKpRKZhSE6rVN0OFO0uiu4H3xOBB5AAGau
      /5SRa0f56BffZ2z4Ek6rxsGOOJMJM21dO4jNzTLy8V8iShYsRqhUSkwOnUGppihXdQZjZsaW
      rES79jA7M0XEU0FRdSpiFLc0g8XUGKjWgEAVL1MpJ+em/SwtxtD1hzNgJUlmMvH4mLFa1/G5
      DQwtRcgvzzEzNb6S/fqvCVMDx+nxJAAwBvZuKA1cqdeZGzpJQWolszBAvVbj+pWzaEqV5uZm
      qtUKx9/+J2zeNlTt0a2omxaAJmeZ5en3MWpLlKZ/SL5iQtd1IoHGhutQUxMmq4ddvvPYLAJb
      WkQ+01dDNIWo1EUsvn52vfi/YLVaqaQHEUUdUQBJrONx22gNNrSybFGjpDrJyvtotqcJu7Jc
      P/fmQ2UMZjLL1CqPzwawmQUObTPgslTZv92LLjxZuTifFDSljkmG5bKRPQef3tAzC/Mz7PZN
      sts3jS//LrHZCbZu38Pw1TMsxGY488H36T/wCiaLjXTx0dkSD+QV7w1r7IykaPFBrlBD1cBp
      LpDNLGMwGInu/E0W69u5qbEomkCoqYUr4wquYP9KXrpWz99wSwnMz02Ryipkiw0GT+c0iulR
      Lp56g/G5EgFHFbJnmZoYeuAfK6DT7FHvf+MDIFfUGkE3GQ50Z8gqLTRHuh5LX08y5mfHEHKD
      CIJAXZdWVQ25FwqZ+IptpqhgtlgpFZaRqLEwP0slPQGjf0UpNYGh778nkX80AZ0HakWWBAQB
      LCYRmTyVmo7XrrE4fQkAl8tL3/4vs1AMcXmsRrLkoZRPYDZJaNotBrw9By7ireF2GrEYGyRF
      AhKv7hN4+YAVr1PEYhIxSBqnT7zLwMB1yqXS5umWJVoCMmcGVYanFbRHuJSmshrXJ2pU642V
      oNk6gdH0ryvwBZCZu0irfRlN1zGJyobek67rUJxd+bysuCgVcjD5bWqqiCP1Jm0BGZdZw18+
      Sjp2ncsLdnLlh39/Dy1GhzoS2C0iogBKOb5y3WQyIfufwRl5hj3P/3dMDZ/mcB9U5t6gUik3
      jCKDl9l4I5W5K5jHbDSsCIXFJGIyCrT4JHZ0NlyvmYJKOj7JR299k5GP/7KRVrsJ2B0u0spW
      RNchJhfFu+oO3Q5VUTh3cYZUocbA9VmujKWoFKuUa2urYO3NEhaTyMmrKomsgNsucPnsW9Tr
      Dx/Jfhy4ua/2UVesaOp+hu+eNTOd0PDb6izO3nvF1nWdqaHTeOqXb9FliVJJDeGxKFjNBmru
      Q2i1AqBjMUCbdgyj0cij2AAo/fmf//n/vpliSWr2Olo1sfL5dus+U/cRar2V6+L1hQiFu6nX
      axiWf47DKlKvldEde7DZbKiinWRqmemFEq1+Fb+jds98HY9DojUoE3CJHL+cRVFq+AORDRua
      RqMJX3Mf6VQSu6eTuekRWvxrRxBPnZmgf0croqYxu1jAWq+TylWpG4y4rXeP1+icxkJKxWB2
      4Wn7AiZlEIuhjjWw/4lKgFNVlYnxMd7++ZsMD15lITZBMj5PMBR5JBt2LFY7JouDmalROgM6
      hcwSRv8OjOuMQT6fZ+LU3xG9PUJfiaP4nkVJD+IXp8kl54jlbYTddURBoFiB2VKINkfmoXcC
      blqG4gU7xcraGXZBeYR3f/IN6vU6V65cXqk+YDKZWcw0mMZtF1kYP4mu6/j9AQx6il3t1TXb
      VDWdmfgtlckgCwTcMh6nRNgvMjNyktFT/4XZ6Y1XW1iYn0bKvoNdH0Rw7KZSXceoFiRyyRSn
      zi8xP5fgwlwet3FtBskWNIamNRRFx+Fw4g2EmUnaGJxWqNXWTtv9NFCv1/n2t/6Wn/3kuzRZ
      J6nmp6nnBpgaeo+Tb/+/zM48mqoV23fupf+Z3+dSYS9jyz6Grl+kVFx7S6jdbscYXB0hthp1
      ZFkkRwiLUaArJPCZjuJKsMthETgQnKSwBs9sFpsOhJVqIomkQk/k7royNrPOweg0147+Z6zN
      L2IyNTxEhXyeyI18fEkUmJu8RLDtEE3NzXTs+2M+ePdNjMoMEU+FgEtjfL6OySgRdEvMpa2U
      VBN9zbmVfnxOCasJDvYZOTmQYaHwHl5/CJvNfl/6c8kJlks2PHIec20GfZ05YEvUyfWpDG1R
      H4Y2GyapoaqNXZvFvq8dv+PW7zcbBbZ3ClyflAhLJWID30G372P/s234vJ/uRhhd1zl18jjz
      sTkq1SqJpRkO9kFNEXh+l0ahrJF3CGjUqBTTaFrHQ1eOEwSBto5u2jq6V9Sr07/4O3yhKFt2
      fXaV1iCKIkZptWBkSgIGswOR5Ko2b4fLKj4S1W3TAtDuzVGX1i6qpGk6EwsqEwmFNlsKURQZ
      vHKCclWnVulG10fwOsDu6SCeiBMMhXC53Hz+C18ll8tx/uh3GU/qZAtV2jr7GZ+cJdzSwmK+
      imH+Cl0tt17M4X4zsYSCrqnItRnmY9N09/Tfl/56eYldnUUGZp2MzYdwO5awmO5+4aFmH6Hm
      u5m3e8vdyXkmo0AkINHsA4spj6brTKXH8fn3IXyKZQh1XSedTvPx8bcpVlT2dMOBIzJuh4jZ
      JDA4WcHjEKlUVYZmKnTo01y5cJ6nX/oioaaWTfWladqagnOTcdt3vMz1E99lMTaFLxDG17qD
      YFMEgGRsjI7WW+nqkqiznFqkxVBjvcKvj8pueWgbAODSlA2LoYrZKHB1QsUR2MaW3n3IBgMD
      Z36Ah+scu1qnuftzZJaGibgzvPvRBUy2EBazCZvdgSzL1OJH2deRI5OrYPb0sWP3ISo1FZ8/
      wEKigtNUxGxszBaiIGAxiyykFMZidfw+D+Foz33pN9kiXLg8THPbHqxWO2HHPAZ57UEu5ooU
      6pBKFXDajcwu5nE51tZlJUnAIDfyT0YX/XTv/V0cDteGx/VRo1arMT01yQ9f/wusxiodTdDi
      F2ltMmA0CKBDPF2nK2JGFGA5VWSnbxGPMcvlkSXq9TqiZMRqtd03ilvI5xg69jfoBg8O19or
      Xiabxx/uwV94j5A8Q3nhDJOLJRy+VgqKg/zyHB5Lw6lRqoKh+WmqSxfJViTMsob0mPZyPPD0
      pOs66TyM5rZjCe5jKLOdkUSQoN8GusL42DAfvfsj/LYCrQGRHZ0m8vk8NVXEZRN4dpeFwUvv
      s3j9W1QrFQwGmamUExA4vFVErs8SDocp5tNs3bYDo9XDpRk7pcqt5dIoC3gcMjXdTmffoQ3R
      7fF6+eyX/iN9O5/HalbvWVm6Xq2RyFUZHZxjbDrF5YnMPdvWNJ3BhSBbD/3RJ1oE605UKmX+
      29//De+88xZGWeW3P+fEbRfI5OuMTFdYSivE03VctoZNMxWr8fxWE36nRKtPoMc+QVv5DWrX
      /hOjlz+472ybjM8jVxfI5xtqai6b4ej7P1/x0i0uxFgcPY5sMJOoNja+u6wCEfUUV9/+v3Da
      jdiiL5AtNfoxSGAxGyk3/yYF83bOpXpZLm5uDFa2PN5HeDe9AsQW04zERFJqL9aWF5gbPYZb
      GEWrF7CFP8eOQ19BNNjo29pPS2sXYzGFiZkEgdY99PUfoJi4hMemoKpQqctEXMssFAKUy2WC
      2jFsFpGhaQVPeD/+pnaWEikikVYsVheJVJHx2SytvjrSDevfZhZYSCmUFQvRtrYN6a+5XJYz
      R/8ZozpH0FVdd5Cy6RyDC2Xamm0Mji0T9ltpDjWSsio1jZlFBYdNJL6sk642U7Y8Rd/u1zYc
      /HlcGBke4uK5o5RLWfwunVJZRVE1elrNxOI13A6JQkmlI9xYzXLZOhH3LQPfZW24tc0GsNYm
      GJsv4Ql1rniJEokEl078mHxyBnewDbc3gDV8CKfLx+iFn3Ht1BtYzCa0epH5i69TXTrPFvss
      hfnzNNlL3JzMZUkg5FCppMeJV9w0G2eRRAGzQWB+cQmUIl3Gy2iaTl6x4bM8+pKOmxYAsz2E
      y99OMpkkmcowOj6Pw6KzrbXO3EKCYqlKV89OSqUi9Xqdiatv0ttSZWzRiFy6QtSdQhAELEbw
      26vEcxYs/t2cP/km/a0VRLFRFzS642sYTSZkWcZkMjN74W8Q1RSFuotCzUyz+4aHySDQ1SJy
      5doIJ84O0xRqwuW6d77P4vwMEwO/ILVcIxoSVoTp7tGRCXgstIRcdLV5CAXtSDcETNdhKN6B
      bmrD2/ll2nufwx+Mfur1969dvUq+kKNS06iX4rQGRfb0WmgJGLBZJHxumVRWZUvrrTQNVYfl
      ZQW39e7JQxTAoc4xPjaC7Ihitdmx2Wzk5q/Qqp9lKqETjHSTTiySufbfCMtjhBx1qoUEttoY
      Lc4KLnMjFmI16qylydiMCobqNLbbbLGc3IdkD+OsD5PJl9GVGj77o8+q3fTbWhp/j8LSZdpt
      FS7OWTAbVHZ3aoiiwK5Ikmr9fUZOnMMql1A02NOhYTcLlGZKNFnmVwwdQRCwmAR89go1QaXV
      W1zx6baFJOZGj9G39zWamppJJRM4TXl0wcf+/pcpF3OUSz9cMV5NBoHP7jNydmiGax9/B5vt
      T/D61ve+zExcwmMXcNhUDPL6K4bdbmbFr3Rb1EXXdeaLW3jx1X+DyfRk5fv09PZSq9U4e/It
      dnfL7N9qA24xjtkoUiyv9ro0+Y1cT60fsJMl6LTHGD379zg++z9jMBjRaxkm5D1Ee/cxPngO
      deYNIm4FAItRYEtoc3R7bLfGt1ABe+sWiulGdNhtFbg4rdDuY1177UGx+WQ4R5G2QBWnVWBf
      Z4lEMk0ie8tXbzIIRL15/E6VJreK264jSdDqmKNWv1uCXTaB7Nh3aQ80/OU39c1SMbtyj8fr
      o2B7lfD23yLa1oXNbqemrB4Ii0nkmZ0W8tkk3/jb/48TJ46vq7uaWGRPr5Eta7hyN4JCWcDV
      fOiJY35oFMA9+v6b9ITrmE0itzM/gCBwVwS8XNW4OfnPpSFf0Vlr6ALmLNlMGk3T0DQBo1jD
      4XRTXLiwwvwPCl3XUTQdRdWZKYdx+1sxLp9EEAQ8Nnhxm/DImR8eMhXCbhHZ32vEeB/CBEFg
      d5eEY40lFqCjSSeegeUCnLhaYSQZov/AV24RKYr0734KX6CZSrlEce7nuGzCik4aSypcHmvo
      8p8/ZGN7OMf45TdIp1Nr9ucIHSGV0x5op5mu6ywU22ltu/f+3nq9TumOPBhd11mYn31sG2R0
      XefEieOYiyeIL8ZQ60USeYXLAwto1QqTcxneOzHGxNz6xrzXpnMpGWWi0Ez1jgmroPsxGEyU
      y2WM3m6aheuM/eJ/I2KcfGja66rAX72rcnbOibX1GWIX/4mQ4/EkLt6Oh1ZY9/UYH6guv67r
      lGuN5VIAqoZurqcszGRn2ffy1zCtU9Zv/MpPiNoTwK0tb7kixNWdvH95lICjQk+riYXhIE7n
      2m5ItTyH37W5sP/ZwRq9UZl4bRs9u1+57/0fvf8zlhPjPP/Kv2U5nSSTmsdqMVBLHefapU4+
      99rXN9X/RqBpGlcvn0HOptAsZnrCZq7PpIhNJJAlMBplNIOM447UEYtJ5IYDBqtJoNe1gBj9
      ElnZSSk5AtkBdKMPR+czLF75HoZqjGrdhMkn0OZ/NLQbZfiDZyQWcmW02Lu0OhKfSCnJhxYA
      SbqHEXkP6DqcH5MIeO20+3JkCxXSiTjBpuhdRmytVkPTVGTZQF1qply9htUsrITWl5brdO/u
      J50OYa++x/uXFLbt273uKSje5r3EZ68RdN9/b0Emr7GYs5Mquah6XmFHW/d9Dd3xsVEmR86y
      JSxw+sTbuMQRAi7w2UTMYRFzfISZyetEO+4fuNsMYrEYXcEMwS1hqOU4P1agllykf3eUU+cX
      ePVQC4OxFo4cPMjM8gJRz9Kth0URTdcRBYGgQ2Fo/Ci7X/kzpK4eVPXzFAo5kuf/moglg2AS
      aOLhVJ614LAIOCwKkORxnnx4s7wKPAIBeFCIosBntqqMLpS4MGEk0OIhYIqhW1cve7quM3Tl
      KMbiOSp1AbelhMm2enCe3Wnm6MhZXnrtd3nzX8bp7g/x1NPPrtt3czjK9cU9LKZOE/RI6ybg
      VWo640tOnnntP7LvRjmNjaAlHOGl1/6AsyfeQK6ewh8VGR3PYewOsqjLtActXB07+UgFoFqt
      sjA/jcmgUsiXyOQr7NoRIeEQaQ97UKoK8ZKbXTt344/uJDFvo1VfXGEEva4hCu7FGVoAACAA
      SURBVLfYwWh1MTw8hKSXiXZspVYpYdRzT3S16Y3g2sg888ki23ojlIrFh0+HfhhIokBvS52W
      SBcGsUpnk06nY4Dxs98gl23s3FIUBblwjmZ3iVIhy5mBEsWqvkp/F0WBbs8k//xPf8ErX/g6
      +w69eM9+BUHAaItwfkhhZGZ970ddAWzbkCRpU/kxsiyTTCwSCUrYxArJZBGj1YpDUkjkaySz
      Ot7wgQ23txEkEnHGr77F3l4TGGw8d6gdt1WmuyuALEBfVwCzu5Mv/PqX6OtowVw9s+p5XVpd
      RUGoLBGJRCjPfsTpn/w/LExcJJb+5d/cnyipHOlvYi6eYzH1KQqArusMzuqMJ1y09LyEWq80
      CMyJqKV5jn/wL+RzWQwGA1XHc4xXnqP94H9g6+Hf4+KkbWVT/k2EAzK7W5c5cfwYdvv9k+Kc
      7iBmk5GetvU9QQtJhUBg84W5DAYDe/Ydpia1UirrtHeF6HZrnBnPk8i70TxfpHfrrk23ux7q
      9Tozg2+yu1skFq8zO5vmzLVFpqfjnL62yPVrs3xwbo7R6RzVcp633/hL+ttWl2tvC5uYTd1a
      fcP2HEMf/hXuvt/A67bQJZxgx+M/7fWeeBSrj1Kp8tNjk7S1eFBU/dNRgcpVjfOjCr37v060
      s5/52XHq2ElkNMrWp7E2tdIy+z6JeAxJNmAyWTA5PbS0hGlubsFgkPnx0e/x5SM66ZzKuQkL
      +zsrOG0Cr7/5AS+/8up9ByvU1ExXZxhRWFj3HlkWH7jGviiKhNv68XiDjE++zdSixK4DXyKV
      k5Fd7Y9MlRgcHODoh7/ArM+ztV3CYoTOZhifTZJ1WPG47URbm5gZ8qGqZr75zb+mxTEMRFa1
      U6pomG7z5hllgW2BZeLD/5XwJxzYvrOmz83Pj8J7tndbGK/DTDxdYnvU/WACcLsRcfvftxN8
      87u1oGrg87hp37IDQRCItHUTaIoyNhQmHN3KcnqJnkN/1CilrijIkk5rW8fK8729WxGUVxie
      +QkdTTIuc42Pp9sJmWc5cmTfhphLEAQswadJpb+Hz3n3/dW6Tqbezs4t2zY6LKsgSRI9PX3o
      ei/KzsMcUhTMZvMjY3xd15mfn+PH//LPfPmpGnaLmXxRwWaWsEk2YukaHU02Pr6eJZ7fwmtf
      /5/44d//n1jVUZpcd3N0yCszUVSxVzRs5oZiIAgCoU8pn+92IbjJY49CAHw3DgcI+RrbVTct
      ADq3zplar0LDvQit1nU+GvLxwqtfX5WwZDab2b77aa6d/QlacRIx8idkM2lMJjP5zCLjQwUC
      LX2MjQywY+ceevoPcyxVZraSZnv7FebzeRytXycWi234t2zp3sbFj4J4HfG7GHN4VmL30199
      KIZNL85y4eoIHZ1RJufieO0Gevt3cv70BZ597jN33a8oCrHYHNFo2z371XWd0dERfvT9v2d/
      j07QY0aWoFgWqKs6gaCbzwXdjYRFpZvnfu1/xGAwsGt7mC7v2t4bQRBQ1UYg89PC4yqNWS1X
      uD6bpzNg5tJ4iv0720gvpZhOVTdvA9wk6nbm38zydGFc5oVXf4dgcO1YeXPHYbYc+GPMZgsT
      199jPjaJqXqdMO+QvvafiAjvMnnub4gvLfLscy+y4/BvUA3+EaI1yvTUGDt37dnUwHmjn2M8
      djdTeO3qQ28McXg81PIFnB43xXwB9BrXL10kmausef/CwjzDw8P3bTeXy/GD17/Jzk6Ng/0N
      5gcwmwRqtdXvIdTav+IONpj9676nTE7BIagr6Sg3i8h+kliLjx7FvmWTxYzNLOJ0Wgi6LAgC
      5AoV8qUHEIB74X6EVus6rVtfJRhc37D0+QNYb+zs6t71Ku2dfSjGdkShsUHebRdp82YZufBj
      qtVG9Dfa1sGuw7/B9h17iS/ObIrmaPsWykIXiqqjabfoVyQ/NtvDVXVIJ+IYrTKzc0tIBhmn
      L0y9WmXrlsia94fDEfr6+u4rwJVKhe6IRpNfJpO/NRE5bRK50i1DtlTVkS3hlc+C7F4zxaFa
      00gsVmkL3NrrsJZq+0njUUXMy4US10aWOHt1npnlCnNLWSRZQpbFB1CBHkIaE3kLbQe33//G
      G3A4nBQKBdLJBbittKQgCOwMz3Pl3f8DKfQq27bvwWy2EAw1YbPfvwbl7RAEgZ2H/w1njv8E
      k8WFTzhNOCAhWTaWWn0vhCKdhCKdAOzd2fjdWzo61r1fFEWi0dXnLCcTCaq1GuHwLUbO5XLk
      CiqaZsBxWxKZquqrovKyJFCvZlaYOZ1apDl4K/9F03SyRY2BkQrPbJEbh8bJMoqi3Gjv8aci
      rIVHnSpisVv56mdv2XLFch2bxc1WHkFZlI1U4L0J1dK3qVx5TdOw2+00td4dMJJEgbBPw2q1
      MT7WUBtqtRrvvv2TTQ+gzWbnhVe+zpFnPs90tpN3z5SQ7Z2bauNxQNd1zpw5zZ0JbYFAgOml
      xn7em0mqqqojCKzKyzIZBDz1X3Dm5Dv86Ec/YLlo5FtvawxNK0ylQwxnj1B1/w6+zle5Oifc
      5Vr+VYXNcsv1vekVQK1VeffjaZ7d08TJywvs67STkx2E3au3Cq4tGJvra25ulmi0jUKhiO66
      e0k2m0Qy9SL9uxoG5djwJdpsA6RTSXz+jR/EcLsx/tLn/y1TU5O0tbVvjtjHgHK5zNPPPHtX
      ZWWr1YogmmhvarxIXdc5O1jDZdPpbl39HkwGyCfm+cIXfheA3FNPs7ycJpOcwWaoomtVaomL
      hJ0qqnrvWkm/itj0ChCLLYOuUlYFyrkcE/M5MhssT1GvZkkmExueZaLRNpLJOG7t0prfK4rO
      8WPvk1lOUS6XWZw6R1tQ4MSHP3rgGqKyLLNlS/e6eUSPG7quo6oq1WqV119/HYfDcZfgGwwG
      uro6Gnt7gbmkhMl3kOnFxv6Gm6pbXdG5MCoR7f4MsixjMBgYGrjK6KUfs8V+lKjlDNMDP6XN
      niDo+tfH/PAAAjAynUOpVBiayRFub2JpNnF3gvk6aHdMMH/xLygUNl6j3GAwkquvfYCyURb4
      yuEqV459g4FT/8Cu8FKDKYoTLC6uH+B6UlGv1/ngvbe5cPp9zr39f3P44K41DVFBEHjhhRdJ
      5mWSWQFX29d46rlfx3ujBMvNCebckMaRV/6M1tZGCLdcLhOfv47BGmAxdWOC0LlvOvsn7Q36
      JLHpLZFOyzxbIzo2g4jXZaE55MbltGC+bRDX8x6IIjgsOolKCK+/+b59FQoFrFYrvvAuZsbO
      4rojUU4QGoae11olYC+svEiHVeDYmTG27jj4S/PyqtUqMzPTXLx0GSF/neW8ht/rRBOM2B13
      b/F0unyYXDsw+w/iC7QwPjqIjgGfeX7lnmzFSXP7Ac6c/AXtnX2USwVKxQJ7Dr7M9csfkskr
      FIslgjYJs/HecYdfVWzaBnCbReoVAY/7xnHbts2V/ZNEmB89RmXpBJJjK01tO/F419bXK5WG
      v1wURbL1IK3MrXx3+0sxGVdHnv0uiZAtRSqVIhTa5N68Twkmk4lCvoDX46W2PMJnd1tQtY/J
      F6PrPuP2eEkm4nznH/8av8fCjn2fIz51kZCnMQ7ZfJnFxQWibY0q1XPjJ9jiPMf4tQI7usyY
      TTAZqyKKOo8z/fhJxqanx6WSxtnzUwzNZIhNzzM+l+H0cIqpsUXm0g2GvdeMIQiwJ5qkzR0n
      LH5IeuCvWVpY23efSiX53uvfaZw6IxtXhcbvh8VUjbm52fve9yShf/t2ZIPMQlpF1XQuzjpp
      7dh6z2fGRq7QE4whqss47A5SlWY0TWcxDXWpmS1beujq2YkgCCzMjTExV6a2fIHxuQqqCpGQ
      kemk+kgPnXhQfBpxh02vAOmyRqZQRTUUKSklVFFnoQyqUCZkvX8W5u0QBIGgs0Z8/FukYrvo
      3P5ZjEbjSqqF2Wxm67bt1KoVnGJDSDa6HL96yMaxwXfo7u7B6fz0avRsFI2jpSQC/gCnUiLJ
      rIbfkic2cYG2noPrPmeQweuRuXxJIPfTb1ArJbEZ/DRt+31eO7LadrJaZPojVnS9ES8Ynq6i
      qjoer5HzszUCFoGO4MZZ4s6cr7UY+F4ntd/+nHZjP7AkcdeBd/dq62GxaQEo50sYTAZAp6qC
      oqp0BC0oJQnzOsVj74egs4qmn2b81BVUDNTEZvY8/XVaWsJkkjESg9+kxbPxMuO6rmMyCHQH
      8/z0+/+F7h0vsHvP/k/Ns7MRLC7O8/Yb/8C2djuHDuyhUB3E59DIzHxEtPvAurOjxd7MsaNl
      8lkVUZPZfegreJuaqVRKSJKfZCKBxWJhbmaMqfEYclWjp8OCQRZQFJ2+NhNmk0i0yci1wcID
      0f6gM7cgNE6Pn0vVWSrpuFwy+azCgXbDmkKwVpLlepmjG8WmBWBvu5O6+9EHiURBIOqrABWm
      0zfcePU6wvKHNAc3XmH59tTZaEimNVhmaOYNzp+tcvgzzz9yuh8FRkcGmZ24iENKIlazWO2d
      FC0vIRY+IBrIM3j2x2w98KU1GS0QDNIeMNPS3Exe8xMbO4tB/gx+v4/rp7+NQxhlJBsksbRE
      1FcntayT9CiUqxoOq3ijckQDZptMoaJjN2+coTebMlGq6uQrGsm8SlkFh9tIc9hC1NI4J3pw
      ssy5sRrtQRmfQySWVllcVjnYvdrWXC9FerOrxKYFQGBzUiaK4uZ98kqGWq2GLMuopigwujHa
      1pk1elplLk2d4PJ5mZ17n/rUc1xWo8ybr/+EoPM8sslEtuIjvPdpfFKJqcsDmI1xMpNnqGx/
      eeWYWF3XmZubY2lhGqU4j0HU6A3OU6kt4HPovHvhu5i3mGj1NpjKY09AWEQQHOi6zrFLRfo7
      zLiDq1fszlYzZ68UONgmr0qKux23qy13pivfD4IgcGy4THeXhS295hsnDa1+ridqJu83cHGo
      hCUBXe0WnKJCtqThuq2qyKNShx7YR3hTT7/z3533iOLdJ8DfD5IIP/nBPxCPL2Ewrx0DWAvr
      5SlJosC+zirpuTNrPPVpo44vtIWpBEScAopWJpEtc+79vyNib8Qy+iISF47/M8vpRrnw8bFh
      zn/0TXLTb9BjvcKONhG7WcDvbIx5q1/H7xJu1ABa/W4EQcBpE/G6pLuqtCWW65gE7nlIycMc
      Wq5qOg6rjCyJGOS1+UKSBNwOmef2OTi0x0HAa6C73cJ0Tlsx1O/Fc5vFY3WS34xqbpbIiF+g
      r9OJx+MlU5JQ1Ecj7bIsPXE+bV2H2YnzBBx1To3WMYgRspk0HWE7rhuJbkaDQI9rhFRiHk3T
      KCQus7w0w8hkEoOscfbCFGeH4ixnGuUiRb3Gcm7tvH/lRrLcfKJOMlNH1W6mG0OuqJLIq1xf
      Uknk7v/e7mRCXW9k1GrrGL6JnEowaCASuv+JPqK4mrnbWs1MJZSHUnkWllXSBY3bHV6PfEvk
      nYbKg2aPRsyDDFywU09fR/Y8nJTPJESKehPxjEKtVnvgbY6PA4JgZf9zz2I07GP3ns+g6hKn
      Pv6Y4ZKNxcUlDvU1DPezYxJPfSHKxyc/4vLp0yyli7y23cn50SWMFie7+7ycOjPLkYOtzCyk
      aDWaCfnuZjRZFsgWVJr9BhRVZ3CyemOC0TEbRV5+upEyfepsFo9dwrDBkjc1RWdwvk5Ja6y4
      TTaBiFdCVaFU0zHKOgZJoJhTqCv6pqu82S0Sc6LIXEoh6JIxbpJzixWNnCBiM0rMJ+o4RJ02
      v/zplUW5HwyyQI/jLIITNhKkabj2btNHhUZh18WcndDOP2Ru9BjNwdxKcdsnBzKfe/Vl4Nbk
      sXf3LibOnMXqbOHMtECwKUzndi/n3/8b9HqCr73k4Ie/WCIUdDI2t8jEeBpV1tDRmU/VmUoo
      eEIaw9MVIsFGUdzb4XfJ+N0yogBNvrs9Y4IA2/vtXBot0t0k47SI66pFuq6TKWqMJlV2bLVh
      NDTGdzFZ49hohYBXRpAElLxGvaKBJKxZIHcjaI+YWUjUuLygYDaJCIrK9pa76Z+IK+TqYBB0
      tgRkTAaBqqLjsMk0+Y00+w0MjpYoVbXHJwDrGU9r3bfed/fSRe9seyrfiT10iMnJMaqlDO1d
      fcgGE61bOkAQyC5eYbEcpiOZxO3xYLFYNveDHgN0tcq7H53iucN7OH5hEK9BZT5XZX5ikGef
      +iJzyyrdPSGaWyKMXH6P3lABi8HEx1eLZHM1fnZyjt/4XJRCahpN02hrsfKzkxO8/NIWIl4T
      c/EaE7EaNotINGREECBbVLGaxfseOOG0SfT02MjkVSbna7iM0OqV75q5Z1Iq8Qp4vIYV5gcI
      +QyEbgjXLY/Nxt/pWjCbRDoiZjoiN86nyCpcnSvjMou0+mWyRY3xZY2tW6y0GYXGCjdaQhJA
      0HVCzbfo6+myMBWrIlQqFX0zpxhOnPtH0rHLmyZe03SWizqHtlsRhVsCkiloVOs6Xof4QMVP
      KzWd8eVWMDVjNxaRbVGUepV8vsDhZ78AwKljb7HFcpKFtEYsoeGNHuHQM1/81L1BV8+dZDRR
      pMVhJFnWefmpXYzM5UhMXEaw+VjOLGOuzRByVok401hNt9TLWFJhOadgMgj0Rkwr10cX6gSC
      RlJZFY9DIpVVqNR1dE3HYBAZn6vy6hHnqnewEYzMVPGg0ORZPWdej9Xp7bv/KTLr4drYEpV8
      hf7+Fr7/5gC/95UdnD8/zcBMgd/9yg7uF1nKFhSuj5TJJyt0b3PS3mJcU8jW8lTp+gOURYkI
      ZZrEjWdzrkCEuKwzdrlMWTZid5sQJZEzE16efenXmY5fJGwewGLanA/6yqyToDuHS5omVxAp
      KSJ7nvrayo/NZjJUE2ewdIt0NDXO8vre8ats3fXcfc8ReNzwhZqYW57EHwyRm1liIb5M75ZO
      xHqa9376t/S3WmlpshHxatxUAxcX0gzNZjmwp51aIc3xq0VsggvFYEIrFohlRIZm4eA2J6ev
      5dnW5cTlEFlK1xDQ8bkkkpk6LrvMUqrOQrKG1yXTFTatW+JS13XQdWyWu79XtEbatfEBN9MP
      Xpkism0L2ViCnlYXQ4t1wkE73kjwvswPUMgpxD+eQyjUyLeYUJuMrKXlruci3/wZYQsXUHPz
      m5Z4XdexGSBg0QkZFbL1AJbu36KppR2nwwEmP3MJjYD17goN62F4Dgr5PE3OClazSDJvwOA9
      QFNzhNnZWaxWK7lsGkHQWa4GOTeiMDZbJpsr4Qu0EAxt7iC4Rw2Hy0N3Vyden5+uznbcbg+S
      AD5/CF+wnexynDZvERF1xZlgs5mplqt4vVZqupnRmQLXxtNcm8oyMZvF5vOjVeLYzALXhksE
      g419zd1RM3arRLGkYjGJpLN1XHaJSg1aAgbmk3W8zrv5QNd1hifLlDI12gKGu96N3SQwPF3F
      ZpcxGUU0bXOBsSoi9UyBmVQFs8XIciLD6SvzOKxmmpsc67opi2UVgywwOVWmcmUJk66xPLLM
      9fEyvTs9G1a1HqgsCjzcpul4UWRBkQnOnKc6fxmx+0Vks4PZqXlCkkrIe3+ydB3q9RpRLcPy
      tIh3p4+ov86xwcvYHG6cTjenj/+MPQdfoqnlywB4I5OIosy1S8dpblk/y/LThiiKdPduJ9za
      ybWP/jM9gcZZCaqqoisKimggmykxMlXhwP4g9YKdDy6k8HltTMcStHmMfHQ9j1E20d/ZsHWW
      FtP87GScF4+0oldzzM7l8O+KYjeWmZgqMZ8VMVtczC3kONRvRNNgKe+gbuxhKjPDgdACorjG
      Ob9mkf4WA2dGyjS39ZOtB1GqOXY0Da1k6d4Le/oaafEN+wB0DZ492A4I664Auq7zwU/nyc/k
      MEtws3SBER1xKcvYVJnero1tvX0oI/jOgkX3Eojb72uya4T0SShPInhhceZnLMkdGGo5Lkz5
      2KqUaPUrSOK9s0qleo2oU2ckA4qqY5RFLOo4x9+ZxxdqZ2JsCG+wjW39uwGItDY2pDe3/PbD
      /OxPDFarFVvkVQrZ7+O2N3Z66bLMtk4LU7NZVMEMNZFa3cjvf74Tu0ljbtnAVLzCtoBOW5OR
      q2NliiWN2Viag7sizM0nqFc0nt4f4cSlGIJeZyom0tIZIdj3B2juGB9efot0psTLX/4THA4n
      1cTfEnCorOeNiy0L2ELP0LX7JUwmE5MTw6SWBmnyNozeuqJRKms47dK6tX9uXhZEkEVp5bu1
      HCSlikZpKoNfqd146LYvH3cqxJ24ncD7rQqrq8k1rmk6nM9H2HHkReQL30YQSrh7/4z5mZ/T
      5oqtSqNYTNZYilfRddAVjYhcQTcKtFg1Tlw34W/tp6pcYGdbFc2QZetX/pAt3b3r0vHLAKfL
      SWJGwWW75VERgM6oi2ytQn+bCUEwIQgC5aqOtePrxCfeIGhPsZRWMRtFEhmFjpDIG+9c49de
      2Up6PomuayAIiIJAW1CkaNqNL9CMxeaklB6gLzrJlfMfUKvUOBKKr0tftqRj6v4dnurdTiw2
      x8zQ24j1Ba6O6zy7SyedrSGJAk6bxHyySlfEeMtVOp/iwnCKI3taOHp5iS6vkfFkFaNW59Du
      Fs4MZ3j1M7eqZNTqGkc/SJAdz2C4R8WKkY/jLIyaCEbt9PXZ76kOPVAu0L2wEdVoVR4JAlu6
      e1Em3mObu8BQxkoxn6FWq6LrOtkipPICc0mB7VKGPdZbAqeo8PGiHUvnsxx6aj8zF79BtK0D
      f9dLRFqjiOKDZad+GtB1HUVRVk69uTmG5WKe9tDar8nrELk2a8AZ3IZbu4bNpFItpfj67/0p
      P/3BX9JsTrO13YTRAJLo43/4vShvfrjAzjYHR8/N0/T/U/emQXKd2Xnmc/fc96zKytp3AIUd
      IMgm2dzUq5rqVrf2dUbyaBwazdgRY48nYv5PxMT8sSOsWWxZsq2wLI2WdktNqc1mN5tNNkkQ
      xL7UvldWZWZV7nvedX4kUEARBRAAySb4RiAQmZX3Zt57v/N95zvnPe/p7WFhLk2VJP/d73Tc
      RI/Hy8DkS0iiwHg8iW3brC9eoZn+eyJaY5decQt1Q8HjCyIIArVKAbezTjIhMNAl4NagXIWD
      w53EY8KSWdhoMz7QiVr5fS4USeTH766Qq9l84cQIakSgvJXh0mKZWHDvdauKiFnVCZTuzVqV
      BZDX8xjrsHpZYPZChJ/9lQFc6v67iU8tEba79Dng7x5Bry0jOJDw6Cxe/i7JpE61YfOT6RB9
      0QAh0kRdd642sCgc5Onf/D28Xi+O41CtfIvB4bHHsnfX/eA4DvPX3qKV/Qmi7AFBQJB9CJKL
      zXQOf6ITgRGAnbqPtnYAvTSP4+nh8NM/hyIrzF80CErTdLVeJZcJ8M1f/Z/49v/3b2i1M+iG
      jd+r0m7LHJmI4vVIDIcCxMMyI8lhNs0XUO+gincnbgt3SZLE8ORJtgMxXvv+fyDpq+BVbtcN
      JPwGK9lVevsGmDx4lAs7F3Br6wiCcBeFRZIERvs0FtfbGJZDIVemZki8/OXD5PJ16jqM9/rI
      exKk0k1qTag1TFp6J3Ps90p4oy7219W7G4rjIG3kuX4txOlT+0f8PlYDuJOiatv27mtxt7Wo
      c1eNrigAtokjuREsAb9i0azmKNmHee9qgUl5nSmxBR+otXEAMTaJ5yZDUhAEJg48uOjW44ad
      bIrJUBNBaKApItDpb9Y/Aqkdi+WM0WlmFz/A089+o+PCINBqtfjx9/6UwQPPsJrZZChSprzz
      FmZiiJe/+bssL81z9cd/QiaUpGwPMX3xFU4fjdCqtfB5unjjjW2e/VqE5XQJPbPK4InjmNUq
      jmPj9fp2V6SungG++iv/gsXz/4aoO8flDZ12y+RYr4LUnsOynkEURQ4/+Wv85Pv/lqivTSJY
      BwRW0w6pSi9DkTR9cZgc6kxQzoiLCzMNZAF64j4cx+HCdB2PW0J3vJw+7CKT72R9602HtXSL
      9etFHkawXhQg9doqC6/LKAENj0/G0G0GT8SYPOB/tDCoXd3a92+3ZnXLsnZVxW4t7bdcow8a
      gCBAMbNCl51ClRxKbYGF5gAR2eSEa5E+395CmJYJOw2J2XKAhWybqWOndx/SZxWCIJDNblIt
      r7CW0emJSLuTCEDQKxELKiial9jw8wTC3bskNMuyWFtZ5MlnfoZAz3HW11YIK2ly6+9RaHg5
      cvxJuiPdrG5d5dRgCUkQWE23yFXavHWhzHhSY22zQLoM65fO02YRe+vvqWbeJZVawxICaJqH
      drtFu9Vg/sYFHKuO3yvRNuHSio7bKVAx3HT3DCHLCi5fH33jzzO7nKdQyOHp+VkOHX2G1LaJ
      1djA7RJ2/XLDdNgpdRJ68+tt8iWT7ojCoREXiiwS8ksoMhRybRbf2sJXqD40g1PFwWNbuJpt
      pHITpdaislhg+lLx4TPB+oU/wtg8f88HubBVYqwnyNJGmVa7Rb7l8NShBG9fSfHc8T7kB4jP
      3o889+OtEGL/Mxw7+QTxeBxJujuy8FnEzOUfkJB/wvxSnYk+ZXf1FAQBQRRZa0wxeuzn9qx4
      AHMzl6mu/gMHn/sneL0+DMNg+spbBJo/QcBgrTZGo2KSKr+P25GQLYtILMqVGZ1yo4ZpVRkb
      Pki1MEufB5780jChO338FlRaLnAsNMUh4jPZLppUGhaZnMmxCQ8uVaBQ1xDi32Js/ACWZaHr
      OrVajXa7haa5EEURwzCo12qU17/LeE+lY+SOQ7lqc+5Gg0Com3q9iia16O2S8WoiK6sNMjcK
      KJkymvNoWk/3wyPnAfb9m+OQLTcZintJ79TQHYNQJIDTqmMbOnO5NlNdd/vnDxJGXS+LFJsw
      MHGcwy99/WF/9ieCjoBVC4/H+5HyIo7jYFQX2DQMIgEFWZb3RMw2i27Gn/wGAG+/+SrjB47T
      3Z0AwO0J0BTau/dQURSOnX6JpfkomblXGTvxPKqqUf77DKfG6+h2iLL0NN84HufqxR9zZmgD
      t9ZGU0Y6K47jYFrW7vlciohHa96xcgtEAzLTKy1KNYtM3gDHQVQ0Jns75cBIawAAIABJREFU
      uRVB6LhmgiDsDn7o7Cf8gQDN6OfYyr9GT8TqkBMFAW+gh1wFmjWLQ0MybV3kwl/M49fb+D7B
      +e1jp0a6sKkaDjpwdKwLu1LhR7N5dFlldaPj196LIn2v95smvLshUhGjDJ7+2sf9kx8ZkiTh
      dnuwTJPr169TLBYe6TztdotcPodLFVDlvTx4QRDQjdsz6qkzz+8OfgC3x4tn8OfxeDrpoFv3
      MBzro2Gq+ANh4l09PP3Sb7CRldjKFLl+9X0ikQiSGiFf7tRP31m8JEkSiqLsrq4fdFtlWaAr
      IDHZo7K93Ua2HCr2yC7BUBRvd9YxTXPXHRZFEUmS6OkbR+r+FebSUUzTQRQc4v2n+eLXfpvP
      f/G3iE/+Du7eX8RxB3iEBqQPhY89CnRqMsH7s9s8cThJuVBGjUT4XNhFyK9RrLX3DPAHrRNQ
      Rajjx4pM4fM/nPrzJw1BEBAliYMHDyJJEqlUing8zsO4lZrmIt57lHrpPWIf6IBZbQooXS/s
      Klt8cJWJx7uJRuN0lBVs3nz1Twm7aqR2HI6e+epur2TN5aZm9yBbW1hmk+vXr9Hb20tp6waC
      sLfS6hb221tZlkOzbWM5cGxARRA0HMdhqW7QaNTx3pS2b7fbLF/5HlJzkbYQRgkdIjl0u1eB
      PxDEe+gXeevsGxyMTeMIFVIba+jpv8U/9MsEgiEmvvXrbP3Hf436Cbg+t/DQe4D2hT/CvMce
      YPek93EFHqU4xnHg+ysaT/zCP6e///GlMEDn+trtFi7Xw9GtlxauU69kEFopEtoyOzU/li3i
      ST7H0PhJWq0mhVyGZjWN0dhB0kKY9U1qbQ3Z3qSm+zl08ufw+/2szP4E07I5+sRX9nzHZmqV
      9974zxx96peYmZlhcHCQc+++yVC8zNEhnc2ij7i/ScBjs1lw0WjZGHq1E727GdbcyOhMDmgU
      KxZ9YZHeWKfoxrIcMnU/QvxFTFNnc/EcpwcKyGJnPBimw0yuG1/v08S7O1Lv81f+Kz2uRRot
      k7YTIuypE/LCD6d7KaZmsfJVpFyFuP3RG1ncyVrYs8J+HAbQbrV5b3aH/m4/C1s1Pn+il/xO
      iatrFfq7vNRNON3v49xaDdkyODoS4fJahc9Nxh/YIP5+TmTouf+WM08++cC/9bOITGaT6xd+
      wPNf+nWcm6Hk5bmziOW3CWoN3NrN9lQ3B+XsWouhfhfZapCxJ/4ATdMolUr4fL59G3oXi0UK
      hRyxaBxZUZidnaEnkaBR26Gnb5xKMUtq9RqJwZOsLbxP0nWJWKhznkrdJp/XGe3tzPpXFloM
      RCWid5DoTMtBFPfX9rFth4ubUQaPfZP1+bcZ9M8R9u2dMEtVk43FGgvnsoSrNRwBNnHhtm0M
      QcBvm2j33YnuxXalwla1TZdPI+h2U6jUMW0Dvy+AYRofjwukuRRUHBazTV446GcxbzLVHaLY
      tBAsE8MUubZWwjHBNHQur5Qw71MI80FU2gLNwCS9fb0f/uHPOAqZWaYSq8yd/UNabZNqzebU
      cH23Mu7WYLk1wGRJwAFcUo1cbofe3j5CoXvTvMPhMDvbGd5/70dEYr1MTh662Va2k/xKb22Q
      Ta8xOPE5vD4/PvV2lM0wHDyu23OxzyPu9ie4hQ++vhOCAKKxRWXpTzkUN+7a7zhORxwrHhAJ
      P9fNxX9oEcSklxaGKCLikBU1um39Ae+mw07D4Fgyxsr2NhvVFo2mwUDYzXa1hsjHtAdo1Nu0
      BYEuv8zrN8qMDEpU6ybRsB+rUSeTaxP3y2QqbQ4NBEnl2ySDH14YDbDTdlHq+TK/9Qtf+cwI
      3T4KHMdhfXUOrXkeb8DB6+owQK/ON3e5Ph+EbTuYCGiKwFZtgJOhB1PQmJg8yMTk/pKLY+MH
      GR6ZQBAELr8zgz/WoU+vbLaxDJux3s5zEwSBetNmNK7uuhXXprMItEkVWvQkwqyvpHnh2QOs
      bxWZGu2m2rQJBSQGu0wE4e5nuV00WF1p8tSAyMU5nYBjgNBhhUrYLOGhz37QPHAHhmViWDbI
      ClPRMBs7RQRBJO6CubL+8RiAx+vm+WOdGeTYCDR1C7cqdZK3QZWBZOfhHRjqzPiDD5DKs2zY
      annxP/mPOTY08cAhRtu2H1tDyeV2cLncdzXydhyHpRs/xK//BE9Q2CU0CoKApna6N+6XqxRF
      AcOwsWw41L3KW6/+MUOjU4hqkL7BQ7s5A+hQx5fnzuHYJiMHnkZV7z0BSZJEamONbHqN0biX
      y3MNfBqM9e41xPF+jSvLTQ4PacgS1Go6omwQDnqxHUjEvcws5XGcTjJTEgVs594SijvbOsd7
      OnIuAz0abwb8BCtVJEHg0XYBAoe7IywUqwwEfWgSDET8iCK4ZRlHaj68AaxXRewK+G/ev42q
      gCyJDAUsXDfP5v6AROKjbHxTTS/RF/853YkHL1pxHIdWq7XnwT9OiESi+z78SqWEWH3v5uDv
      3Kt602ZmpYWIg8O91Zsn+lQW1lq4XCLj3dt0qUVMy2HhwnkOPvm7uwN98eor9LiuYgswc/Yq
      hjREov8w4WjXbh4jm9nCHwji8/mZnblC0CdSrBpoikC+amOs6wwnFNw31eQ8LpGpcQ8L6y0O
      9nVWAlGWEWwLWVURLDe02hRvDl6PJlBJ27v7l1uoNy020jo+wcKtdkKxXSGJ0aMRUu808dgm
      hiCgPULPMllWOBi/7RLKmtIJFQNxr/vhDaCr203FCpGvdXRn+uMyfo/E/EqdQaeJ+wFL4xwH
      dAvqhoBhgSY7BG/uxQUBrNjRhxr8neOEx3bww70bTWxvLRH3GzjObaHYpVSboyPaPVmMt6Ap
      Iqbh0BJshpOdGyhLAv2hDPNn/yVoQyRGnsfSK0geAUmEkXiRKzMpVN5ja0FFV/vB1olJG+xY
      bpYMP430Jt0xhYBHxHEEDg4rWJbD8maboFvcLVpSZIFa06ZtwMnjSQQBVEWi1TaRJB+y4NC8
      KVEkCAIeubOZDvk6k2Qmr1PcajIaE9H8t6/Vdhy2N+p4HQsH8DgmNUmmYkm4sVFw9p0SDNNg
      tdwk6VVYLNaIe93kmjqHu8JsFcs0kfBLFrLqJV8uPbwBpBtRen0iEf/eyNHYoIfpWYOk2yJv
      KvRoOoEP1Pde2daQ/V3YrTIJV5PXVlS+/Gv/BMlxqDVqpObfwO/10lt/j7mNIoc/Qnb1cced
      rpog2Nh2R7tmu2jSaFqM9ii4VJFspsjcZpUnjiSZn9ui2HJ46kQfqVSJ0cEIgiDgVgW64ntd
      GkUWGIy3cJwZiiszJH1waxVxHAdFBK9LwOsygOWbRwmUCw0G/E2yokXQp5Ivm/TfFLKSJIHx
      ARfbBYOVtE5/l0K2YJIuC7j0Z/E4GUZ9iwC4XbfZpd47RtlWwcTrl2g0LZpth2Je51SP2NnM
      3+EpXJxuYK8Xbt4fARyHbqdFoSfKwJluls9mcGXLdzlGiqzgllu4FAXbNCnoNkGXiumAaduk
      6y2G+kLk6jb9Id8j7AE8/WymvPQHG3veliWB0dEA6ZzO5IiLG4t1DipNRFGg0BRI2UlGfvZ3
      SCT7cRyHjdUlfuaUQ1d34rZQ1aEj2LbN9b/LMaUusL6+9lg0q/s4oOttCvkCCNDd1c3FC+c5
      /cQZtjbm0Wqvk60a6G2b4YSMJN6mQsxsVTkzGeGdixt8/kQPZ69ksJsN3jq/QXcyhF+ViIVk
      ynWLgO/uxJUgCET8d7+n3EPJW5MFrm9pyLJBW7c5OOy6S0KlK6JQVkVm1tsYpsXMQgr/sJen
      jn2Bv/6TVzlxMMzaRpFAyEO92iIYUvGFoqxMrzN5fITMeoOhqEiXR2Cib2/WG2B92yB9eRvv
      HeHOWzF8LeRifNjFxMgw584Vyby7SdAy6diIQ820WC9WMRxoKSqKJHBVBxo6LlUm5ohsFavk
      dRnBpzy8AYj6DuGjv8Py5T9lJLxXHcLrEhnr6wzmsSEPaysGA16LC+0pXv7139+NSwuCwMDw
      2L7nFwSBpuBjyGezsb0Cg0MfiWfzuMA0TQzToN1qIiAwPDzCK3/7V3jFNH6vl820wUtHjLuv
      UwC314tHy7OwuMPhw33M31gmEpI5P1fixSNRRIE9/YHfuLjOCycHeOONGWxJwOf14rjd0Gzy
      xIl+RKHD6bIsC0naKxcZ9UOqBGrPC7jUGSRx/+KToE8iONZxN5OBLpatDCG5i1LwBZa3zmHo
      FiFRpFGvU5Xd9OpZmqZIV1hGb2gokoH2ARmcrZzBlYtFzGITr3F3qFMQBLxzm/wwW6H7ZDex
      hIvh3z7AymKVzHqDWtXgua8l8c3XSF/a4VmrE+ocR0I+3UdtsczBfAWAW+nUh6ZDt7Pn2drc
      pPfwy2xvTBPQ9o/JyqLATh30hoE6/AL9Q/sP+P3QEry0U+fRHYkqIV5//XUSPT2PhZjVo0JR
      VILBIJFopwO9JMt0J3qJ9hwiED9EUxcp7Czh1YQ9AlPNWoPpxRwjI13Mz29TqrcJREM8c3IA
      p90iHHRTa9qIkojf05nVV9NlhnqCrK7maJk2vSNJKqkt+ib6CHk6z/qdt2bY3K4hYvDO1TSV
      psnKyjaaaFHSbQ6d+UUcNYlTm/5QvaZK3aTXt83FVQ998Sih4WfYLtRoCiHWWyMcSrTxqtCX
      COAPuCiWDdpNi4hvrwNzfqaBs7iDy9xf1xQ6RqC2dVqrRUqzebIFE29Iw5RE6k0Ls9TCqet4
      yjVUx6aiuTjyy5OMjvqp6Q5WqrznfA9tALocZ+v6d+kefYZCpYHS3kK7R9+JSECmIarUpH76
      hsYf6PyCIBCOxllKV0D1MXr4SRRFpl6vEYvFPvMrAXSW6mq1yvZ2lu3ZP6NdvIhXTDHaJ7Oa
      MShVDML+TgIqHvUz1BfG71YYH40zmAwSD7s79ynYmRAabRtHEPDdNID5hTTZgo5jm4iSjMfn
      xqUKJLtDqDfZZXOzGVw+F3q9zdSBLlY2qnxuKsar1wp88UQXqZzO2OHnWF5JEXaX7ns9fp+G
      qoosrm7j9Xn43DNf5vCJZ4nEkmAW6Rt9EkdUsEWFcsWgVbPxeb2U2zIbFRc+RUeRIBZWmF9t
      oRkf3gzlVhJLqTQx10uYuTp9TyXJLldwtqtotoXoOLinujl2KoJlO0y/mUGp7+018dAukKpq
      yJ4oF975B174yq9y9X0Xg/pbCJiosohh2EiSQLNtoqkyPo+EMnB3Yfr9IAgCR57/hV116atX
      LnDy1JMsLy/R3z9w3xj2445boVrouCB9cQP/ru69QLNtE/CKXJ4t0LYMzkwlWF7KkK6a9Ec0
      SrpISLaQ/D5sXScZcdHWbUo1Ed1w6E+ofOm5A/t8c3DPK0EQEGxI9vk5f2MbxxZxeb0k4x3j
      CpnXyW1/jnDyScq5FQKe+3fDFUWR46MGVzcKzM5co9moo1Rfp1U2SQx+Hf+R528afgUBAZfb
      3VFmk2Ve/Zs/ZlyZZiPTRve5cWqN3e96kBB6RwtWoCcic/zXBtncNrj6yipao8H4WOe6Z2dq
      GLnGXQHlh14BNE0jOXqacnaetiUxdfxpNtN1/sN3X+PkkI//+6+voNpttootHNvk7FyRnNXP
      gYnRBzp/s9lgeXGW7e0spWKZnp4euroShMMRpqdniEajuFyuz+xKYFkW9Xodx3FILV+g25fd
      bUYBsF0wmBhw4XM5vHE2TSgeYqw/SLXSJLWZJ5EMs7q6Q7Vts7KWQxQcMnmDYxNB5tbalOsd
      wahUViebNwj5pX11QAU1yBOTYYJ+D+MDESYGwyAIDHZ1dsxuxWGjoDJx5HNs1yJIrZkPdYVc
      qohXqVBIXyHpXaFSbTHRL1DYOsd2rkysZxK3243mciFJErIsI4oiPYOTnL1aoPX2ObRaC/km
      OzWdq6DbLa7kmjh6g2pb53K2SNsWiLpvT4KCIKA4Ns2Al5ERL++8V6JZaRM708/xI51G4x6f
      ghXyUFouoXBLkOERDAA61t7VN0k01inNCwf8TF++hNGuoPm9hFSo6jA02MXijQ2OffX3iIf2
      b6B3q+xPEAS2t7P84JV/T6lSxyhfQ2pe5eL5N6nrGmPjB+jq6mJubg5VVWk2G7sc+M8KHMeh
      0Whg2zbtdhvy3yX6AeWDfMUiGpKpVJo0GjXw+tneKOKL+Il4ZGbX8ggOmIJIX1BmvWpjNAQs
      WePIuIeuiMxb7y6zU7fQSztcmqvy/bNrxD0mV5YbDPd2nsN6RqdUNtgpm/v+2y4Z5HbS2K4k
      YxNTLM+8Q9j34bRkj6vT/GKnZJItmAz2qIR8Al4xQyrnJtrVd9cxqqoyevAQb125jr+yQ0NS
      cYByqYaqCRTaDrZjIcsy3aEgrXaTmHfvfrAuKuREF5LPw47Zi+Zu8sTJIJ6bytguTSQYVLg2
      XUNu6VQnkiSOxh/NAIA9nV/qlTwbNZla9jqDUReKBHXdQZUcYj1RFtYaHDp8fM/xlmly/ezf
      kpv5O+Yu/5hw33F8Pj/jB0/jCAoHjr5AtP8M6e0qrvb7lPMpTHwMDo2ytbWJIIj4fL7Hlvaw
      H9bX15m9+G1quWkquTnC3tpuVvUW6k0btybi86okkxE0x2B4KEwqa9Hf7WZsMMpgb4ih3hCR
      aBDDcjMxGmSgR9ttKrG0nKFQbtGbjBINQsTtcHnTwYVELrvD9FqZeCTA2to6Ncchm80QiLqY
      X9rCLbe4UbSQa3nCAz7atQrJ4dPkM7MEXQ/WRM+liUQCMvWmTSwsIwiQynvpP/AV1Hsodoii
      SCQWJ3XjCq4jZ7B20tRLFTSXgNcXYCG9TdzrodAysB2Bbt/t87RdPg7+/v/G6KkXGDv2MhMH
      j7GxfolDw3vLZRVZIDwQYNXUOHI0AIL48XCBfPEhjgzcYKB/ZDfFfac+Q7i2Ra1Wxee7HZAu
      FguEmueIhgVawhCapnDl/LvY7hg+VcRqVljLbKNEDqJYQX7y3g8Y7V3h1UKc0ZER2vUiN65d
      4unnv8TW2jKTU4dZmblI99jJXZrG44a+vj52liwmE7mb79wdi1dkgVrDJB5WkWUJr7sTYZga
      c3c2iJLBaK9GtWGTLVscGvPc5eIcO9TDfNZCb7UZHIkyMhRlrG7g2DJvn1tnu+7QHXNwayKO
      bOMJuimV67jcMrLo4PeI2C0JtwKWVUIQBJIHfp7N2b8gGSx8qPtpmA7pnIFDJz+0kXMjx7+K
      13fvdrWCIDBy+Bi9/8f/g+04vPK/XqSvO9TZCwgi0fFBZFHA39IJuW8nYQ2Xl/jzX2Xq+Ik9
      k+H48W9xaeE7nJzovNYNm+VUm3zR4vixAOMDLupN69FXAADHtjAtG8cy8YT72MwZCPU1BBF0
      3cB2wDQtfJrB4toOoitOW9fZWJljZ/41+gMVdsoWDc9RYkE/Oy03Z44foJRe5fz8FmNJP4tb
      ZVSziTt2gOTgFJHufn7yw2+TXf8RT082+E9//j1KxQqGqHL5jf+C0HWEZNjzWO4RBEEgn7lB
      2F2+52ccB6oNm5B/7zMRRYF4RKFUs7i00EJzSYz2u/bl3fv8bixTYmggSCyo4lIVAj6NgF8h
      4LbJ1yUGu8CjifiDPkTHprsngmPo9PbFSERdhEM+wgENERt8U0QiXRhSAr145a6on207pHIC
      m0Uv27UYm+kdeuOdVkjVhkPROsiRE889kGCafLNibOaH38OlNxCFTkMNWep4HB5F3r1mwxvk
      zP/yv3P0uZfuOndXV4Ib85v0hvKIosDMSotkSGK8T2ExpZPsUqg2rI+2AuSyada3i5jVPGVD
      5osvfI2//M819MYaavEixw72kNspYtg2G+Ut1t/7DqHxYU71u7lW1nkv75CpyHz+q1MoLi+l
      UopGo5eJo+Nkd1KoEnT5JM5fmiPsctPXfQqXS2N47DiV3DpK/28xdugibp+L93/wF8iKG9s0
      yOfzqKr6qTXIvlfiThAEJC0KrN/z2IBXJJu/d+RjpM9FpW4x3Hv/IibDAm0fXtbAYBdlo8nE
      8J0+dIdGPZi4u9zU53J457U/5Nmv/s8kegaYSZ+gXTpPudbh6IT9EvlWgsTEN0jczNMsXPxz
      Ar4c2ZJKU3uKU8+8eN/fegvZzVW2qwZuu8Fiy0ZN7+DxeBkMaFzPFGjZAjI2cZ+HjOZm6ks/
      x04DVl79Ngc//y1id9DABEHgi1/5RZbf+z/pjdm4NWG3CbciCcwtt3ApwkczgHhPH7lKlaYZ
      JOyyEByHaDQEA0NQPcLZtQuEbJOnJgSy0w1aDYmIT9htqzMw4EJXwiQSPbR1nUMDURbXMxw9
      0M+Rk8O43XC6p1Nvq4gCzeoOV2bXePall9GMEtfmF3nqhS9ht6v0diXoTQYRgj0EVZt8Poff
      7/+prwTtdpu52Vn6BwbQNO0uct766jIlpUEkINHXffcg7hTB39sATMtB+xCCnG072DaPrNl/
      J96fafD0EQ8ri1eYnHoSNXiIhfkWx0+/gCiK5Ha26fb59iQpu4Z/ho16jvDgEKM9D17E1J0c
      oLAwTygUZfjQMTJrMzQMEwQPSZ8bR1bYLJbJhAY48bNfItB/iHYlS6PZwthnf95qtVjbqpMp
      hpG1Hkqbi5welzg1cXv/8NAlkXcitTTL9EaOY2N9VC0Fs1lHdppIgQS17BqR5AAzVy7i9Wm4
      FJlwYoxa5gql1Tfo6VXweyRev6AzOeRFljpF3SXnAE99/hsPVVS+H3S9TaPRIPSARSIfJ5rN
      JplMmv7+gT1lidvZTRqrf0w00Ald1ho2xaqFIjlId/TM9brFXWanZTlsZHUkSaDRstENm964
      SiR477lrYb3FYI+2rwFkcgapbZ3TBz88gtY2bDayOkM9GtMbbrw9X+D4iVNUq1UajcYe+Rbo
      bGRVVcXtdj/SxLOxOM2F+U0SPpGtYpOVP/1XyJaJRxJRJYGwW2Op7wg/97u/x/raKt19Y3js
      JrYqEuud3GUT7/7+dpvp6RtMTk6SWp0mM/NXnBi9/SFBED6aATwKHMdh+srbSLW3KJXKGKbN
      SK9KpW6TK1lsbpU58Nw/xW6UmDxyjHPnLvPi808DYLRqXLg8w+HDE1y7scjEUDdzazv0xQPE
      e4dYX15k8sAk7/3kdRxXlJ6gzNxalqMnTlPcnCdb1nnyySfvqlf4uNFsdnR0bt3XWiHNuxen
      aTQrtJb/hqOnhyitb7DUDtDO5ehO+HjuVN8HVL4d1tI6lbpFb1whtW1ydLyT/2i2bco1k1hI
      2ZNDAGjpFutpg4nB/fWXppdbuz0DPgz1ps3703WCvg5bs9yQmTj5S/T0TVCpVHZlThRFQVVV
      NG3/yrVHgeM4/ODf/SGtt/8rttMppnGA3t/5Z5x87sFcqjuRSW9x4Yf/kmcOuRAFaOk2K9mP
      qSb4YSAIAlPHn6XZPIlvJ01u6wZvXb/K8ZEmR8bcKK4wmiLQtJpcvXiZavN2EUQuvcH25irf
      3crx3Ile1gsW29sZJKtKud7iyvVZJg9MYogqZnGTa5sVho+9yPz0FTRVpNfvsJgucmQw9ole
      4wc5S5euzHHyyCRXF7Z4d77F1a0UnvY240+4Wd5u4fYqmJaNIt3SUIULMw0SUYWj4x0XanPH
      JJU16IrILM/X6AmILGTbWIDskrHbJrbloMoC2xWbvm51T/0uQLP94VnVOzOvmzs6x8dduxty
      y3K4eO0vabZ+nmTfGJqmoWnavup8H5XAKAgC/Wc+z8zbr3IHNQqj8WCh2OvXrjE6Nrb7LCLR
      GLrUx8WlApIrgt1MceKg55NtlH0/uN0e+gZGOf7U1/nS138P1R1GFCGXK3N1ZpFIchTbtjgw
      3LN7TLQ7iUtTcQtN/vjf/wmptWmW5q5jqwFSizdI9iZot9vsZDap1A0iAT8/eOU7BHvHqZby
      lOpGpwXJTxke1UZXQ5ilMmpoAK9VJOD1USibxJM9ZLaanJtpYN9sWj231nFheruUXaGrw6Mu
      FjZavHOlxkBYJO4XOZyQOJaQmAo5HOmWOJaUOdglEXfD1YXm7vffOodLE9DN+/dtXthoc3Wx
      Remmaxa8g2ItSQIBj830pdcJh8MdUt9N7aBms8ny/CVS60u73/lRMXzgIHb3wO7v10WZ/qlj
      D3TsZiq153W73aZYKlK1o5z5wn+PkvgqO0Xzo4VBPy64PT5KrTDT195HdMV5+eu/TTgcZmBw
      kGgssvu5xZl3cRkXEPUVfP4IB+MpTo23qNdtuhJJumJdTE9f5+r518nXbbwela//wq9Tz6fR
      JIdCtc3ExAQe7ad7vT39gyxeu8Dg1DEmxifQHTdffVZgtNeHVc1z6HCCrqCL5U2dbL6juzk5
      qHFjuUWpYrG8qXN1ocnTx7wIVgvFEXFsA0WE60s7eH1uMA1KLRsQKQkSiiIS/0BHx1zRJFcy
      cWsiptUpwHHdbGPUaNkossDWToeSnc0bjPdre/Ym0KnmajXr2ChkN2fY3rhAduG7VDZ/RFie
      I13tpic58LG4QrIs03Z5qVx6B0EQaIgqkz/7zQeq+gsEg3vUMQRB4Oq160wd/Rx9/UMMDA7z
      7sX1n/4e4F5oNhtcPvcD4uo15rJ9PPcz36Kws0Euu8LQ+Ek0zcPy+f+XwXiDi7MNBP8RRsKL
      hHydxmwIUG92Cqo9GsxtgBJ9mpNnvvRpX9pdsCyTGxdfpbz5Y2wHJgY0VEVkdqXJWL9GpW6T
      LZhs7Rh85ekAjgM/fL/KkVGNn5xdYiTmo91sYBsmhyZ6kESJjbUsBUsmFotjuzviuhODKpLY
      2TwXyhbNtsVYv8aNpRaC2FGTqDUsXKqATafqaiipUW/anD2fwu+1ScQ8rKTKDA11EfGJhDwq
      C1mbRFQjFtq7Cc6VHQLj/yPR6MfnYlYrFV75Z7+L29KRXvwmrniIl7749Q9VBNd1fQ9p0jRN
      /v6v/5Bo8jDPPvcFoCNJ+VisANARde0fmqTQjJJauUg7d5ZqOYujdDN74W8oZa8zmexUoTVa
      Nj3BEiG/uCvnJwgCmgKq0mEt1otZzk+vs7ScYXx8lMWVNLHop9czhKXsAAAf1klEQVQWNb22
      wLlL09h6jdWtItuZAhEtxcbmDpmCRNAvkcmbDPd2ujl2RxVMq9PW9JayWrlmsZ1tkFBNSqaN
      gohHNplda7G6tcNaps7ooSRj/Z2yRb9HYrtosJHRScQUemIdw8iXTZpth8OjbhIxhUhQpiui
      EA8rKLLA9HKTdrvGwbEofckwhWKTk1MJ3n1/CVPXET1eNFFkNa1TqJjohoPPLVJwTjI4euJj
      vW+qqtIUVZSBcQ488wLu2isUmkFiXfcPr5qmSbFYxOvtRLtEUWTp+pt0uzYJ9JxCUToixI8d
      kWZsYopf+I1/gdr1EpHkCU4/+QKeQJKDvVWEm+15uqMKS6kWVxeaGKaDvY+7uZYqotDASX+X
      //TH/4qVrdzdH/opIhQK06zXWVpaplqtEg8pnF3sZTUnc/Kgl8tzHb//Fhyn09z61gx7U7iZ
      kFfj4GgM04C+mJulbJOAR0SLD3B6qhd3sBMZMi2HbN7A6xI5Mu4m4L29UT047KY/obC6pd9s
      WnJ3yWO1aVFvdrL5QucHoesm9WaH4pCIKhwecRG5GSHKlmQGJh8+OnMv3BLUFQSBMy9/k8//
      8m/icrtwqwKtwrUPPV5VVUrF4p73PvfFf8RWHi6//2OMmxVnj80KcCcEQaAn2Uesq68z+9kq
      AWZ2/6YpIsmYQndEZX6tTSpr4HGLexQUGo02M+tljk+G2Epv0igVUcQG2a0FBMmHx+v7qSbJ
      0qlVCrUGvckeKrUW/cMjuF0eDhx4EtOoMZZssbmtk4h2yLqOA9sFk66IQqFik6l14Y49Re/Y
      UzRdw4wGSySiboaTIXYcF0+eihCM+Yj7ZfJlE59bpK9bxa2Ju+HVOyXXvS6RZtum1nDwe/e6
      EyG/RK3UJJWpkewJ4tEk/D4Nr09jMBlC0xQ8WqcLvYVAV1ShLJygd/DII9+f+26ab/5uTdNI
      ZarEB84QCEbu/fmb1xqNRslk0uA4KDfDtPmayNbsK+S3V4glDz4+e4B7oVqtMn39MmPuV3dX
      gFtRgVvkp6VNnbF+V8f1adp43SL5ssX0bJV4TCPRrZHJGRwcdpHaAbnn14hGY2iadpdI1acB
      wzBYuP46c9ffYXRkCMU/hiAHye1sEvLqdA8+BbZDtKubtcU5Yn0jrL3/1yxc/D5uf4R8q8Tz
      p2LsVE2CLhFJdbORqXJ0PITjOKxstWnrnYiOaTlU6zaO4yCJHXW3UEBGEtmlV9g2LKy3yZcM
      BntUeuMdfk6rbSOKsLlj0GjZREIdt2qr5Gfg+O9/JEmaH//wu/gSU6jNNdbzLgqpc0S6h+mJ
      RYlMPsHm9ff43LOf5wH7X+8is7lO5if/GmQXQy/+UwRJZvPiv6IvZrPeOvXpNcl7ULhcLizL
      oqV3MqS3Bv6dM4bPLVKomESDMpdnG3htg4QPnh+WuV6wEOjExzuftcnXyjSrRWpbl3n65X/8
      qRPnFEXh0IkvM374pQ9kV4/e/N/i/bNncawW1xY2ebFvhIEjX0Zw97OaL7M5u8LF6xepmyYx
      xSTW38Ub57fwuFw02w667nBi0kWpamNJDv13dHx3HAfDdGi2Hd6+XMPR6yyk6zxxOMlol0lZ
      F/n+j7eQ3B6iXpG1HYu+HonJhEreEMjXAsQnfv0j6zF5I0nMWg5LlAm5JYKTUxw/OMFiqs3m
      jfcRFO9DD36A7mQ/5unfxpj5Czbf+XdEj/8yunoAmEZ0Wo+/AexkU4Sc9/B77/6pjuNQbdiU
      azai6BALKfQlNOycQV9E7rTgQcLvkZhZaVEo6ggmOP4bJMR1YrTJ53aIxR+m7donB0W5R3E1
      4Fg6pWoTVdS5MbvMUFgiZ7k5eqAXo5Jn+kqLhq4z2Bfk0hvr9HQFyOYtxvpVZKFDAosE9pdN
      URUBVQFNFThyIEzAb+MIHW2fWsvAreigymSyDSJhPxuZGrKgsV2I8vzXf4NorGefX/yw167i
      oYzhTiDYdZbmF2g0bZ76/M/wznff4dAXfuWRz11pi9D3MsGNv6Jx8d9SVM9wo+LHqy1+ei7Q
      rS6S95t987ltbpz7a8LqBn3dKqLwgR61LZvX3sjx+XGFpSL4wi7kVpvJuLBLmc1WbbJ1SHgc
      3KqA76ZY1y2J8Qu1Yzz/8n/zqa8C94fF0twivlg3dqsGtonoDlDK75Do6eHdd97CzH4fWYOe
      qJv1dJOpUQ9ul8Jyqs2R0Q9vG5svmxiWw9bqBnlLRVa8JNU60zmdkGhiihLpTAOXz8NEv4vV
      1kEOTX6Z02c+mc6clmXtKbr6KHAch/PvvY1oNRitfpe2CW9sRCma2qdjAO12mx+9/gOefvpZ
      /IHAXRe5uTrHjYUNrNoigfY5tuoKWBAKegh7BCZGOjTndM7AzlXpj8iAg2mD8hA9dW5sOVzY
      dPPMi19l4vATHyuX5acFx3G4cPZVBt3v7LJEbyy3ODTcuZbp5SYHBzWu3dikb7iber5ES9IY
      DMu8e22bE8f6Cbgkri01OTLuQRBESlWbrWyFgyN76eQLGy0SMZWqeJzxY9/42Ltz3unWGqaJ
      ckdw5qM+F13XuXb1Mq7ttxiU19Ath++vdX06USBRFGk269QbTaLRu6VOVpfmKNUNfPV3MFWF
      zx+Ls53L4/G4uHy5xNCgD03t6OCkszpdvs5Ksl/x9/3gVuCJAZOFhQX09R+xvnCR1e0mfQMj
      j70hmKa5uxfKLL9GV6BxU1+/U1DjcYkUyiZ+t8ji3AaJoQRCpcJKGaRKkUK5SnBokLmra/T3
      hZhfb7ORNWm2oVy3sW2BgFdCvqMQXhBgozrKsad++RNpTbuztcbMSopWMcs7F65z4+J7JLoD
      fPt773N06sFEFe4FSZLIb6cJDpyknrpIQLOJeD6lMKggCHQneojH4/sOtJ38Dsn+ERZvXMBy
      6vjdKueu5jhzyI8lSlSbIvmySSZv4jR0EsFHS2doNxs0JAM2YY9DTKsjVBZ45+omem2HWtOk
      Xq/i9vgeu17EdyYAkUK0y9dZWGuyuqVj2Q593Qqrm22Gkxor6yXGhiM0yw3weogpJumKjjcW
      R6jWcDQPhbKNqgicPOChKywTDclsZA1yZZOwXwYBUpV+jj71qx+Zqn4veP0BKpUSLk2hf2gM
      l2JweTrNWH8Xyd6Pvs+IxrpIpVK0DIcIabyy8XiGQfOZdd46e57ttXMc7CqQ02VOjbi5sVLi
      1NFeXIqIZTn84P0ah4ImQ7GPb3DWWg6q3Ol0opsdCu6OlaD71G8QvSP7eEuz6HHJoawvX+bG
      e3/OU0dcHaHdpk2pYjLUo1Iv1zh7Y5sDE92sLWfRBYWTgy5+PFdjbCBMf1eA6dUWsaDMyAd6
      ANSbNmuZNtGwj/ih/4Fg6P7x9zvxwXD1h2FjcYbpjRwJv0wND4cnBqlVa7hdHiLRB//e+6HV
      anbqNd7/M/pZeDwNAGDu2ptUU9+j1rA4PuHek63czLSp55v4ZIeeoHgXJ/6TQL7tpR59kWBi
      hGTf0Cf+fY+C6StvcuP8dwj5OkS44R71gVw503K4ONfizNT+ocx60+a95V5e/tY/eiiDL5dL
      uN2ex1LIrFwusXnxO48XFaJe2uHqzDwARgtmVwpE3DXOXs+wvpomXTa5eGOL/GaJdrlEf0T6
      qQx+gKhWZ6D2CuXL/xFdf9AeVT9d9A0fw7Ak3JpErelwYbZJKtMpwC/lK7xxdpl8pc2l62mK
      hSrvXNkina2AAK3mvXn2kgSqN/FQbqBlWQSDocdy8ANoqsaB53/78TIAbyiOIt5sqiwoiNEX
      8PpDeN0KAz0+KnWLG9M5aoUCtfa9BVQ/SfiFMqXS/bUyPy0EAkGOnXyWI+Mujo67ScYkri9X
      yJdNrqckqnWFG9c3adgC82s5YmEPm6ltljcKzC/ukC3sf09dqkhPsPZQHP9bxmI8gM7npwGX
      240oio+XAZS3N7l08RKzy+v4olEi/ghvzXmpNgzmFndYWMsxdShOtuUQ3ycx9tOAjorrMXQZ
      b8EfP0L75gLVHZVJpyvMb9Q4dtCFPyCjKSp6pYTg8jG3lEULBbhxdQvN52Ej22F37gfzEdoT
      wf2Te48DHss9QKVcxh8IIghQLOQpzv5fxIKdSi7HgauzNVy6jmXDkT4Zx4F0xabYcDiUeLDk
      ya3Z7INtOu93rO3Alud5Js58/bENk64uz+Kp/HmH42/b5AsN9JZBsDtAq27Tbtl4NAufW6be
      tvF5FK4vNZga9SDLIutZk3ReYahHIRG+PXsvb/s48Lk/2NMA3HEccrkc4XAYWb6ZebftPa7S
      497b4bFaAW4hEAzuqgOHwhHq0uQuCQ4cjh7w0jcRomxLnF02uZEDpcuHFHLvS43+IBrlCq+8
      t8Z7c1nOXV3j1bPL5GttFpbTrOX2b8NpO7AhP8Hoqa891g90YGiCTKmj7yOKIvGYj96+MD5F
      IhpUWNoyWE47bJcdgr5OwYyqyChKhy49mFAIhqOU7WFauo1pOeRKBu16jgtnv7/nuwRBIB6P
      3zfK87jul27hsTSAOyEIAr1jL1GoSti2jWmaWJaFKls8ecJPKOllZNy3W9Qxk7UpN+37+qt6
      q0Wl7VBpWrQROdbvY7uqU6hbZLaLd/UhdxzYaHUz/tQvPDZhz3vBtm0Q9q97FgR49oSXgE+m
      bQrcWGlxfrZJo2WzuHFbN98WA7R1i42s0WGSmjA+qBLw7j9cBEFgdvZGh2H6gY3y4+ZdfBCP
      vQEARKJxGtpTiGJHguOWtHYn+wvWzWk/6JcYPhCk7HJzNeuwUbD2NQRBFHnyaD+CYVIp1/n+
      lRxxt8BSusZMqnzXMQulAPETv4miPJ4RjVtwHIfpC99mIFbf9+9t3eb8jQbVhsVIr8rhMQ9P
      THnxeiSy+Y67Y5gOqH0ossNov8r4gIveuNKRJnT2Xx23tjaprL/C8sKVT+zaPik83tPZHQhG
      B2lsv43Pvbeww7KdPS2FXJpIb7dGT1xldbNNtdUi4N7rsrh9Ptant5gYieNXBUIehVSuzs+/
      OInT0jEdUO84RPZ2EU88uMLZpwVd1xHq1xH9+89rhukQCcqM9e+dlQ8Madi2xlpap9qwqFnX
      iPScYnV7m5Hu2+HRdrNy1zlt22b+yqscH2iwWd0CPt6SyE8anxkDSPaPs9r8KvXca3QFjV0a
      QFt39s0FiKKAxyNRyTl41L2fUd0uXjo1sOfzA4mbHVTUfQSlrP1nvscNmxsL9EQffn+iGw6X
      55t4NJGpUReCUORGdoOW3QV0DMCyHdyB25OAZVlsb6dZnX2TkcgapiWQyW7zyXBDPzl8Jlyg
      WxiaOEPX1B+w0TxBoXpbRMq+x843FpSpqC4uZAAcLs1sUam3efPiBjtVg3a9yWvvr5MtVHnr
      yhapTIkfXNrk2lyGpmHx9tWtzomUT79q7EFQLaxRqpq02haG2ZFR1A179/64tE4bJct2dt9r
      tm3m1tqcPOAh2aVwbbFJvmwh6WsExUUcB9q6w3qpl7Gpl3a/a+bqm+jrf8SB2BzhQEdmJTl0
      6lO57o+Cz8wKcAuBYIip099gK3WY5bk/I18279m7SpYFJofdFMoKq1s1usMumoaFaZgsZKrE
      VIfnJkJ859IO8aCCz+8mUjWRHJ2r81nyjU5RuBK4u6vJ44hGWyZAiVQa2jcjmAIgSgqCKJMr
      O2RyJgvrNQRBprdLRVMFDo91ZNajQZloUObaYpOpkRYgkK2EkONfZOrw5G4AwHEcnPoM4cid
      kigKU89/1ub/x7Qo/kHgD0TIlUyC8jqy3CmUvxOO41Aom6RzJoosYFTbzM9vYmkatq7TE3aB
      KHJxqciR4TClaovMdo2WBfGYj2qlSW+XD0X1EJj6Jbzex38VCIZjlNPnGE4YdIcFusMCXWGB
      eMgmHjRJ5yW+8GSQvm4XU6NuSlWLw6N7hWzLNQtwCPllNstxug/8Gsneod1Q59/9l79icOIQ
      r/3lX+LylvnR+1uUmwbViszKtoCBilvUqeoCmmiylS4ANpoEpabF1socVUMk6P9oJZQfFz57
      I/8OKK4Qmlei1rB3e+TewsxK6/9v78ye47iuO/x193TPhsEsWAbbgCBBrISoaKEsW6IWK0zp
      IWUnciWpVDkPqeQplT8mf0kWV9kuK1HZFYVSJJmyQktcBYDEPlhmn57ebx6GGGzcIGFroL8q
      FICZnsEd9P3dc+5yziGVCDHYo3H9qzrvDChcuPqoXMhQGr1hE42qjAw0s0cP9+/MGXQ+2wwG
      eWj2M5Y53FyiB0V7e4rpyFU88evHFs4Ia81Nws1yqtkOlduzBmPnwq3Dhp5ohk/O5NuY+NE/
      Et5V0ijZHub+vWk21i30hsX41CDW3Cp/1Lv4q7cusLCus2zl+XbZYbRL4qu5Ooq+xk+uvc71
      r+YQjswPXuzBMAwikWdHqh02vpoD7CakJUjEFco1F08IHEe05gSeB31dzURPFwY0yvrOtfFY
      VOVZ08WqKZGe/IsTFwvwNEYuvc38+t7R9XHTpM5UiHhUYm7Fxnu09Lu8ZtPXpRLX6uh1fc9r
      4pk+7n/2GwZ6ms+t5MvMFF1GcjnyVZtifhVJCqHJLsu6R7ZNJd3ZjRCCaCbHSHeEz7/85kR0
      fvC5BXCsOiGlOUm7NW0gBBQqDr2dKuq23PjJuMLcusKSLpjsklrZBbZ2l7cQQmA6YNiwrl1i
      IusP/3+TtrYEXvJ9bOdfd5Q1vXFP5lzf3k2pXFbjs691CmUbgcRQn4YsS6TbPJbmb5POvLHj
      +qnJF1A9nQF5CSFLxFaqGF0vc+Xdv2RpYZ6hN1+lXsoz1pYgX/SIJRw8o8yHn97mpdeucPur
      +6QzJyMJAfhdAPoDpBiMDEaYnjd44WIU2/EIKRJL6w735wyG+sIkEwovTLWzkLd4uF7nfJfy
      2M5fMWDe6EXpu0qms5OxvtyJPc77NELRbhwd1G13NxpW6EztPZh2a8bg8nCEWKRZ2tRxmpYy
      pADuXrMRCYe5MPIiKzf/i2xGZmggxYI5gSwrDAwOAZCInQOgf9vWyeSj79n3/vQgPuKB4WsB
      IJonF7+dM1oFIdRQ06vr71LRDZnpBbPpBvVr9Haq3CyEyZo2sV2D4ZKRIT75t7yYHTjx2/fP
      IpVKUy/IRMNbHdiyxY6Dac007CZ9HWqrjkBnUuH+gk1XWrBYiJAdP7/nvadv/x93F0tkagZ3
      5ytgmFx+Z5APP/qYF4Y6WTAUrlwaRa8UsJUY+sYixDqRnAZdmSTrFYNs59FX7XkSvhWAEAKE
      jeNCNCw1S37uGtFjEYWxQZlCxWVh1SaXbUZIrVQFF8Jb7kFej5L90T/Rvo9wv5NMT28/X96M
      0pnc8uHXii6FsktVd6nrHrIikU4opLflCtoou82c+Zm3mbjyNpHo3koy6VQaForcLw2TX53n
      rXeu0Z7I4BoPmC40aHtkZBrlVfIiRf7OPaT4OoWVB0xNjDC/Btm3AwF8b4QQYG/gas10KE87
      /PZgyWJyOEJVd9FUqOk7p786KRLJk3NTvi+SJCFC3cCD1mMhReLbeYPeTpVLFyII2LFSJIRg
      cd2hprvEU+ce2/kBVtdWicfjvP7nH7Cwsk55dYb7c8tMXR6nWDFJJZrWU0KQz682S+VaFkN9
      ndxdKjOQOlkrar4VgGmayO4GM4smw08pGSpJEud6NZZWbXTDRTIcRtI7BWA57ok/t75fkv1v
      US49RFObJUJTCYWXxrYK4+3+pJIkMTKgNX353CBPYvzyq4w/+jnT2QVMtJ7LbbvO05IM9UD6
      Qg9CjROPhBh3HBT5ZHW5k9WafTD/4DbZNDQa0p5qiLuDXLrSKu1tCrN3K0xkpR03X7clMiPv
      PnfmAr8wMvEaX36ap/rwd4RVh+5MZI/IPc+jVA+xop9jsH2GiCaT6b9CNPr9N6k6s33sHus1
      7eTNrXwrAE/AwqpNx2PyXW5nc7Xn+o0Kbw02zf52dymvvcSl8dcOu7nHwsXJq6w4N+hJi1Ya
      l+0pKT3PY6k+jBLLoZuzrJuDvPDGT4672UeKb4c9r7FIre6QTOzU8GMTbRUdJkbi3KsoLJe2
      YluLZoS+qfdPleuznUR7EksdAzy+uPGA//jtDK7t8NHniygK/Oo/71Lb+JIe6XeoIYXsxfeP
      u8lHjm8FIKnN48vCc9HrBqbtUqs1eLBYwrIdGnqD+eUyjuuRL9j0dISYnEggOtqY2fAoWRHU
      S/9AOtNxzJ/k8JAkieyFdylWYTiXZGK0m9nZNSIhQd1xKRYbpNvlZnBR90/pzvYdd5OPHP8K
      QDi0xULUGy5f/P5b/jhT5NOb85iNBjduLfPxZw/RdZO6YSOE1xrlsx0qekijknqT7MDwqR39
      N6lVy0RUwRe31+lOaswuV7AaDe7Mlhgd7aUj1YnX+QG585ef/WanEF/OAYQQOPoc8ahMrWYw
      vWwQruXpSat8fW+dK6/0M2+pFPIFtPYkrgihG83VEAAvNsTIyyeveuRh0J87z2c3Ffp62rk1
      azA0eZW2eJxqXSfedZHk6A/IZLqOu5nHxolMi/Is9Hqd+a/+hUKhSle4jtfeTnVlgw1XYqon
      xvS6jVkuUdZdLr94npAUIe+80gzqFg65kTdIJI6vYuRRU6lUWJ77ht7BS7S1tZ26Fa/vgy8t
      wMKDP9CTstnYgK6+DJIk0ZPoYeTR83+SloAt314Ih3JxlfEX/+5M3XzXNvjk8z9w9Y0fEsrm
      +OiTL7g03M+d6QUmx4e4M71Ae1hm6qVX+OTjz3j//R8/+01PGb4TgGE0qK58DppDXLOxvTCa
      IigU6oTjURq1BulMG7puEdNkLCHjWTayPY9t274/57MfFDVCZ2fT0pmOS0jYPFyr8eZUlgWR
      pjfrIDlFbt74PZbwz5Hvg8R3AqhWq2RiZVwPyosrWPFhxlKCQlFnbXYNjxCxlRq64zLZrfDl
      aojqnXlGP/jnM9X5oXlc/N7Xt3ANg2imCy0Uoq8jzqe3VuhIVSkZEqMXcljWIpf6T84R5aPE
      dwJQVQ3bU/Ech66OOCXXwxNQaziMn08zt+bgCY+NDZlZNcNKWSWWHuHi5feOu+lHTkiL89Of
      /QzTNNE0jeFcM7ZhbGxix3WDA/6KeThIfCeAUEjB9RQ2ig4RD9xSgel6CM9zKRoycdWjt6ed
      mbUUw2/+PS9FVRAqsTPk++/mrFm+/eA7ASzN3yWbMqhUYHRo+8ZNBssWLG4kMR2XK69fJdeb
      PbZ2BvgD3wmgYdh8esdDZm+6btMWRHN/Q1s6Q+4U7/AGHBy+8wvW83MsFFNEtL1Nj4Yl/ve/
      /51SqeCrQPaA48NXArAsE1eEmLyYJKrtPcKgmxJXfniN8xdGHvPqgIC9+EoAEhJ37i+wMD9H
      VW+m/dtOsSpzcfRyMPoHPDe+EoBhmqytrSEJg4rusX1hZ7kUR+u+duJL8gScLHw1CV5ZXsC1
      Klzsb8N2ZEJKUwGVuqB96K/p7T93zC0M8Bu+sgCzs/d58+UOhnNaK5MZQCQMhfxdarXqMbYu
      wI/4SgAjo1OsFgULqzadyS0/XwtJ9IauM/3Nb4+xdQF+xFcC+NUvf8lyvkhN94hFdk50N+rt
      DAyfztjes4AQYl91iA8KXwlAkjxSbTKW5ZJs2xJAoSrRMfJzOjp7jrF1Ad8HIQS1Wq1Z5O8I
      8ZUAYrE4GxXBYM9Wvk7XhZJzjtQZjmo6DUiSRDweP/IQVV8JIJ3pwHYEt2ZNStXmUYjFcoap
      139+pgJdTiOSJCHLz1fk/CDxVa9JJdMIKUyh6tEwPVwPcOtPNJuu61KtVqnVasfiXwacfHy1
      D5AbHMRyJB4uO2TTNvmiw3LBQ+udYXRs/LGvCYfDKIpy6rM/BHw3fGUBhoaGODc4iEBheiXM
      /UWVc1mPUnH9sdcrioKmacHRiIAn4isByLLMtWt/hmHLSJ5BzYpRNwSlxes0GnvL+QQEPAvf
      pUXxPI/r//MxH/7m1yiyTa5b4tUxFTUxRLT7Hbp7BohGo4cyKXZd91gmagGHh+8EsMns7Cy/
      +MW/sb7ygEhY4XwuzdTL7xFLdDM0dB4/ln4NOHp8KwBojsj37t1leWmJ/oEcY2Njx92kAJ/h
      awFssrnEGbgmAfvlVPgJQccP+K74ahUoIOCgCQQQcKYJBBBwpgkEEHCmCQQQcKYJBBBwpgkE
      EHCmORMCCGIBAp7EmRBAsFEW8CTOhAA2q6Tbth1Yg4AdnHoBeJ5HvV5HCBFEhgXs4VQKwPM8
      hBCYpkm5XEaWZWzbDgLnA/ZwKg7D7cayLDzPw7ZtUqlUMOoHPJFTOSRaloXrurS3tx93UwKO
      mc2EW9vnftt/PlUWQAiBbds4joMsywghArfnGBBC4HneiQkftSwLRVEQQiBJEqZpEo/HcV33
      dATEbOI4DpVKpfW7LMskk8kTcRPOAp7noet6a7VNlmXi8fih1mx4lth294ndnAoL4HkekiTR
      aDR2PB4seR4Nm/9nx3GwLKv1uOd51Go1ksnkoVhi27bRdR3XdVEUhWg0CtBqgyRJ2Lb91Pfw
      vQA2fTxFUfZ82FAoFIz+h8xm56/Vao/9XwshqNfraJp2YPWKPc/DcRwMw8B1mykyXdelVqvt
      +71OhQDC4TCGYex5Luj8h4tt29TrdVRVxXXdJ6aotG27dW0oFEJV1da+zObXJs9zz+r1+jNH
      9ufF9wKQZbk1stTr9R3POY5zHE069ViWhWmarU5omuZzv9ZxnCfel2g02nJjnufvHgS+F8DT
      CFaAvhubc6rdo7HneTQajX11+P1gGAaaprV8+u2WwbKs7+TiPAvfCsA0TVzXJRqNIknSYye8
      QU7Q/bHpwpTLZRRFIZFItETgui6VSuVQFxaEEJTL5dbvyWSytXx5WNbclwLYPOqwfcTYvvoA
      TV/yaeb0NLM5MdzPAFCv13eM7I7jUCqVSCQSrfXzo15V2766d1hW5/8BeisdspmFF5UAAAAA
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
