<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='countries-aggregated' inline='true' name='federated.046qp0x1utghkh1dfz9q10vq6ine' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='countries-aggregated' name='textscan.1n1d48k19snmkn10e4l5k12f877r'>
            <connection class='textscan' directory='F:/portfolio/Tableau-portfolio/covid-19/dataset' filename='countries-aggregated.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1n1d48k19snmkn10e4l5k12f877r' name='countries-aggregated.csv' table='[countries-aggregated#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Confirmed' ordinal='2' />
            <column datatype='integer' name='Recovered' ordinal='3' />
            <column datatype='integer' name='Deaths' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[countries-aggregated.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[countries-aggregated.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[countries-aggregated.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[countries-aggregated.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[countries-aggregated.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[countries-aggregated.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank of Confirmed' datatype='integer' name='[Calculation_1391893795148787712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Confirmed]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank of Recovered' datatype='integer' name='[Calculation_1391893795154051073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Recovered]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank of Death' datatype='integer' name='[Calculation_1391893795155501058]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM(Deaths))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Random' datatype='real' name='[Calculation_1391893795161939971]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='random()-0.5' />
      </column>
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country,DAY(Date))' hidden='true' name='[Action (Country,DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[tdy:Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.359079' measure-ordering='alphabetic' measure-percentage='0.640921' rowDisplayCount='12780' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Top 5 : Confirmed Jitter Plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries-aggregated' name='federated.046qp0x1utghkh1dfz9q10vq6ine' />
          </datasources>
          <datasource-dependencies datasource='federated.046qp0x1utghkh1dfz9q10vq6ine'>
            <column caption='Random' datatype='real' name='[Calculation_1391893795161939971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='random()-0.5' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1391893795161939971]' derivation='Sum' name='[sum:Calculation_1391893795161939971:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[Action (Country,DAY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[tdy:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</column>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[Action (Country,DAY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]' scope='cols' value='Day' />
            <format attr='auto-subtitle' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Calculation_1391893795161939971:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Confirmed:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Confirmed:qk]' />
              <size column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk] * [federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Calculation_1391893795161939971:qk])</rows>
        <cols>[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{07E120A2-5FE0-40A5-9F51-DFDD57100711}' />
    </worksheet>
    <worksheet name='Top 5 : Death Jitter Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='countries-aggregated' name='federated.046qp0x1utghkh1dfz9q10vq6ine' />
          </datasources>
          <datasource-dependencies datasource='federated.046qp0x1utghkh1dfz9q10vq6ine'>
            <column caption='Random' datatype='real' name='[Calculation_1391893795161939971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='random()-0.5' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1391893795161939971]' derivation='Sum' name='[sum:Calculation_1391893795161939971:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[Action (Country,DAY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[tdy:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</column>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[Action (Country,DAY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]' scope='cols' value='Day' />
            <format attr='auto-subtitle' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Calculation_1391893795161939971:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Deaths:qk]' palette='gray_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Deaths:qk]' />
              <size column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Deaths:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Day of Date:&#9;</run>
                <run bold='true'>&lt;[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Random:&#9;</run>
                <run bold='true'>&lt;[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Calculation_1391893795161939971:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Recovered:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rank of Recovered:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk] * [federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Calculation_1391893795161939971:qk])</rows>
        <cols>[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{FC47A35C-0898-4BEA-A7F4-5DB2CB316216}' />
    </worksheet>
    <worksheet name='Top 5 : Recovered Jitter Plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Recovered Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries-aggregated' name='federated.046qp0x1utghkh1dfz9q10vq6ine' />
          </datasources>
          <datasource-dependencies datasource='federated.046qp0x1utghkh1dfz9q10vq6ine'>
            <column caption='Random' datatype='real' name='[Calculation_1391893795161939971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='random()-0.5' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1391893795161939971]' derivation='Sum' name='[sum:Calculation_1391893795161939971:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[Action (Country,DAY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[tdy:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</column>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[Action (Country,DAY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]' scope='cols' value='Day' />
            <format attr='auto-subtitle' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Calculation_1391893795161939971:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Recovered:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Recovered:qk]' />
              <size column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Recovered:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Day of Date:&#9;</run>
                <run bold='true'>&lt;[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Random:&#9;</run>
                <run bold='true'>&lt;[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Calculation_1391893795161939971:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Recovered:&#9;</run>
                <run bold='true'>&lt;[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Recovered:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rank of Recovered:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk] * [federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Calculation_1391893795161939971:qk])</rows>
        <cols>[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{DBBB7C55-1C3E-430F-B97B-79AAEE248690}' />
    </worksheet>
    <worksheet name='Top 5 Rank : Confirmed'>
      <table>
        <view>
          <datasources>
            <datasource caption='countries-aggregated' name='federated.046qp0x1utghkh1dfz9q10vq6ine' />
          </datasources>
          <datasource-dependencies datasource='federated.046qp0x1utghkh1dfz9q10vq6ine'>
            <column caption='Rank of Confirmed' datatype='integer' name='[Calculation_1391893795148787712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Confirmed]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1391893795148787712]' derivation='User' name='[usr:Calculation_1391893795148787712:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[Country]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]' included-values='in-range'>
            <min>#2020-01-22#</min>
            <max>#2020-03-28#</max>
          </filter>
          <slices>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</column>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795148787712:qk:6]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795148787712:qk:6]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795148787712:qk:6]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[twk:Date:qk]' scope='cols' value='Week ' />
            <format attr='auto-subtitle' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[twk:Date:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795148787712:qk:6]' value='center' />
            <format attr='wrap' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795148787712:qk:6]' value='on' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#333333' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#333333' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795148787712:qk:6]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' />
              <text column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795148787712:qk:6]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.7016575336456299' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795148787712:qk:6]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.84558010101318359' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795148787712:qk:6] + [federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795148787712:qk:6])</rows>
        <cols>[federated.046qp0x1utghkh1dfz9q10vq6ine].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{F04D0A02-5942-42CC-A394-B0E3510C0485}' />
    </worksheet>
    <worksheet name='Top 5 Rank : Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='countries-aggregated' name='federated.046qp0x1utghkh1dfz9q10vq6ine' />
          </datasources>
          <datasource-dependencies datasource='federated.046qp0x1utghkh1dfz9q10vq6ine'>
            <column caption='Rank of Recovered' datatype='integer' name='[Calculation_1391893795154051073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Recovered]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank of Death' datatype='integer' name='[Calculation_1391893795155501058]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM(Deaths))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1391893795154051073]' derivation='User' name='[usr:Calculation_1391893795154051073:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[Country]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1391893795155501058]' derivation='User' name='[usr:Calculation_1391893795155501058:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[Country]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]' included-values='in-range'>
            <min>#2020-01-22#</min>
            <max>#2020-03-30#</max>
          </filter>
          <slices>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</column>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795155501058:qk:2]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795155501058:qk:2]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795155501058:qk:2]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[twk:Date:qk]' scope='cols' value='Week' />
            <format attr='auto-subtitle' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[twk:Date:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='3.0386741161346436' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795155501058:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795155501058:qk:2]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' />
              <text column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795154051073:qk:2]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='3.0386741161346436' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795155501058:qk:2] + [federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795155501058:qk:2])</rows>
        <cols>[federated.046qp0x1utghkh1dfz9q10vq6ine].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{8811F21B-74A8-4F3D-B56C-7E5ECA6900A0}' />
    </worksheet>
    <worksheet name='Top 5 Rank : Recovered'>
      <table>
        <view>
          <datasources>
            <datasource caption='countries-aggregated' name='federated.046qp0x1utghkh1dfz9q10vq6ine' />
          </datasources>
          <datasource-dependencies datasource='federated.046qp0x1utghkh1dfz9q10vq6ine'>
            <column caption='Rank of Recovered' datatype='integer' name='[Calculation_1391893795154051073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Recovered]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1391893795154051073]' derivation='User' name='[usr:Calculation_1391893795154051073:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[Country]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]' included-values='in-range'>
            <min>#2020-01-22#</min>
            <max>#2020-03-30#</max>
          </filter>
          <slices>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</column>
            <column>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795154051073:qk:2]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795154051073:qk:2]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795154051073:qk:2]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[twk:Date:qk]' scope='cols' value='Week ' />
            <format attr='auto-subtitle' class='0' field='[federated.046qp0x1utghkh1dfz9q10vq6ine].[twk:Date:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795154051073:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795154051073:qk:2]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' />
              <text column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795154051073:qk:2]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='3.1270718574523926' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795154051073:qk:2] + [federated.046qp0x1utghkh1dfz9q10vq6ine].[usr:Calculation_1391893795154051073:qk:2])</rows>
        <cols>[federated.046qp0x1utghkh1dfz9q10vq6ine].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{80936069-C121-495E-AD2F-5A365A7B3822}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Ranking of Top 5 COVID Affected Countries' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Ranking by Confirmed Cases' captured-sheet='Top 5 Rank : Confirmed' id='1'>
                    <capturedDeltas>
                      <worksheet name='Top 5 Rank : Confirmed'>
                        <filter class='quantitative' column='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]' included-values='in-range'>
                          <min>#2020-01-22#</min>
                          <max>#2020-03-30#</max>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Ranking by Recovered cases' captured-sheet='Top 5 Rank : Recovered' id='2'>
                    <capturedDeltas>
                      <worksheet name='Top 5 Rank : Recovered'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Ranking by Death cases' captured-sheet='Top 5 Rank : Death' id='3'>
                    <capturedDeltas>
                      <worksheet name='Top 5 Rank : Death'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Confirmed-Recovered-Deaths' captured-sheet='Top 5 Countries Spread' id='4'>
                    <capturedDeltas>
                      <worksheet name='Top 5 : Death Jitter Plot'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='horizontal'>
                              <node-reference>
                                <axis>[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{06CD90D4-F6D1-4660-AA0C-920B0741AB5B}' />
    </dashboard>
    <dashboard name='Top 5 Countries Spread'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98164' id='3' param='vert' type='layout-flow' w='99034' x='483' y='918'>
            <zone h='98164' id='5' param='vert' type='layout-flow' w='99034' x='483' y='918'>
              <zone h='98164' id='6' param='vert' type='layout-flow' w='99034' x='483' y='918'>
                <zone h='32721' id='7' name='Top 5 : Confirmed Jitter Plot' show-title='false' w='99034' x='483' y='918'>
                  <layout-cache minheight='501' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32721' id='9' name='Top 5 : Recovered Jitter Plot' show-title='false' w='99034' x='483' y='33639'>
                  <layout-cache minheight='501' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32722' id='8' name='Top 5 : Death Jitter Plot' show-title='false' w='99034' x='483' y='66360'>
                  <layout-cache minheight='564' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98164' id='22' param='vert' type='layout-flow' w='99034' x='483' y='918'>
                <zone fixed-size='254' h='32721' id='7' is-fixed='true' name='Top 5 : Confirmed Jitter Plot' show-title='false' w='99034' x='483' y='918'>
                  <layout-cache minheight='501' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32721' id='9' is-fixed='true' name='Top 5 : Recovered Jitter Plot' show-title='false' w='99034' x='483' y='33639'>
                  <layout-cache minheight='501' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32722' id='8' is-fixed='true' name='Top 5 : Death Jitter Plot' show-title='false' w='99034' x='483' y='66360'>
                  <layout-cache minheight='564' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5666F9F8-7C6E-4724-9F6F-47FBCABC7DED}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top 5 Rank : Confirmed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E6A415E7-E075-41B6-B303-134AA294F58D}' />
    </window>
    <window class='worksheet' name='Top 5 Rank : Recovered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{731ECD40-98D6-4954-B251-D6D07C36F32A}' />
    </window>
    <window class='worksheet' maximized='true' name='Top 5 Rank : Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='4' param='[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Date:qk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0ED9D596-C939-47FB-9FB6-0F70A5F7E6C5}' />
    </window>
    <window class='dashboard' name='Ranking of Top 5 COVID Affected Countries'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1C6AF1C1-35B8-4D87-96E7-0E84AA53642B}' />
    </window>
    <window class='worksheet' name='Top 5 : Confirmed Jitter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Confirmed:qk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A2F89F0-0BB7-4E45-A129-A1AE452E9163}' />
    </window>
    <window class='worksheet' name='Top 5 : Recovered Jitter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Confirmed:qk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{095EF659-F81E-4D9E-A81D-917B395D1469}' />
    </window>
    <window class='worksheet' name='Top 5 : Death Jitter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Confirmed:qk]</field>
            <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9118340B-044C-4671-9BE7-1FA276B01ADB}' />
    </window>
    <window class='dashboard' name='Top 5 Countries Spread'>
      <viewpoints>
        <viewpoint name='Top 5 : Confirmed Jitter Plot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 : Death Jitter Plot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 : Recovered Jitter Plot'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</field>
                      <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Calculation_1391893795161939971:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[none:Country:nk]</field>
                    <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Calculation_1391893795161939971:qk]</field>
                    <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Confirmed:qk]</field>
                    <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Deaths:qk]</field>
                    <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[sum:Recovered:qk]</field>
                    <field>[federated.046qp0x1utghkh1dfz9q10vq6ine].[tdy:Date:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Italy&quot;</value>
                  <value>-0.11657856004027645</value>
                  <value>0</value>
                  <value>0</value>
                  <value>0</value>
                  <value>#2020-01-29 00:00:00#</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{82ADA8A3-4265-4652-AD5C-14C4D064BA91}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Ranking of Top 5 COVID Affected Countries' width='192'>
      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
      9A2O8j/+8i8Jz43x7vmJkmfOTk/x9Hf/mv/x199l5559zM7OsqVrC7B8n3NpZ6f5yfe/zde+
      /m26e/YyOzfLtu7tq/L0NTcxl18+wBAlFEnA6WvDSASK2qKodkQBRFEAVk8THbj7fnxOZfkH
      I8als+f42l/+JSdHIrR6Fb74pS9y5KWf8G9+/w+JJI1VeWwWVn2Zdu29g8985P38h3//R3z2
      y/8b8UQKl9POxKVJkLqLZtLQtoPf+/Ln+Y9f/RP++b/430te7MC9H+QP/+jPGDmzi/7Rudzv
      +w8/wH/4f79BvfUQr56a5F883sir75bMBgBnWw/6+N/xxtstvPvqCzzxG/+ct8fe4ejbbyEE
      +mnb/b5c2p899/ckZR+qEUH1Lr8h737kcf7tH/wRdu1jpMMB7vvw49x/ewd/9bdPs7fDy3Pv
      jfIv/+9fAeCBg9v59//fj/jqn/3XVbZEAtMcO/YeZ957g4MPf5ylx/XIqy/xa//sX3Lvnla0
      8Ahf/dZLPLj/HxUtz0MPvJ83BhIcuGMbwYTF+x5+jD/71tdIfege7PVtdG7p4rmXn8f+0Pt4
      8KF7+emJaQ7ctZtANMO+PYf4o6//DUr0Xi4NLT/wrtY9NGV+yPefeYE2j0Tjtv3savHw98+/
      ijZ5gX33PoLXMccrR9/CCvQyVeLF09TRyZnnn6O70c6OuiIJpAb27+1g26692DILiKLEkbff
      YGvPbYyPDBNLG/gcUvkKvV5YeQRnJ6xwLG1ZlmWlY2Grf2jM0pJR6+Sp01Y8tmCNTQWsWDhg
      BcIxy7Isa3RkxLIsyxoZGbUsy7LCgSlrKhC2RoaGLMOyrImRUStjWZZlpK3RsSnLMAzLtCzL
      skzr9/+ff509tkgiGrJOnDxlxVPZXwNTY1YsbVgFGGlraGRi+c9Myjp98oQVCEcty7Ksb/7J
      f7LeOddrXRocKTzPNKyBS+etsxf7LcNckaWets6ePmldHp3M/TY1NmSdOnPeyuQlziSj1pkL
      fbm/F4Kzi/chY506dsw6duy4NRdaKMh7fHjI0vKuNzQ0ZFlWxhpdKsPifcm/7snTZ62UpluW
      ZVnR0Jx14uRpK5nWLcsyrct9F6yhxfSzEyPWiVNLxyxrfmbcOn9p0BobHbUK75ppDfVftM5e
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 : Confirmed Jitter Plot' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZCUlEQVR4nO2da5AcV3XH//fefszsQ/uStJIledd6+KEHki0DMZCE8PiAUwRiA3ECVKhQ
      EIoKVEHlUUkKvgSSIkWqklAuQoCEPFx8wHGpKKgUCYRAMCY4NraQLEvW6i3vrqTVPmZ3pqf7
      3nvyYVbrnX3NTE/3TPf0/VW5rO7tPvd0zz19X+eew4iIYDBkFAsAJicnYezAkEUsACAieJ4X
      uRFIKWFZVqQyDYYoWaqdrutGLtzzPORyucjlGgxRwdutgMHQTmLtnzDGwBiLswhDAzDlA95N
      oGsLiInQcsTEc3D/70tgpWkEe96K4N4PNCUvGgj8zPdhnf0+KD8Aee9vgPp31LzLdNBjguky
      iFlA2ytGBebPoefZvwSfvwI1dBDzRz4RTregiNyTnwcvTQEA3BceB/WPItj95og1bgzr5Lfh
      fPcvANKV4/M/gvfIV0FdAxvfF6dSRJTJ2SUmC+i5+gXI3G4Uhx+JvgBSlf+YDdTZwtrXnoEo
      XAIAWDeOg8+eg+rb23DRfOEGWOlm1Tl28yzojjc1LAtE4DfPwXrpeyCnG/KeB0H5jSvseoif
      H1uq/ADA5sbBz/8Ycv+DG95nWoA4YBzEHBCPfmKBBXPoPfUoRGkCxdvfifL2X6nrPtW9E8QE
      GCmQyEPnt4YqX3dvhe69DaJwFQBAANTw4VCy+PUzyB/7GFhQAgDYp7+D4sNfBJzuxoWx1cNZ
      4rVbOGMAjaLLsLwxyPxd63YhSHSjsOuTAKIf/zg3noG1cBEAkL/yrfoNoG8P5u/9fVjTp+Bv
      fQ3I7g2ngOWi9Mufhnv8XypjgN1vgdzxmlCi7FPfXqr8AMBunoe48gzU7l9qWFZw7yPgky+A
      aQUA0IOjUHe8vuZ92TAA0nDnv4dyz5vX/FI0gl06ha6pb2B++CNQ7q71L6yjHFG8BKY9yO69
      leuJwOQ8SOQAbq95j+q5HcRsgALI3ga6MIxBDu6HHNxf/z3roPt2ofSLf9K0HBJrPOM6z10L
      tfeN8H79b2GN/aAyCD74dsDtqXkfIyKamJiIpa+emHUAIgj/JShnX9195nXRASz/EqQ72tQA
      l/s30ffS5wBSKIx8CLL3LrhTP0HXlScg8ztQ2PvRtSsDEcTCJQjvGvyBQ4BIwPsNCZu+iPyx
      j4MXb4IA6O2HUXr75wE7vmdiN8ZgP/lF8LlxqJHXZqQFYAzKvTMaWdyGzO1pWgwxC8QsMNIA
      dwAA1tyLYLoMq3gRPChAu4Orb2QMqmcEqmekaR3aDQ2MoPTuL0Nc+DHgdEPe8YZYKz/K83CP
      fRJ8/hoAgE+dy4gBJAHtgwez0M5mgDGQvQmz+/4QTAfQ7mYAgLftrWDah+zZDe2Emw1JG9Sz
      FfLgO1tSFh8/sVT5b2EMoEX0Xv4KrNIlFId/DeWB1wEAyO7D8o6nyu/A/J4Pt0fBDED5fhCq
      pyaMK0SL4HIWDBpczrVblcYgDffsE+j9nz9A/uQ/AMpvt0ahoS37oO5529JHhyw3I4PgBMDL
      12B5l+H3HgRiWB+IDKLFRTYOMA7rxgl0P/3nYIvVpnjgg/Bvf0u85Zfnwa+fBvXtAPVuCz9x
      UZ6H/dTfg4+fAA3tQfC6D4O6BsEv/RRsbgJ6x2HTBWoV2t0K3w23+NRK3Avfhjv2TZDbh4Uj
      HweTpaXKDwBMFmMtn0+cRO5bfwTmzYK4Bf8Nvwd5+F2NCyIN5zt/BuvcDyvHk6fAbpxF+ZEv
      Q48+8Ep5EemdKKzyaTA12241UgfzbiJ35nHwYB5i/ipyL30DwZZXwR++H8QdyP598He+MVYd
      nKe+BOZVfjumJZyffAUohfgtvQLExZ9UneLXz4BNX6o6t6oFkIGPcqDgOjYsy4JWEpoJWDw9
      Xp3SvavdKqSTxW7PK8cWIFwU7/0EWLAAsvIAj7fTwIrVfkaQJbCgCMr3NSZI2IDdVT1m4aJy
      bhlVT0NaYWxsDIObh3F98mUIO4etA90IeB6FmSnkuvvAggV42sLw5sG6umZpcobjugAQQYtN
      7ValLZDTh+I970du7BjIHUDpzvcs/n4MZC+uqsb8e8q9b4L99D8uzdSobYdAwobzX5+DmHwB
      avM+BA/8LnT35o0F2Xn4978PzpOPghGBwCAPvRO6d7jqGaoGwVqWcOnqNEZHbsP5c2MY6LYw
      7yk43f2YKwO2mgfXAcZvzODo0aMQNQzA8zzYdmU189a+gFsGsdHx8j0EGx3XI6uRsrqmHwej
      MhYG3xt7Wa18rlaUJV7+GZwTj4PAEBz+TajhA6HKYlrCOXkM4uJPQYMjKN/7W8h99zOwLj+9
      pL8cPoDSQ4+CGK/5XPbECfCJk9BDuxHsPAq26CC3VPZyAyAinB87A+H2wnUF+hxgrhTAzm9C
      ABvwZzE/PYMFX+HgwQOo1StK2ywQ00WANEjU9iGpQpfASINECC/GDoDNXkb3sY+ASQ8AQE43
      Fh76Kqh7S/OyF24g/7V3gelg6RwxgdL7HgP1b+CLVSdVXSDGGHbvre4/5/urjjC8dVvThSYV
      4l21L1qD3vEvg2kPczs+DvD0GHxUiMmTS5UfAJi/AHH9RcgIDICEC9h5oPyKASz17yMg0bNA
      wr8AphfarUZNlLMdytmWmN1fIIL78n9j09OfQtfpfwKWfT3jQPffXrUlkrgF3df81xkA4PYg
      OPpe0OLgnBhDcOQ9oK41/KRCkOyFMF0CmJOcipUSeOk6+n76p2AkQQCKd34A5dsa97GvGyLY
      J5+Ac/zrAOPw7/ttBHc+2Lzn7TL5fOIE+LUXoYf2Qu843LRb+y2SvRDG8+3WIJ0wVnF4Wfym
      Udwz2IwhOPgwgoMPxyZfbz8Evf1Q5KIT3QUyhEO7Q1jY937InhGUb3sT/OEHat+UUZLdBVoJ
      KVj+GUj3nqZFMTUHyzuFoPu1EShmSCspawE4pD1adYapaYjy2YYlEXOgraGI9GozRBDzVyDm
      L8W+UNU0WgHSr4rg0E6SPQZYCWMAqx4XkBiAEiE2j/AclNt4WJAk4lx7Ct1nvgYAKO59H8rb
      6x/w8tJ1QCvo7himt4MS+PQFUO82UH4AfPw43B/+FfjsVagdR1B+4x+Dutv7EUqXAWQQsXAJ
      uWs/gN93AMHgfWte49w8vuSxad88XrcBuBf/A/nTjwFE8Pa8A96ehyKbueHXTiH/n58CK04B
      Vg7lX/go7Gf/FbwwAQCwLj8NeupRlN/y6XAFeAWICz8GIw05+sDKBau6MQawAUwV0HXjMZSG
      3t227lLPuX+G8Mbh3HwGMz27Qc7qH7o8/HpY06cAaJS3vaFu2e7Ffwcjtfjv78Db/Y6KA1wE
      uP/7d+DFSvQ4SA/uk38DkrLqGnH9dCjZbGEKuSc+Bj5dCQ9jb9oO76EvgDZtb1hWysYArYWY
      A+WOgFj7Vnf1Yvwe4uuHSgkGD2H2/s9g9v7PIhg6Ur/s/PCyf2+JbG4dwKq9twAAt9pVRG0N
      N5lhnfzmUuUHAD43Duv5fwsnK9RdWYG78Prf1lYV5vd8EPbMccie3SBrfV8jchoPdLVw8EPI
      nzsG6GDx6x+dAciR18E5+cTSsRo+gPL9H4T7o78Gn74EtevV8B/4aCjZrDiz+lxpOpysVE2D
      GtKDLMN57jGIq89CD47CP/o7FfeF5fUs5HiDX34GuWOfWOq+EeMoP/hZqD2Nr3bHagC+7yOf
      N6u5hoghAj/zPYhnvw6Qhj78MNT+Xw1lUKYFMGQaMwg2ZBpjAIZMszQLVC6XI+8GBUG8fugG
      Q7PEmiUSgBkDGBKN6QIZMo0xAEOmiXUlmHMOIVq/ndHyx6CsrSAeMg2QITPEagBaayil4ixi
      TRTfCWheCfJqMKyENAAJMKdDu0DMitSvJSq4vFF9QnsQ/rn2KJNwuLwR2+YeRh5EUIkRmrxa
      0sEwXVhxwoG24ouzxHQhta0g0/MA4jEA4l1QTmUzlDGAFqKcO6pPMB46GFc9cHkToHSuxShn
      tCWteLoMgDR48HKoWy3v56H2oVrlk6n9iipnJJOR6hohXQYAhP4qSOdO1ExcTXKVkUh7L9L4
      mgz1kehflqlCpVIuneDh+8zcrekuK4LLYHpFDq867ssiXN6A8M/XvM4uPZ3oSBWJ3hHG9Fwl
      5mRE+1RrsaqPblgXbW0GUCNGP4Ag/+r4lWmCRLcA2t4BxDhIzBzkwyq/sOKcBCiizI/aa2m8
      H6bnIfzGY0ItJ9EGkEWs8unoKuQqbEhnX9UZrmbB5VQk0oUcB6NSJLLqgVgXlD3SlIxEd4Gy
      iLRHAKwd/aFpGFslO8pwLy3vQjKOZr/hxgCShpm2bCmmC5RGtAerfKrdWnQEVQZApHH2zCmM
      jZ1HWSrMF+agNMEvl+CVyygUCigWF1D2A3ilBRRLHmQQYG6ugEAGICJImc6Vx0awS0/XvihK
      dLn6mLmr+vJxE3YBMulUp0lVHiy3HywoYGryMs5fHMfQ8E6U5yYxvGUzFgKg5JXRlctDqCIu
      Xitg17Z+dAnC9eludOUdSMWwa/sr02O3vEHXywyotQZjbM3jW4n7Vh5zzpdkrTyutyymZiHk
      JAJnX8Nlld2joBrPRToAmBXJc9nlF+E7B1eUxcCYXpLNqQTGAOLdsbxDDoLWum2/V1xlVSfJ
      Ezl4C2NQgUZfVx79A0PYunkARZchlxPI9XZjbqEIrhVm5orodm1wJ4/hAQeB34/r549j36F7
      l4usuR/gloLrHUdJlWw+AG0PIK7dCpU8BncDzF5ddoOo/OEN9eScgykFgECcx/IOtdgBjjb+
      XjGVFVlcIOmXcGXyJkZ37Vg6Z+ICGeqBywkQ3xSrY+C6ZUclyHLyVZXfYKgXYnkQi2nqtwZm
      GtTQdkj0ta1sMw1q6HiYWj9ytDEAQ2pgqlD7ojXgan1XD2MAhtQg5NVQ993a/rgW6TcA7W3Y
      xBk6B+neHbnM9BsANFhCUm4a0kf6Z4F4F7TZM2AISQe0AAZDeIwBRIDwz68OepVmKMZM7kSr
      nfvaiDGACFDOHYt7ZDsDEVwCIy8m6QTLfykm2Y2T/jGAIXI2mjZsGsYhcwdjE8/lOIh11b26
      3JHRoQ3ZhbEhELMAVl+968jo0IYs4yyGFK2v3pkxgCHTGAMwZBqTJdKQaUyWSEOmMV0gQ6Yx
      BmDINGYdwJBpzDqAYTW6BDCn7sWkhiANu3wcQe5I9LJDYLpA7USXYJXPtFuLVQg5AVBcDmsM
      gRuNK0QlPPpYUzKMAbQT5kI6o43fRxJsg32uzaKcO+LLy8BYZAlPKuHRdzUlwxhAO2G80tVY
      hvDH6sjsSGA6Lm/NFLHG+2sUYwAhqOSwjQdtDQO1AjYyu5I9x9A0xgBCIILLsckm3pPILPed
      innTIZDuPe1WwRARxgCyBCkwNdNuLRKFMYAISM+eYA2uZ9utRKLoSAPgcrKymNMilD0KLaJL
      NhcbzG46q2JHoMvgchxAhxoAMTeeVcz1YKzjs8mHTQvFg5eTlyme8UodQacagOhven44K3A5
      CRFcrHld+Izv0YVXiaybyWyQGARgokJknsq6Q4zy7Z2RyWK6ACDa8DMrWgDC+PgEZmaqZwrG
      x8cjLdRgCEMcibhXtAAEr1TC5YvnMLr3Llw4fQLUvQVb+vJ4+colWJaFrv6t6MnV33AkNUtk
      FsoS6hq0GIAmq6OeK7YskQDAucDw1i3QMkBX32boxayDmwf7cOr8JA5vu23lLRuS2CyRaSqL
      gqVsk42UxckCuACPyPlso7LiIFFZImenJqGsXgz21e8laLJERoPtPZcY//mWQRpA/LNrdZtU
      39BwQ5U/FkhB+Ofbq0OdCP8CQDISWZmr/KgY/WKEq1hJ2TQogxb97VaiLrToQ+peb4II8veF
      cgpsdFU+XdOgjIPEQLu1qIu06NlpNDpTZD5RNbC9ZyPrysSKLoHpYru1SB3pagHaQJC7r90q
      1EUlnj8BMOmiGiHZLYD2ANo4qgRTM6kZGMcJiYGl5X1D/STaAIScqJmphPgmKPv2Fmlk6DQS
      bQDKGQXx7o0vYry1np9NENaj0tAcG733RBtAnDC9ABFcaWmZ4T0qDc2w0XvPrAEQc6FXTFUK
      /5zZMlgnXE1B+LXdqJNOZgzALj1TnfqTWau6V8oeAfH6kqtlHc0HVgWlssovgqlCmzQKR2YM
      IMgfrb2yyETH7+yKDMZXvU/p3g0SvQ2LssqnwVR79iqb6NCGtkNd+9v2JTbRoQ2ZJjNdIINh
      LYwBGDKNyRJpyDQmS6Qh05gukCHTGAMwZBqzDpBKqOImHmG0h6xi1gHSiPZgBedNnoIIMF2g
      NMJz0VV+CgDdeEZIpgrg8no0OrQRYwDLEP5ZMDXdbjVaCtMFcN34MxNzQDwfg0atxRjAMpSz
      t65oDmnZ2CL8szXzJJAYhLa2NS6cu5V8ZiknXQZAKhGJpdOysUVZOwEWz/pOp5CyaQQOZTcW
      mzTTcLMIWYt0GQBjIJb+ZteQHNLVBTIYIsYYQCupEeOoOdm6esunoS4SbQAiuNxR4f5s7/nY
      ZHN1DVxOxCY/zWy03TLRBqDFAChEsjsuJ1qaJrVegnx8YRa1tQ261gQB+bDKJ2PTIW5s72eh
      7hMbfBgSbQDEe0L5uxDLpyZYVmuxIZ272q3EKurdFB+4h0LJl+76z5xoAwgLib7Upkm1/DMA
      +fEIZyyRDnTSvavym9UiKt2JliJ+VxkA6QCnT53CpauVlEla62X/11hYKIK0rhxHo4phBdLa
      hbTNTqcNRkVY/jkAq940BwOBc4FzL70IpRSGhnfi9AvPY/j2PeCSUJqfhhYO9u+/u64QOiZL
      ZKNluSBNIJId9lxJKisPae0BlKpOkkc6wMTEDUzPzMJ1BWwG+IqBOQKBL+GKHGxHgDONbbft
      BK9hACZJniHpVLcAzEJfXy8GN2/G9cmXMbh5GHnXxkKpjJxb6VPfssa0x09jugAup6Cc0Xar
      kji4moLmmzZMzRoaIgBBYsZoVWMAxhi6unvgOjZ27hpBVz4HxgV6urtgWRYsy4IQAkKI1EcQ
      JNYFZW2veV1qUiRFCcnVi2qRLeIR7PKLNa9aFcs1JurOExwG0wXqHOzSM5X4qh1GR06DroUI
      Li02v4YwhK38TBcT/d4zYwDE0r97KY2IINn52zJjANraYkKftwHpHojvvVPQdEKTzBiAoQMh
      CUbVPl+dnSneYFgOz0Ov2Jiv7NHGRESoTmYRwWUwdbPdahiARX+n+rtcpgWIAGVtg/mWpBPz
      q0UBs2N1v7bqWDgyhMMYQDshDaYXal6mLBMJIy7SbwCkQoX2SwTkg8trtS8Tm1qgTPOkMU1q
      rGOA5a6ssZWhF8D1HJTYVfviFmJ7zyFwD2zsUCby0GJ36h0Lb6FylXilaXqe1A+CSfRB1bOb
      qMUEuSPtVsFQB7EawK1NCQZDUkn/GMBgaIJYs0QqpSBlxnzpDaki1iyRpVLyYvMYDMuJfRbI
      slI/zjZ0MGYMYMg0JkukIdOYLJHthCS4noUWQ+3WJLOYLlANrPKZGMOa6/jCIBrqwhhADZS9
      HbG9JuZA1xGapR64HAcPrkYiK0uYKZoaEO9ttwp1oUWITI8GYwAdg9nwH4rMdoGYmk1EylVD
      e8lsC0CiDzKBXqRpgcsbYLoA5dzRblWaIrMGYGgOLYaADpi+zWwXyNAka0RfEP4YmJ5vk0Lh
      MAaQRnQZwj/bbi1WoexdINbVbjUawhhABHA5vjrJG1F8QWGZDWXtiEd2MzAHYOmqUunStl50
      Kd6k1CuL4/0gXv3ls8vPA4hpLwTjADfBfqMg0QbA5bVQER+Eur4qZmSs8Pyqze9B7kg8GVYa
      QXupzR4vgistCau+IkukxvUbUyjOzmBmdgZnXzqLyanmou82BROhFniUfXslx3CHYJVPhLpP
      yCsARRMyhsvJSOTUC7UoneuKUjTmFxbg5CzMa8ALFG7r6W6qgGayRCr0gxSBMbVuJkBO8+Bq
      Dsre0bEZDn0+ClKq4bK0tbsiS8rFv9+SjcafS5WguW7ZO9R8K/TiM8dZ1goDYJBBAI9r5DcN
      YcvgEMbOn8P+u8NnF6+1H+CWgusd14S6Qdyp676my1qEqQJIbOwjFFVZlZs3bs3qLovKsPwz
      kLnGM66TGAVvpKwICFMWl5Mglq87mNiKJHkcw0N9UE4P+rtdTE6MY2Qk4St9zGr5gFDIlHpd
      MjdU5U8TxHtAvP797SZJniHTJHoWKFJIJTpZmyFGNpgSz4wB2OWfA9jYACoZDYPWKGRoGbb3
      /Lp/y4wBVOblN35cpmbAtNcijQytIsjft+7fjDfoMrRt4vBnjcy0AIbOg+kFCP9CUzKMASQM
      2zve9oQfVvmFyNyamZqpOfnA9DxAjftNEcst5mcLjzGAFlJPpQpyrwIamMeOA+nuj8yVRKjr
      Na9hahYsjMsGEwBvbprdGEALEcHldquwGpKxxiaSzr5qfy7SsLzjVddoeweIN+dyExZjAC1E
      uve0W4VVcDULLqdaWCKDdO8Od2tEhsp0EcI/ByBtBkAStvdsu7XoKLQ1BG1HE5yrLhirbJwJ
      gV0+FYkKlbFDZcbPuEIYMk26WgCDIWJMeHRDpjHh0Q2ZxnSBDJnm/wFOsmi4gQ8a/gAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 : Death Jitter Plot' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 : Recovered Jitter Plot' width='192'>
      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
      gaWUmYLYeuQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Countries Spread' width='192'>
      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
      /IXRVBAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Rank : Confirmed' width='192'>
      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
      RkdwJ5MgLUz/al539zQur6XEs7hAYGIMLZMFUan+5oYPVhr7T6s47q4xTYSUlU0aHqZOp2Uh
      LOvh25WysiWREGDjxhQ74lHktZQIy0QittQlbbqpEDWoaoM3B9oCRbG1m3XHCGHbfly75lHk
      tRAPHF1vqjaAg8NGnABwaGqcAHBoapwAcGhqnABwaGqcAHBoapwAcGhqnABwaGqcAHBoapwA
      cGhqnABwaGqcAHBoapwAcGhqnABwaGqcAHBoapwAcGhqnABwaGp2FQBSWhSLxT0tn3RweBzZ
      VQDMTk2wtLyCYTkB4PB0sKsASCVTlPMZEilnmyGHp4NdBUBrawsmAre7gRIeDg4PkV1JBHT2
      DtDZqDtxcHgEVAOgVCrtunErpaRcLtdohCqKUqcZuvGzzY6llDX2d3LO+mMhBEKIXZ0DoKoq
      5jr5vp2cY8e9PcjuXp5nJ/m40a5dz9OIcx6GX1QDwGOzNuRu2MzJnnbbzWb3vjjto+hB3O6Z
      HwthrEepMv2obDeb3UfZdb7dMz/8gTC9QCJbv20OgF7Ks7gcx9RLjI2OkivqtppOJDfX3jf1
      IhPjY6SyBZIri8zML9lq1zKK3L1zj5Xk/c0qJNnsWk9aNhVnbHwC3bTfSWYmx5iYnqse57JZ
      7ruDUS4yNjpKvlS/ndB+mJ0aZ3x6tnqcX2dTSovZ2VksCan4EtNzi7bZnZ+ZYnRiunpcyGa5
      X9mzTJ2piXFWkhkW52eYmJ5DSvkISgA9y8KKRWppFl8oRjGzTNlycfDAEGXdJJWMU8ql6O7r
      Y3JykiOH7NOtX1hYwCjlSRdMon6VeCpLZ+8QfpdCZ1cnM7OzpBMp2nv6kFC3n9desfQclhog
      6NUYHxvFGwyTmJ/FHYxyYKgfl9dP2JMhlSvTFra3KporlOgb6GZpYZZ03sAtyxTmJD39QyTm
      5+jp62NicpIjhw7YZjObL9Lb38nywiypvI5b6hTmJN19g/hUi1Q6RUdnO2Nj07R299iW15lc
      nu7efhLLC8TTeXxCklmYp7Ozj5BXpb2zk+nZBXq72klMTmPKrodbAkgpMS2JNHRKusHC4iKq
      y0fQpyElBIIhNFWhq7OD2elpDBvfiFJKFEUhl82yuLiIrlsM9HSQK5aRZpmpmSWGBnrxBWPI
      fAbd5pdxqZgnk1hiJVOgXC4TirXhVi0MC7LJOGU1ZLvzAxh6mUKxyOzMDHq5jOLyMtTbXgn+
      znZmpqcxbR7YNA2dQrHIzMwshq4jNA+DfZ0kkhk0t5eAzwPSwhuMIApZyjaZNw1j1e4MpmFg
      ojIw2E8ysYKQJtPTcwwM9CMtE2FJjIddAlh6kdH5LMP93czO6ATDAUJ+L4qoCPeuLM5RKBTJ
      FXWklAwODdpme256graObkrpFdra3ATDYVSXm5CiUMglEcIkkSnTEnZRtDTcNgoYK5qfwYEA
      4YCLbGEcr9ePnksiNR+aIigWS5TMEoVoGJ/b3p+ku7efWCyKLPeSKUkCfhdT8wn6BwZBzyMt
      e/MZoKunj1gshtB7SZdMQgEP07PL9A0OUcpnyOWLLMVztEY85A0Fj0153dndQywWQ5M6iWyJ
      cDjAzMQ0Pf2DlAoZJBbxRBKzmEX1+3ErYn/y6A4OTzrObFCHpsYJAIemxgkAh8cLKbEsC2lZ
      yNX/N2LnWMZjMRDm4LCGxbvv/o6OkIUROkxqcZLzp49SVryE3ZAu6Fy5fJEXnn+eYCTGfvds
      dwLA4fFCqLg1geFtw1y5gS/Ux9vv/A5PMIJLz+DrOUp2ZY5vro3wxsvP7ducUwVyeOwYaPWT
      MbxkklkGhodojUU5cvQoLa2t9LRGaO0ewGXm0G0Yv3C6QR2aGqcEcGhq/n/ff1Chmreh2AAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 Rank : Death' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dZ5Nk132fn3Nv33s7d0/OaXPALhcgkUgQJAGGokjKsmSVJMslqVRlqVwu
      v/A34Bt/BJVdJYsllyTLsk2bZYoZIEiAAQQWAEFgI3Ynh57YOd10/KJ3Z3d2wm7v3J5ZoM9T
      tVU70+F/zpnzO/fE3xFSSolC0aaEAJaXl1E6ULQjIQApJbVarWkRuK5LKBRqScIUioNgs/Za
      lnXfNzu1MtOzC/QNjZGMWdRqNcLhcEsTqFC0Eq2ZN6+trDF69AjZtdVWpUehOFCaEoCuQa1W
      w2/uYwrFI0tTNbl7YJDC+gZDQ/2tSo9CcaA0NYLVdIOR0dFWpUWhOHBUX0bR1igBKNoaJQBF
      W6MEoGhrlAAUbY0SgKKtUQJQtDVKAIq2RglA0dYoASjaGiUARVujBKBoa5QAFG2NEoCirVEC
      ULQ1SgCKtkYJQNHWKAEo2prDNfW514dIiIOLd5CxWh3vMMux1fFaHOtwBCAlwpNEslWMigOA
      EzWodkSQugi+QKXELNqECzWEK/ENjVo6jBM1WhJLc3wi2SqhmosUAidmUEuHkVoL8uZLrEId
      q1hHeBLP0qmlw7jhUEvyptc9Itkqet1D6gI7blJLhUFrgQh8SThXwyzZCClxrRDVzgi+oQWW
      NyGllJlM5qGsER/WGEuzPZLzBUKOt+X3rqlTGE7iG3rT37krUhJdrRDJVrm7yKSAcm+s8ccL
      sKLoNZfUfB7Nu1OeEnAjIQpDSaQeYK/Tl8SXS1iF+pa8+UJQGoxjx+9vdtYMRtkmsVhE87fm
      zY6bFAcSwYrAlyQXChgVZ0veXEsnP5xChoIpx6a+pWGhWN9fRCmJrlfQb1X+crWC4zaeArrt
      EVmvbn/s7YNQzd2s/FJK8qUiAEJCdK2C5vqBxUJKYqvlzcpfKJfxfA8BhKou4Vwt0LyZZXuz
      8vu+T6FcAkCTkthKGfwA/V79xnfervy5UhEpJQIwSzZWcZ/14m5ko+W/Xfkd16VcrQBsPoGC
      KsemBFDIrXNjanp/ESUY5UbGPN/j+7/6GYu3nOYEjT+q5vhorhfIP7Nob7YgU0sLvHTxl5tJ
      EZ7EKDuBxdLrHqGqC0DdsfnWay9RrJTv5K1ko7mtydu12Slee/etzbxpjo9RCS5vRtVBtxuN
      VrFS5n+89N075biZt2Biaa6PVbrzVHvr2iXeuX6lJeXY1Bgg1dHNRq7Rguq6jqY1/xgSUiJo
      qFfXdD527NSW1zXPJ75SQgbULdHrd7pZRwaHmV6av5MWaPQxy3YgsYQvEbdaJsswOTtxbGta
      bI/YchkC6imEau7m/0+PH2VpfatlZXSjgh9Ql0vz7jwpE9EYJ0bGtqal6jbyFgSSTbEBnDty
      gvcmr99Ji+sHVo5NCWBjNUM2m6W7b5BE1ML3m+8+SE3gmTpa1cVxHd6bvE7UCjPaN4AQAidi
      UBhKBtYvNwt1EktFBHB1dorpzAJruSzd6Q6kgFJ/HC8c0FyAL0lP5wg5HqVqhWuzU9iOw7OP
      XQDATpiU+uKB5S2yUSG6WgEp+c3Na0xnFihVKsSjUaQQFAcSgY2nhOvTMZVF+JKNQo7pzAJX
      ZiY5M34UCdTSYard0UBicasLd7vL+M4Hl5leWuSJk2cwQwZOzGiMOQIox0MZBBtlm+RCAXFP
      SF8TFIaSuFGj6e/cFV+Sms8TqrpbB8FAPWlR6g+uQiIbMzLxTGlb4+TrgvxICs8KbuJNuD6p
      uTwhe+tkggSqnREq3dFA8xbZqBJdq2zLm2do5EbTgQ1MoTFRkp7NbZlMgEYdyY+kAmu0DmUh
      zIk2FOyaOlI0ZmRcS2/8LhLwzKwmKA4mqCcsfE0gRaMyVjsilHtjwU4VCtEQVV8cz9A28+aE
      GzNAnhng7BYgQxqFoST1mLmZNy+kUemOUukKsPIDCNEQVU8UL9TImy8EdqzxxA6y8gP4t2YE
      7YixWY6eoTXK1gquHA/lCbCJ35gzR4Af0lozl3wbKdFcH+FLfF1rzXrDXQjPR3N9pBAHm7eQ
      1pr1hrtiCb8RT2q38tbihTDN8RGyNXk73JVgTeAHqOY9ESLY9YX7IHUNL8g5/704yLwJgdTF
      weYt4Cfn3ai9QIq2RglA0dYoASjaGiUARVujBKBoa5QAFG2NEoCirVECULQ1SgCKtkYJQNHW
      KAEo2holAEVbowSgaGuUABRtjRKAoq1RAlC0NUoAirZGCUDR1hzqkch7zyGLFpu63h3vIGO1
      Ot6hlmMjYCuDcXfugs7boQmgWCjy2q9nuDafQwg4PdLBcxfGicVjgcfyPY9L1+d4/eoy+VKd
      nnSE588NMT42EHiBSinJbeT5ya9nmMoUMEIa58a7ePZj41j7MRDYBdfzeefmGhevr1CqOQx3
      x3n+sUEGu6LBC0FKvHoFe20Rr1JC6CGMjh6MdC/iIUzS7hvO97A3lnHza0jfQ48msHqG0czg
      yvFQXCGyGzn+6tvvMV/wuGPvJRlPh/h3XztPKp1s+jt3Q/o+3/npe3zvUhZP3qkQpib5408O
      8dSFY4FWlMXFVf7qu1dYr/rcnbezfRb/9msXCEcigcVyPZ9/evUGP7u0tMUqM2aF+PMvnebs
      WGdgsQDcYpbK9GXkLS/X2xidfURGTgYqAul7VKYv4+bXt/xejyaIHj2PFgrGO6qpFPueS6lU
      3pcvqZSSf/7FDeYLd1cQAMF0zuP7r994KDHuxtz8Mt+/p/ID2L7gm28sks8WAovluS7f/NkN
      1quSe/N2adnmtbenAs3bpZkNfn4pg5TQk45yarQLIaBcd/mnV29Qv8d9ez9I36M6fwPpOtRt
      h5+//RsWV9YAcDaWcfJrgcVCSuz1zGbln5pf5P3rk0gp8SpF7NX5wMxxm+oCFfJZioU8ZXuA
      vs6H66o4tSqXFkvsZuz43nyRr5QqhKxgrL3fvbmKK3eOVbDh2uwqHwuo21XI5rm5Vme3vL07
      vcGnnrDR9GBsPt6+uYZ/qyLU6i4giIVNSlWblVyVhbUyRwaCeZr6tQp+reHQvLS6RqFUJpW4
      U25ObhUjGdwTx8nd8TlNJxPMZVbwfYmuC5z8OlbfWCBP7qYEELYs1nydgXT0oc1xXddjr4ap
      7kr+/uWrVGUwwxNZ2buFv3h9mV9MBWPqGqOOt0fDVKq5/NfvX8YLaPJtaeNOurvTUco1m1L1
      jtFvzXF3+thDIX0Pbg1HRwf7Genv5bW33uWzTz0BgFfKUZ58P7B4XrW0+f/phSUmhgfRb3sR
      3ZWW/dJULZufm0OYUWzHJaSJhzLHDUej9MZ1pnI7f3YwZfAXv30BTQumlXzz3Ztcf3V+x9d0
      IfnK00cYHxsIJFatWuU//fc3WK3s/PpEb5w/+eqFwMYc3784y7d+OQVAImohpSSzXsLxfMyQ
      Rn9HQGa1gGZFEHoI6blk8wWu3Jzm+NjI5utm9yDhgYlAYkkpqc1/gL22iC8lhVIZx3EZ6u1G
      0zS0cAzEIVyQcezUWY4emSBqPfwARNN1vvzxYQxtu4JNDb70xEhglR/g/IkhxtM7f9/jw1FG
      hnoCi2WFw3zhXB/aDq1TNCR58fGRQAfcz5zqozfdGFT/5uYy702u4NyyMX/yRC8dAd4QI0Im
      ZvcgAF3pFM99/GMM9TXKTphhzK5gGhFoTHWaPUOIkIEmBJ958nGeOn/mVo9DYPUOB1aO+te/
      /vWvl0ql+79zB1zXJRRqvqvS25Wi23KZXytRdyWagN6Yxh9+cphzp4Lp291GD+mcGU6yvpYj
      W3GRgKXDMxNxfv+FM4FOTQohGO5LE6fGwnoFx5foAgaTOn90IclQQhBKdASWP8vQOTmUJpOt
      UqjYIBozQE+e6GV+rcy5iS7CZkAz3VLiZJfRDAvpuY3bZ4SGHksSHTuFbgVrxqvpBnosiV8r
      35p1EoiQSSieRnpuYOV4aOa4Ukrq1Sqr63lA0NudwgyHW7aI43su6+t5SpU66USEdEeqJXPX
      0MhbpVRmbaNAKKTT053GME1q8x8gDAurbzTQfLqez1qhRrXu0pkIk4waTC8X+ebPJvmL3zpD
      Mmru6/ullNQWbiC0ENbAONJ18O0aQtfRzEjLyhEaYw+/XkP63mY3rLZwE6FpWAMT+y7Hw3WH
      bjOk9KnOXEOPxLH6Ru7/gX1yaWaD77w5w7//6mPEwg/XbZVSUluaatzbNXik5avMD5Ymn+rs
      dfRwFKtv9KG/R3PKai/QQSKERmT0BF6lgL2+1PJ4Z8c6+eLjI/ztj65Ss5ufEZJSUl+eRTr2
      I1P54VY5jpzAq5apry0+VOMtvBodCz9QAjhohKYTGTuFk1vD3lgOdGFsJy4c7ebJE738zQ+u
      ULMffGFMStmYhalXiYyceGQq/22E1mhM3Pwazkamuc96NunFlyh1PaEEcBgITSc6fhp7fQm3
      sNHyeE+e6OXsWCd//+NreA9wdaqUEmd9CbeYJTJyvKV9/P3QKMczOLnVB16JFp5NeuklqqmT
      1ONjSgCHhdBDRCfOUl+Zwy1mWxtLCD5zbpCJ/iR//+Pre4pAStloVfPrRMdOIQKckm4FQg8R
      HTtDfWUO5559Q9vwPVKZn1KPjVJLHgchlAAOEy1kEB07TW1xErecb2ksIQQvXhgmGTX4X6/d
      wN9FBG5hg/rqAtHx0wj9cC8QelBEKER0/Cz1zMzu5Sgbld+O9FHpeGzz10oAh4xmWkTHz1Bb
      mNyy/N8qfufZCQxd49tvTG/uI7qNW8pRX54hOn7mQ1P5b6MZJtGJs9QWJnErxa0vSkly+ed4
      ZoJKx7mtnzvANCp2QbMiREZPUp29hlfbZR9FQAgh+J1nJyhVHL775szm791yntrSFNHxs2jG
      /tYNDgvNtIiMnWqUY/XWPikpSay9gdRMSl0f37ZYpwTwiKCHo0RGTlCduYJv11obS9f4g88c
      YyVX5dX3GodbavM3iYycRDOD2z5xGOhWhOjYaapz1/DrFeLrbyG8OsWep3bcP6QWwh4x3HKB
      2sINohNn0YzWVkbX8/nr713iVLzG80+fQY8EfxrvsHArReypd+lN2ZSGPgNi58G8egI8YoRi
      Saz+cSpTl/DvOXkVNJpn8wcTdX69EeLdhdZ2vQ6aRH2WzmiVTKUD39t91/I2Abzx85f54Q9/
      yI3Z5hYXFMFhJDux+kapzlxpbDxrAb5jU5m5QnLsOH/5lXP8/HKG96fvM434YUBKwoUbhEvT
      1Mc+i9U/tmdjskUA85NXmZxb3fGNioMllOzC6OijMnUJ6QV3tBHAd22qM1ew+sYIxVNErRB/
      +vmTfPfiLNfmc4HGOlCkxCrPEslfJTf4eaRmEEp0YHYPUp2+vGM5bhkDSCnJZJbo7+9neXmF
      /v7+PeOpMUBrkVJiry/hFXNExk4FsiIrPZfK1CWMrgHMjt4tr20Ua/zND67wh585zkhPfN+x
      DhQpMSvzJNYusjH8ZaS+tV7aG5kdF/e2lGitsMaPf/wyr7zyCjU/mFP3iodHCIHVPYgeS1Cd
      vYaUzZ/Auxvp+1RmrmJ09m+r/ACdiTB//sXT/N3L15hfa/2aRJAYtRXia2+RHfzCtsoPYHb2
      E4qnqM5cRd51knGLACKpHs6eOMLG6hLZfHHblygOB/OWF05t/uEdM6TvU5m+jJHsxNih8t+m
      Kxnmz754in/48XVW89WHTfKBEqqtklx+jfzgi/jG7k8us3sIPZrYUo7bnqnRdA/dnSmEbM3g
      S9E8QgisgXGEHqK+1Ly1ipQ+tfkPCMWSGF33NwMb7Izxrz93gv/20jXWCq1dk9gvup0nlfkp
      +YEX8IzEnu8VQmD2jiAMY1ME2wSQDGsMHzvPcN/urYTi4LktAt91qGdmHlgEUvqNE1SG2fjj
      P+C25pGeOL/9zDjf+MGVxnHLRxDdLpBe+jH5/s/iWg9mySKEwOofB6CemdkugLnMOqsL15ma
      mQ00sYr9I4RGZPg4fr2K/QAHQaSU1JemAbD6x5ve039iKM3Xnm6IoFp/tHoEmlsmvfgjCj3P
      4Ia7m/qsEILw8DF8p75VANJ3kZU8l6c2OPPY6UATrAiGxkGQk7jFLM4ep8o2T3N5LuGhh7d/
      PD3awWfPD/Gfv3OJ6kOcKmsFwquRXnyZYs/TONGHc6MQQhAZPr51GvTKu28S7z9C2CuwmJd8
      7PSRPb9ETYMeHtJzqUxfxuzoRXerONkVpOugR+IYPSPUq1W8cp7I+GnEPj10pJS8fnWZ30yt
      87Wnx3nj+gpzqyWiVognjnZzbqKLkN6CTQW+S7g4Sbg0jfAdnEgv1cRRUss/o9xxnnpifN8h
      tgjgN2++xuxyYz917/AET104u+eHlQAOF+nUqV/5JXXvbi/Shs2MGYljHn8i0AMt3/rFJC+/
      u4Dj3jWNKASffmyA3//00WBF4Lukl14hXLyJuOWzJAEpQhT6Pkk1vXfdfFC2bPo++8QnOQvo
      u3hXep6L6/mYhtlSS3jFgyFzmXsqP4DAl+DVKwjPhYAE4Lg+V+aym5XfMnVsx8OXktfeX+TU
      cJrHjwVkMiYlkcJ1wsUbCKBab2xjiFgGSBfdrTXMcQOohFske/ndN/m/3/o/XLx4kcWV7WdV
      i/ksCzM3Wc19tDZOfVhxsyvsZsTreD4Ug3NszmQrzK019tjHIgYT/R2cP9IHNDyy3r4ZoDs0
      EClOImh0v67OrfPN167ieT4CsIqTwP4WBW+z5Qnw2ONPIwQsbxQ5EtnuKxmNRFiVOobOQ5vj
      KoKjYVi71+vuLvJoHtv1NmedHNfHdj1WsnfMeYO0YgeJ8ButvhCCVMwiZhl4vkTXaaxRSbmb
      9ptiSw0WQlCqezz95DkmP7i57c35fB6haRimged5D2WOqwiOUKKD3VySNQEi3hVYrIHOGOlY
      43xCVzJCOh7GNO50r06NpAOLBYJ6dAgJ+FIyv1ogGjbQ9UaNdyIDu+7vb5ZtBz+PjY3y3qWb
      nP3YhW1v7ukfIjgrWcV+0XvGsHKr1O2Gd+YdJIlUAqzgDrhEzBBffXqMf/zJByytl1hav7NX
      KB4x+MTxABdOhaDS8RjR3GV0r8rz58c2X/JCcUpdjwfmQ7rtRNjKyjLpRJRMtsLoYN+eH1az
      QI8AtRLOwnXsYh5fSgwhiBthUrElCn3P4USCq5i+lLw7ucYP355nNV/FDGmcn+jCMnTqjscf
      PB/QdVNSEs2+h1lZROoWVnkepIdrphtz/5H+1gigXMzxwdVLvPX+Db76O79HX8feW2KVAB4R
      pATXBs9BaAadb71J7vHzpDM/otD/aZxwsNtafF9Sc1xCmoYRavSi/9/r09iuz796bv8WiuH8
      dSLFG2QHvwhCv9Xn95GaGfiNlFvGAHatikeIoxNjVCtqpudDgxBgWBCOI02LWl8/1vI6ucEX
      SWV+il4P1nhL0wRRy8A0dIQQCCH42tPj1B2P77754PuUdiJcuEGk8EGj8mshEAKpGUjdasl1
      rFsE0NEzgFOvkEwmsUx1HuDDSmV4lMj8PF4oSW7ghYYI7NYab2ma4I8+e5z1Qp0fv7vwUCKw
      SrNEc5fIDb7YqPwHwLZ5TEMXrK2tUa7WDyQBiuCRpkm9p5fI0iKu1UWx95OkF19Cc1p7xkO/
      JYIbi3lee78592uzskhs49fkdjnQ0iq2CSAWT1CvFqm7aorzw0x5fILo3Az4Pk6kl2LPM3Qs
      vozwWtuwGSGNP/38Kd6f2eCtDx7gfLmUGNVlEiu/JDfwAn4ouHvNHoRtAnCFSSysUy0Ed3+u
      4uCRpomTTGOtNiqhHRui2P0JOue/13IRhE2dP//iKV59f5Ff32eFWLdzJFd+Tm7wC3ue5moV
      WwRQrxSoVm0ufOJZUum9T9coHn3K4xPEZibh1oKlHRum3HGW9OJLCL+1h1zCZoi/+PIZfvTO
      HNd3cZrQ6znSSy+T6/8cnhnMfcbNskUAV65cZWJ8kH/+7sv096klrw87XjSKF45gbtzx+6kl
      j1NLHiW19BPwW2u8FQsb/OVvneXbv5rmxuLWQbjmlEhnXqHQ92k8q6Ol6diLLQKIhXVe/9Vb
      xKIWi8vBbm5SHA7liSPEZhp3fN2mmjyJHeknvfQK7NNp4n4koyZ/8vmT/O+f3WR2pTEI19wK
      6aWXKfQ8gxPZe7G11Shv0DYg/eu3KU8cwUndtV9HSmIb76A7RQp9z7dkjv1uMtkKf/fyNf7s
      cxOcKr1Cqevj1OMPf8FdUKjtnG1AefwIscl7NjcKQbnzcXw9THLlZy1/EvR3RPnj58f5xrff
      YNo480hUflACaAucVArheYSK98zsCUGp+ymQkvj621u6SUEjfIez9uv8m0/1819+UXlknCaU
      ANoBIRozQlOT2yu5EBT6nkNzy8Q2ft0aEUiPZOan1KPDDB0/z794doK//t7lR0IESgBtgt3V
      jV6totV3MLoSGoXeT2HUVojmLgcbWPqkMq/iWt2bd3OdGErzwoVhvvGDKw91f3GQKAG0C0JQ
      HhsnNj218+taiNzAi1jlGcKFG8HElD6JlV/ghaKUO89vGWg/frSbTz82yDd+eBU70NNkzaEE
      0EbU+/oxs1m0+i4rwVqI3OAXiOYuES5O7i+YlMTXLgJaY5yxgzXLE8e6OTfeyV9//wruHpdY
      tBIlgHZCCCojI0Rnp3d9i9QMskNfIpp9H7M8/3BxpCS2/ja6W6bY+8yuU6xCCJ47O8CpkTT/
      +JMPDkUESgBtRnVgEGt1FeHsPgCVepjc4OeJr13ErCw2F0BKornLhOwc+b5P79jy383t+4s7
      E2H+52s3DlwESgDthh6iOjREdH7v1t0PRckPvEBi5ZeEag+4K0BKIvlrmOU58v2faWpP/289
      Odq4v/hX0/s6UNMsSgBtSHVwmHBmEeHuPQPjmUlyg58ntfzqA50qs0rTRAofkB94oekDLUII
      fu+5oziuz3femLn/BwJCCaANkYZBvaeP8NL9uzeemSLf9xk6Fl+6c6pMSoRng+9urhtYpRli
      2ffIDn0JqT/cRduaEPzup46wkqvyo3fmNq/tsl2Pmu215Mmg9gK1KVq9TsfbF1l/+ll4AIOz
      xqGV16l0nCGau4pu55CaQT0xgR3uI77xDtmhLwVyoMVxff72pasc6U+yXqhxeXYDx/UZ7Irx
      lafGGeuNB+M+gRJAW5O4egUnmaQ2OPQA75bEVy8SX794jwNRY+Zofex3H/iSigchW6zx9X+4
      uM1xricV5j/+y4/RmQim3jXZBZJkNzYCcmVUHDbl8QmiszMPtP1BeA6RwrXNyr+Wr5Ar1RA0
      9vmYlebOAO+FlJJfXl3eUvn7OhomX6v5Gj94ay6w7lBTI5VaKcf1D6b4+NOdavDwEcAPh3Hj
      Ccy1NeyevQ9AhewNdKfhBud5Pq/+ZpaRniRPnhpsGNaWZ6l0BGNZLiVcnr0z6B7vTzHWl2b5
      lhfp5dkNbi4V0LX9d4OaEsDk1Ay+WydfrNCbTihz3I8A5YkjpC6/z0Z3995nAu5qcS9eX6JS
      c5hcyvLkqcHbbwg0Xbdb+JAuOD7cRSxibjrQVeoub1xbDmQc0JQAzpy7wPrKKulEVJnjfkTw
      YjF8w8DMbmB37m6m61od+KEIulvh6dNDnDvSS2aj8USQgB0Z3PWzzSIEHBtMcXOpgOtJfnRx
      kpHe5GaX6PxEF3/02eOBCKDpJryrt4fg7hxRPAqUJ44QvefY5L1I3aLU9XFuXywatQyODHQg
      obHTM30qsPQIIfjc+SF6UpHN382tNM4ypKImX3xiNLBZINWHUTSOSkq2H5jZgqCSPkNu4HM4
      Vie+ZuDpEaqpk2wMfzlwM6t03OI//PY5Pn6sh3jYIGzqjPbE+bMvnKK/I3L/L3hA1DSoAgBz
      Y53I/Bz589tt8bcgJeCjeXWkCCE1o6XniaWUVG0Pz/OJho3GvQcBxlNPAAUAdkcner2OXi7t
      /UYhQOj4oWhjxbfFh+mFEEStEImoia6JQCs/KAEobnO/AzMfUZQAFJvUu3sIFYs7H5v8iKIE
      oLiDplEZGyc6M33YKTkwlAAUW6j19WOtrSHsw3dsOAiUABRb0TSqw8MNa/U2QAlAsY3q0DDh
      TAbhtNY891FACUCxDamHqA0MEllcOOyktBwlAMWOVEZGGwLwDs+z5yBQAlDsiDQM6l3dhDPB
      7fN/FFECUOxKZWSU6Nzs5g0zH0WUABS74kciuMkk1sryYSelZSgBKPakPH6E2B5Och92lAAU
      e+JFIo17xtbX7//mDyFKAIq9EYLykaPEpm629AKNw0IJQHFf3FgcqWkY+Z2vO/0wowSguD9C
      NG6bnN772OSHESUAxQPhdHQiXJdQ6T4HZj5kKAEoHpjy+ETj8PxHCCUAxQNjd3UTqlTQK+XG
      Fgnfb32XSMpGHM9rSazmPKwVbU+9s4vOi280PEFDBrW+fiqjY0jDCDyWsG1i01OEV1fA83CT
      SUpHj+HGE4GdRVYCUDwYUmKtLBOfvIF21wY5I5/DzG6QffwJ0IOrTsJx6HzrTYxcdtOP1CiX
      CBUKbDz1DH5AbiRNdYGq5QLz8wvY7kd3b4hiZ4Tnkbx6Gc3zsF2Xi9MzVOp2wxd0dYXIYpNX
      Ke2FlERnZzYr/+TqKu/MzAINEcQDXJNoSrILCwvE0z2E9NZaYSgePUKlInq1CkDddRlKp/np
      9Wt8+dw5BBDOLOF0dAQTTEJ4ObPZ8v9qcopnjh7ZfNlaXSE0NAIHbY47MjpOdi3DykaEod6k
      MsdtJ3y52erGTJM3p6ZJRe44tIXKJWI3bwYUTG6KTUrJi6dP89oHHzDc0YGh62h1m/jUTSQH
      LIBiLkuh4jDcYylz3DbDi8fwTRPdtlkpFnF9n/Ctga8EKiNjlI8eCyaYlCSuXiE2PYkErmaW
      iBgGoVsNbr23l9z5C4EMhJU1ouLBkJLY9CSJq1e2tbtOPM7GU8/iW1Zg4bRqle7Xf45e2+pR
      5BkmG08/g5tIBhJHzQIpHgwhKI9NIPUQselJtFoNNI16VzfFk6fxzYe7GG83/JE08gQAAAVf
      SURBVHCYjSefJnH1CmZ2A6TEi0QonjzdmAYNCPUEUDSHlAjfQ6vbSF1vVPxW+oNKiWbXEb6P
      Z1qNC/0CjKeeAIrmEAKph/CiB1R1hMC3WtfIqmkcRVujBKBoa5QAFG2NEoCirVECULQ1SgCK
      tkYJQNHWKAEo2holAEVbowSgaGuUABRtjRKAoq1RAlC0NUoAirZGCUDR1igBKNoaJQBFW6ME
      oGhrmhKAlD61Wu2hzg8rFI8iTQlgcW6G1bV1XF8JQPHRoCkB5HN57EqRbL7cqvQoFAdKUwLo
      6urEQ2CawVthKxSHQVPeFn1Do/S1KiUKxSGwKYB6vd704FZKSa1WQ9O0LT6hzfwshEDTNLxb
      nvNCCIQQm6/v57t3+lnX9c1Y+/2+e9O6U9qllJvlGnRemsnb/dIqbplN3Z3We9N+989BlmOz
      eQvyuzcFYAXo69gs9ybwoxLr3krVaj6q5djKeI+EM9xBFuRBxjro6eKPajm2Mt7BLoRJn2wu
      v+NLvuewmFlGSo+F2Wk28vu/jjOfy7FzsUkyC7MsLq9Rr5aYnp4hiEtvluZnmJpd2Py5Uipx
      u5Pguzaz01NkA8gXQLWU58aNmxTKt92TfUqlyq3/S9ZXlljIrO7/IhXpMzN1k4XM6uavSndd
      lep7LotLGZCNmMtrG/sKt7a8wOTUnb9HvVq+cyOR7zE/O0OxXGVhboallfV9xYKDfgJIyfLK
      KrVSDgcTUzgUS1VGjp5EODb5fJ6uqEBGulhbXqQjdWJfVyCsLi8jdFheWqG/v5+l5WXiyQ4G
      +zpJd/YyNz9Pcb2KEUncaq33Z7paqtQYHB5lfTVDrljDEh6VzBL9g6PETEFvfz8Liyt0pOL7
      igNQLhSIpzsxNZfJmzdJdXUyPzlDureP0cFucmWHkCxT97oIh/bRzkmPmu0zOpAkszBLzQ/h
      1wos+jrjx48hbZt8IU9fd4KZuWUGR0fZT0nmiyX6+oepFNZZWcsRj4RYL9r09Q/QnQiT6kiz
      vr5BT2cncwsZBnq7Hj5vHOAT4PYAStMFpVKF5ZUVXKkx2hOjWAcrEiNshjDjnXilVco1Z9/x
      0DQqpRJ+vcDyepGOvkF8pwYIMotzDAyPgGYw2JtgeWXnJ1MzuK5DpVpjcWEB13VBMxgdHSKb
      zYHvMjefYXRsZN9xGkiq1QrrmQVKjsS2bbp6B/CdGkKEiFsaa9lCIJEcu06tXmNhYRHHtjEi
      ccZ7o6wUHKxIlLBpIH2PREcvtUKW/ayT+p5HpVJlcWERpIvtwcjYKKVcFilgfT3PyPAgnuvs
      8nRvjoPrAkmfubkZBgaGsSyT7u4ukskkeiRJzIRSfoNqtcb6rS7C2NjYvtrjQnYNK5YkYlmY
      0RQd6QRRyyCZTIJvU7d9NtY3GB7sZSGTp7dn/xcu9A8M0dPVwdDQEKZlkUhEmZ/L0NfbTa1S
      BeGTzQVTKaOJNIP9/fQPjxELQSQcxa0VicRTm81v/9AI1n5afwChMzQyQkcqxdDQIOFIhKih
      M5d1GUwZlAtZqtUa+QrEDAcznmI/V8h19w7Q29vNyPAQQjdJJZMsL8zT1duLZ1eo2Ta5XI5s
      Nkc8gHsC9nU/gELxYUftBlW0NUoAirZGCUDxaCElvu8jfR956//3EuSawCOxEKZQ3MHnpZde
      oTfh4yaOk1+Z5YlzJ7G1MEkTClWH37z7Dk89+STxVMe+BtygBKB41BA6Zkjghrvx1i8TSQzz
      /R+9ghVPYThFIoMnKa0v8db7N/ncpz6x73CqC6R45BjtilJ0wxRzJUYnxunqSHPi5Ek6u7oY
      7ErRNTCK4ZVxAjiYpaZBFW2NegIo2pr/D71fFSnxaghsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 5 Rank : Recovered' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
